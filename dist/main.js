(()=>{"use strict";var e={985:(e,o,t)=>{t.r(o)},827:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.content=void 0;const r=t(149),a=t(338),d=t(841),n=t(167);o.content=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["content"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["content-top"]);(0,r.appendElemToParent)(o)(t);const l=(0,r.elemCreator)("div")(["links-container"]);(0,r.appendElemToParent)(t)(l),(0,r.pipe)((0,r.addTextToElem)("Made by Athma Vasi"),(0,r.addAttributeToElem)([["href","https://github.com/Athma-Vasi"]]),(0,r.appendElemToParent)(l))((0,r.elemCreator)("a")(["link-author"])),(0,r.pipe)((0,r.addTextToElem)("View Code"),(0,r.addAttributeToElem)([["href","https://github.com/Athma-Vasi/Todo-List-App"]]),(0,r.appendElemToParent)(l))((0,r.elemCreator)("a")(["link-repo"]));const i=(0,r.elemCreator)("form")(["form-searchTodo"]);(0,r.pipe)((0,r.addEvtListener)("submit")(d.handleSearchFormSubmit),(0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-searchTodo"],["name","search-todo"]]),(0,r.appendElemToParent)(t))(i),(0,r.pipe)((0,r.addAttributeToElem)([["for","searchTodo"]]),(0,r.appendElemToParent)(i))((0,r.elemCreator)("label")(["label-search"]));const c=(0,r.elemCreator)("input")(["searchTodo"]);(0,r.addAttributeToElem)([["type","search"],["placeholder","search for a todo"],["id","searchTodo"],["name","search-todo"]])(c),(0,r.appendElemToParent)(i)(c),(0,r.pipe)((0,r.addAttributeToElem)([["for","select-filterByPriority"],["name","select-filterByPriority"]]),(0,r.appendElemToParent)(t))((0,r.elemCreator)("label")(["label","label-filterByPriority"]));const p=(0,r.elemCreator)("select")(["select-filterByPriority"]);(0,r.pipe)((0,r.addEvtListener)("click")(a.handleFilterByPriorityClick),(0,r.addAttributeToElem)([["name","select-filterByPriority"],["id","select-filterByPriority"],["title","select-filterByPriority"]]),(0,r.appendElemToParent)(t))(p),(0,r.pipe)((0,r.addTextToElem)("--Filter by priority--"),(0,r.addAttributeToElem)([["value"," "]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("immediate"),(0,r.addAttributeToElem)([["value","immediate"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("urgent"),(0,r.addAttributeToElem)([["value","urgent"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("high"),(0,r.addAttributeToElem)([["value","high"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("medium"),(0,r.addAttributeToElem)([["value","medium"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("low"),(0,r.addAttributeToElem)([["value","low"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-filterByPriority"]));const m=(0,r.elemCreator)("select")(["select-sortByPriority"]);(0,r.pipe)((0,r.addEvtListener)("click")(n.handleSortByPriorityClick),(0,r.addAttributeToElem)([["id","select-sortByPriority"],["name","select-sortByPriority"],["title","select-sortByPriority"]]),(0,r.appendElemToParent)(t))(m),(0,r.pipe)((0,r.addTextToElem)("--Sort by priority--"),(0,r.addAttributeToElem)([["value"," "]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("option")(["option-sortByPriority"])),(0,r.pipe)((0,r.addTextToElem)("low to immediate"),(0,r.addAttributeToElem)([["value","lowToImmediate"]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("option")(["option-sortByPriority"])),(0,r.pipe)((0,r.addTextToElem)("immediate to low"),(0,r.addAttributeToElem)([["value","immediateToLow"]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("option")(["option-sortByPriority"]));const s=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(s)}},149:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.pipe=o.addStyleToElem=o.addEvtListener=o.createImage=o.addAttributeToElem=o.addTextToElem=o.appendElemToParent=o.elemCreator=void 0,o.elemCreator=e=>o=>{const t=document.createElement(e);return o.reduce(((e,o)=>(e.classList.add(o),e)),t)},o.addAttributeToElem=e=>o=>e.reduce(((e,o)=>{if(!(o.length>2))return null==e||e.setAttribute(o[0],o[1]),e}),o),o.addStyleToElem=e=>o=>e.reduce(((e,o)=>{if(!(o.length>2))return null==e||e.style.setProperty(o[0],o[1]),e}),o),o.addTextToElem=e=>o=>{const t=document.createTextNode(e);return null==o||o.appendChild(t),o},o.appendElemToParent=e=>o=>{o&&(null==e||e.appendChild(o))},o.createImage=e=>o=>t=>r=>{const a=new Image;return a.src=e,a.alt=t,a.title=r,o.reduce(((e,o)=>(e.classList.add(o),e)),a)},o.addEvtListener=e=>o=>t=>(null==t||t.addEventListener(e,o),t),o.pipe=(...e)=>o=>e.reduce(((e,o)=>o(e)),o)},544:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleAddNewProjectIconClick=void 0;const r=t(676);o.handleAddNewProjectIconClick=function(e){(0,r.projectModal)();const o=document.querySelector(".addProject-container");o&&(o.style.visibility="visible"===(null==o?void 0:o.style.visibility)?"hidden":"visible",o.style.boxShadow="1px 1px 1.6px 1.6px #63526f61, 1.6px 1.6px 2.6px 2.6px #63526f61")}},979:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleAddNewTodoIconClick=void 0;const r=t(234);o.handleAddNewTodoIconClick=function(){var e,o;const t=null!==(e=this.dataset.name)&&void 0!==e?e:"",a=null!==(o=this.dataset.colour)&&void 0!==o?o:"";(0,r.todoModal)(t,a);const d=document.querySelector(".todo-container");d&&(d.style.visibility="visible"===(null==d?void 0:d.style.visibility)?"hidden":"visible",d.style.boxShadow="1px 1px 1.6px 1.6px #63526f61, 1.6px 1.6px 2.6px 2.6px #63526f61")}},279:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleArchivedTabClick=void 0;const r=t(944),a=t(149);o.handleArchivedTabClick=function(){var e;const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(o)(d),JSON.parse(null!==(e=localStorage.getItem("archived"))&&void 0!==e?e:"").forEach((e=>{(0,r.addTodosToContent)(e,!0)}))}},256:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleCreatedTabsClick=void 0;const r=t(944),a=t(149);o.handleCreatedTabsClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(e)(t);const d=this.textContent,n=[];Object.keys(localStorage).forEach((e=>{var o;e===d&&n.push(JSON.parse(null!==(o=localStorage.getItem(d))&&void 0!==o?o:""))})),n.forEach((e=>{(0,r.addTodosToContent)(e)}))}},338:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleFilterByPriorityClick=void 0;const r=t(149),a=t(944);o.handleFilterByPriorityClick=function(e){const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(d);const n=this.value,l=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&l.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const i=[];if(l.forEach((e=>{e.todos.forEach((o=>{if(o.todoPriority===n){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};i.push(t)}}))}))," "===n){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(e)(t),l.forEach((e=>(0,a.addTodosToContent)(e)))}i.forEach((e=>{(0,a.addTodosToContent)(e)}))}},339:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleInvalidProjName=void 0,o.handleInvalidProjName=function(e){""===this.value?this.setCustomValidity("Please enter a project name!"):this.setCustomValidity("Project names can only contain upper and lowercase letters. Please try again!")}},182:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleInvalidTodoName=void 0,o.handleInvalidTodoName=function(e){""===this.value?this.setCustomValidity("Please enter a todo name"):this.setCustomValidity("Todo names can only contain letters and numbers. Please try again!")}},220:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjNameValidation=void 0,o.handleProjNameValidation=function(e){this.setCustomValidity(""),this.checkValidity()}},749:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectCloseIconClick=void 0,o.handleProjectCloseIconClick=function(e){const o=document.querySelector(".addProject-container");o&&o.remove()}},709:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectFormSubmit=void 0;const r=t(265);o.handleProjectFormSubmit=function(e){var o,t,a,d;e.preventDefault();const n=document.querySelector(".addProject-container"),l=new FormData(this),i=null!==(t=null===(o=l.get("addProject-name"))||void 0===o?void 0:o.toString())&&void 0!==t?t:"",c=null!==(d=null===(a=l.get("addProject-colour"))||void 0===a?void 0:a.toString())&&void 0!==d?d:"";var p;localStorage.getItem("projectNames")||localStorage.setItem("projectNames",JSON.stringify([])),p=i,Object.keys(localStorage).forEach((e=>{var o;if("projectNames"===e){const t=new Set(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""));if(["Sample Project","archived","projects"].forEach((e=>t.add(e))),t.has(p))return void alert(`${p} already exists as a project (｡•́︿•̀｡)  Please choose another name.`);t.add(p),localStorage.setItem(e,JSON.stringify(Array.from(t))),(0,r.addProjectToSidebar)(i,c)}})),null==n||n.remove()}},998:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectsTabClick=void 0;const r=t(944),a=t(149);o.handleProjectsTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))})),d.forEach((e=>{(0,r.addTodosToContent)(e)}))}},841:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleSearchFormSubmit=void 0;const r=t(944),a=t(149);o.handleSearchFormSubmit=function(e){var o,t;e.preventDefault();const d=document.querySelector(".content"),n=document.querySelector(".content-bottom");null==n||n.remove();const l=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(d)(l);const i=null!==(t=null===(o=new FormData(this).get("search-todo"))||void 0===o?void 0:o.toString().toLowerCase())&&void 0!==t?t:"",c=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&c.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const p=new RegExp(`${i}`),m=[];c.forEach((e=>{e.todos.forEach((o=>{if(p.test(o.todoName.toLowerCase())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoDescription.toLowerCase())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoDueDate.toString())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoPriority.toString())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}}))})),m.forEach((e=>{(0,r.addTodosToContent)(e)}))}},167:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleSortByPriorityClick=void 0;const r=t(149),a=t(944);o.handleSortByPriorityClick=function(e){const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(d);const n=this.value,l=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&l.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))})),console.log(l);const i=l.reduce(((e,o)=>(o.todos.forEach((t=>{"immediate"===t.todoPriority?e.set(5,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"urgent"===t.todoPriority?e.set(4,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"high"===t.todoPriority?e.set(3,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"medium"===t.todoPriority?e.set(2,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"low"===t.todoPriority&&e.set(1,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]})})),e)),new Map);console.log(i);const c=Array.from(i);"lowToImmediate"===n&&c.sort(((e,o)=>e[0]-o[0])),"immediateToLow"===n&&c.sort(((e,o)=>o[0]-e[0])),c.forEach((e=>{(0,a.addTodosToContent)(e[1])}))}},80:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodayTabClick=void 0;const r=t(149),a=t(944);o.handleTodayTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const n=new Date,l=n.getDate(),i=n.getMonth()+1,c=`${n.getFullYear()}-${i<10?"0"+i:i}-${l<10?"0"+l:l}`,p=[];d.forEach((e=>{e.todos.forEach((o=>{if(o.todoDueDate===c){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};p.push(t)}}))})),p.forEach((e=>{(0,a.addTodosToContent)(e)}))}},43:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoCheckboxComplete=void 0,o.handleTodoCheckboxComplete=function(){var e,o,t,r,a,d,n,l,i,c,p;localStorage.getItem("archived")||localStorage.setItem("archived",JSON.stringify([]));const m=null!==(o=null===(e=this.previousSibling)||void 0===e?void 0:e.textContent)&&void 0!==o?o:"",s=null!==(t=this.value)&&void 0!==t?t:"",u=null!==(l=null===(n=null===(d=null===(a=null===(r=this.parentElement)||void 0===r?void 0:r.parentElement)||void 0===a?void 0:a.firstChild)||void 0===d?void 0:d.nextSibling)||void 0===n?void 0:n.textContent)&&void 0!==l?l:"",T=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&e===m&&T.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const v=JSON.parse(null!==(i=localStorage.getItem("archived"))&&void 0!==i?i:""),h=[],E=[];T[0].todos.forEach((e=>{e.todoName!==u?E.push(e):h.push(e)})),T[0].todos=E,localStorage.setItem(m,JSON.stringify(T[0]));const j={project:{projectName:m,projectColour:s},todos:[h[0]]};v.push(j),localStorage.setItem("archived",JSON.stringify(v)),null===(p=null===(c=this.parentElement)||void 0===c?void 0:c.parentElement)||void 0===p||p.remove()}},296:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoCloseIconClick=void 0,o.handleTodoCloseIconClick=function(){const e=document.querySelector(".todo-container");e&&e.remove()}},529:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoFormSubmit=void 0;const r=t(654),a=t(944);o.handleTodoFormSubmit=function(e){var o,t,d,n,l,i,c,p,m,s,u,T;e.preventDefault();const v=document.querySelector(".todo-container"),h=new FormData(this),E={project:{projectName:null!==(t=null===(o=h.get("addTodo-projectName"))||void 0===o?void 0:o.toString())&&void 0!==t?t:"",projectColour:null!==(n=null===(d=h.get("addTodo-projectColour"))||void 0===d?void 0:d.toString())&&void 0!==n?n:""},todos:[{todoName:null!==(i=null===(l=h.get("addTodo-name"))||void 0===l?void 0:l.toString())&&void 0!==i?i:"",todoDescription:null!==(p=null===(c=h.get("addTodo-description"))||void 0===c?void 0:c.toString())&&void 0!==p?p:"",todoDueDate:null!==(s=null===(m=h.get("addTodo-dueDate"))||void 0===m?void 0:m.toString())&&void 0!==s?s:"",todoPriority:null!==(T=null===(u=h.get("addTodo-selectPriority"))||void 0===u?void 0:u.toString())&&void 0!==T?T:""}]};(0,r.storeProjectAndTodosFull)(E)||(0,a.addTodosToContent)(E),null==v||v.remove()}},836:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoNameValidation=void 0,o.handleTodoNameValidation=function(e){this.setCustomValidity(""),this.checkValidity()}},938:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleUpcomingTabClick=void 0;const r=t(149),a=t(944);o.handleUpcomingTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const n=new Date,l=n.getDate(),i=n.getMonth()+1,c=`${n.getFullYear()}-${i<10?"0"+i:i}-${l<10?"0"+l:l}`,p=[];d.forEach((e=>{e.todos.forEach((o=>{if(o.todoDueDate!==c){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};p.push(t)}}))})),p.forEach((e=>{(0,a.addTodosToContent)(e)}))}},559:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.header=void 0;const r=t(149);o.header=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["header"]);(0,r.appendElemToParent)(e)(o),(0,r.pipe)((0,r.addTextToElem)("Todo List App"),(0,r.appendElemToParent)(o))((0,r.elemCreator)("h1")(["title","header-title"]))}},676:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.projectModal=void 0;const r=t(149),a=t(339),d=t(749),n=t(709),l=t(220);o.projectModal=function(){const e=document.querySelector(".sidebar"),o=(0,r.elemCreator)("div")(["addProject-container"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["addProjectHeading-container"]);(0,r.appendElemToParent)(o)(t),(0,r.pipe)((0,r.addTextToElem)("Add project"),(0,r.appendElemToParent)(t))((0,r.elemCreator)("h3")(["heading-text","text-addProject"]));const i=(0,r.elemCreator)("form")(["form-addProject"]);(0,r.pipe)((0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-addProject"],["name","form-addProject"]]),(0,r.addEvtListener)("submit")(n.handleProjectFormSubmit),(0,r.appendElemToParent)(o))(i);const c=(0,r.elemCreator)("div")(["addProject-name-container"]);(0,r.appendElemToParent)(i)(c),(0,r.pipe)((0,r.addAttributeToElem)([["for","addProject-name"]]),(0,r.addTextToElem)("Name"),(0,r.appendElemToParent)(c))((0,r.elemCreator)("label")(["label-name"])),(0,r.pipe)((0,r.addEvtListener)("input")(l.handleProjNameValidation),(0,r.addEvtListener)("invalid")(a.handleInvalidProjName),(0,r.addAttributeToElem)([["id","addProject-name"],["type","text"],["minlength","2"],["maxlength","17"],["pattern","[a-zA-Z]+"],["placeholder","Enter name of project"],["name","addProject-name"],["required",""]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("input")(["addProject-name"]));const p=(0,r.elemCreator)("div")(["addProject-colour-container"]);(0,r.appendElemToParent)(i)(p),(0,r.pipe)((0,r.addAttributeToElem)([["for","addProject-colour"]]),(0,r.addTextToElem)("Colour"),(0,r.appendElemToParent)(p))((0,r.elemCreator)("label")(["label-colour"])),(0,r.pipe)((0,r.addAttributeToElem)([["type","color"],["id","addProject-colour"],["name","addProject-colour"],["value","#1e1e1e"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("input")(["addProject-colour"]));const m=(0,r.elemCreator)("div")(["addProjectIcons-container"]);(0,r.appendElemToParent)(i)(m);const s=(0,r.elemCreator)("button")(["bttn","bttn-cancelProject"]);(0,r.pipe)((0,r.addTextToElem)("Cancel"),(0,r.addEvtListener)("click")(d.handleProjectCloseIconClick),(0,r.addAttributeToElem)([["type","button"],["name","bttn-cancel"]]),(0,r.appendElemToParent)(m))(s);const u=(0,r.elemCreator)("button")(["bttn","bttn-addProject"]);(0,r.pipe)((0,r.addTextToElem)("Add"),(0,r.addAttributeToElem)([["type","submit"],["name","bttn-addProject"],["form","form-addProject"]]),(0,r.appendElemToParent)(m))(u)}},234:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.todoModal=void 0;const r=t(149),a=t(182),d=t(296),n=t(529),l=t(836);o.todoModal=function(e,o){const t=document.querySelector("#root"),i=new Date,c=(0,r.elemCreator)("div")(["todo-container"]);(0,r.appendElemToParent)(t)(c);const p=(0,r.elemCreator)("form")(["form","form-addTodo"]);(0,r.pipe)((0,r.addEvtListener)("submit")(n.handleTodoFormSubmit),(0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-addTodo"],["name","form-addTodo"]]),(0,r.appendElemToParent)(c))(p),(0,r.pipe)((0,r.addTextToElem)("Add task todo"),(0,r.appendElemToParent)(p))((0,r.elemCreator)("h3")(["heading-text","text-addTodo"]));const m=(0,r.elemCreator)("div")(["addTodo-name-container"]);(0,r.appendElemToParent)(p)(m),(0,r.pipe)((0,r.addAttributeToElem)([["for","addTodo-name"]]),(0,r.addTextToElem)("Name"),(0,r.appendElemToParent)(m))((0,r.elemCreator)("label")(["label-name"])),(0,r.pipe)((0,r.addEvtListener)("input")(l.handleTodoNameValidation),(0,r.addEvtListener)("invalid")(a.handleInvalidTodoName),(0,r.addAttributeToElem)([["type","text"],["form","form-addTodo"],["id","addTodo-name"],["name","addTodo-name"],["minlength","2"],["maxlength","31"],["pattern","[A-Za-z0-9]+"],["placeholder","Enter name for task todo"],["required",""]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("input")(["addTodo-name"]));const s=(0,r.elemCreator)("div")(["addTodo-desc-container"]);(0,r.appendElemToParent)(p)(s),(0,r.pipe)((0,r.addAttributeToElem)([["for","addTodo-description"]]),(0,r.addTextToElem)("Description"),(0,r.appendElemToParent)(s))((0,r.elemCreator)("label")(["label-description"])),(0,r.pipe)((0,r.addAttributeToElem)([["id","addTodo-description"],["autocomplete","on"],["form","form-addTodo"],["maxlength","250"],["name","addTodo-description"],["spellcheck","true"],["wrap","hard"]]),(0,r.appendElemToParent)(s))((0,r.elemCreator)("textarea")(["addTodo-description"]));const u=(0,r.elemCreator)("div")(["addTodo-date-container"]);(0,r.appendElemToParent)(p)(u),(0,r.pipe)((0,r.addTextToElem)("Due date"),(0,r.addAttributeToElem)([["for","addTodo-dueDate"]]),(0,r.appendElemToParent)(u))((0,r.elemCreator)("label")(["label-dueDate"])),(0,r.pipe)((0,r.addAttributeToElem)([["type","date"],["id","addTodo-dueDate"],["min",`${i.getFullYear()}-${i.getMonth()<10?"0"+(i.getMonth()+1):i.getMonth()+1}-${i.getDate()<10?"0"+i.getDate():i.getDate()}`],["max",`${i.getFullYear()+100}-${i.getMonth()<10?"0"+(i.getMonth()+1):i.getMonth()+1}-${i.getDate()<10?"0"+i.getDate():i.getDate()}`],["name","addTodo-dueDate"],["placeholder","yyyy-mm-dd"],["pattern","(0[1-9]|1[0-9]|2[0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}"],["required",""]]),(0,r.appendElemToParent)(u))((0,r.elemCreator)("input")(["addTodo-dueDate"]));const T=(0,r.elemCreator)("div")(["addTodo-priority-container"]);(0,r.appendElemToParent)(p)(T),(0,r.pipe)((0,r.addTextToElem)("Priority level"),(0,r.addAttributeToElem)([["for","addTodo-selectPriority"]]),(0,r.appendElemToParent)(T))((0,r.elemCreator)("label")(["label-selectPriority"]));const v=(0,r.elemCreator)("select")(["addTodo-selectPriority"]);(0,r.pipe)((0,r.addAttributeToElem)([["name","addTodo-selectPriority"],["id","addTodo-selectPriority"],["form","form-addTodo"],["title","addTodo-selectPriority"],["required",""]]),(0,r.appendElemToParent)(T))(v),(0,r.pipe)((0,r.addTextToElem)("--Please assign a priority--"),(0,r.addAttributeToElem)([["value",""]]),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","low"]]),(0,r.addTextToElem)("Low"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","medium"]]),(0,r.addTextToElem)("Medium"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","high"]]),(0,r.addTextToElem)("High"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","urgent"]]),(0,r.addTextToElem)("Urgent"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","immediate"]]),(0,r.addTextToElem)("Immediate"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["hidden",""],["value",`${e}`],["name","addTodo-projectName"],["type","text"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("input")(["addTodo-projectName__hidden"])),(0,r.pipe)((0,r.addAttributeToElem)([["hidden",""],["value",`${o}`],["name","addTodo-projectColour"],["type","text"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("input")(["addTodo-projectColour__hidden"]));const h=(0,r.elemCreator)("div")(["addTodo-icons-container"]);(0,r.appendElemToParent)(p)(h);const E=(0,r.elemCreator)("button")(["bttn","bttn-cancelTodo"]);(0,r.pipe)((0,r.addTextToElem)("Cancel"),(0,r.addEvtListener)("click")(d.handleTodoCloseIconClick),(0,r.addAttributeToElem)([["type","click"],["name","bttn-cancelTodo"],["form","form-addTodo"]]),(0,r.appendElemToParent)(h))(E);const j=(0,r.elemCreator)("button")(["bttn","bttn-addTodo"]);(0,r.pipe)((0,r.addTextToElem)("Add"),(0,r.addAttributeToElem)([["type","submit"],["name","bttn-addTodo"],["form","form-addTodo"]]),(0,r.appendElemToParent)(h))(j)}},265:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.addProjectToSidebar=void 0;const r=t(149),a=t(979),d=t(256);o.addProjectToSidebar=function(e,o){const t=document.querySelector(".container-projects"),n=(0,r.elemCreator)("div")(["sidebar-project","project"]);(0,r.appendElemToParent)(t)(n),(0,r.pipe)((0,r.addEvtListener)("click")(d.handleCreatedTabsClick),(0,r.addAttributeToElem)([["data-name",`${e}`],["data-colour",`${o}`]]),(0,r.addStyleToElem)([["color",`${o}`]]),(0,r.addTextToElem)(`${e}`),(0,r.appendElemToParent)(n))((0,r.elemCreator)("h4")(["project-text"])),(0,r.pipe)((0,r.addStyleToElem)([["color",`${o}`]]),(0,r.addTextToElem)("+"),(0,r.addAttributeToElem)([["data-name",`${e}`],["data-colour",`${o}`]]),(0,r.addEvtListener)("click")(a.handleAddNewTodoIconClick),(0,r.appendElemToParent)(n))((0,r.elemCreator)("button")(["bttn","bttn-todoModal"]))}},944:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.addTodosToContent=void 0;const r=t(149),a=t(43);o.addTodosToContent=function({project:e,todos:o},t=!1){const{projectName:d,projectColour:n}=e;o.forEach(((e,l)=>{const{todoName:i,todoDescription:c,todoDueDate:p,todoPriority:m}=o[l],s=document.querySelector(".content-bottom"),u=(0,r.elemCreator)("div")(["todoContent-container"]);(0,r.appendElemToParent)(s)(u);const T=(0,r.elemCreator)("div")(["todoContent-heading-container"]);(0,r.appendElemToParent)(u)(T),(0,r.pipe)((0,r.addAttributeToElem)([["data-colour",`${n}`]]),(0,r.addTextToElem)(`${d}`),(0,r.addStyleToElem)([["color",`${n}`]]),(0,r.appendElemToParent)(T))((0,r.elemCreator)("h3")(["heading-text","todoContent-projectName"])),(0,r.pipe)((0,r.addAttributeToElem)([["for","complete"]]))((0,r.elemCreator)("label")(["label","todoContent-label"]));const v=(0,r.elemCreator)("input")(["todoContent-checkbox"]);(0,r.pipe)((0,r.addEvtListener)("click")(a.handleTodoCheckboxComplete),(0,r.addAttributeToElem)([["type","checkbox"],["id","complete"],["name","complete"],["value",`${n}`]]),(0,r.appendElemToParent)(T))(v),t&&(0,r.addAttributeToElem)([["disabled","true"]])(v),(0,r.pipe)((0,r.addTextToElem)(`${i}`),(0,r.appendElemToParent)(u))((0,r.elemCreator)("h4")(["todoContent-name"])),(0,r.pipe)((0,r.addTextToElem)(`${c}`),(0,r.appendElemToParent)(u))((0,r.elemCreator)("p")(["todoContent-description"]));const h=(0,r.elemCreator)("div")(["dateAndPriority-container"]);(0,r.appendElemToParent)(u)(h),(0,r.pipe)((0,r.addTextToElem)(`Due: ${p}`),(0,r.appendElemToParent)(h))((0,r.elemCreator)("p")(["todoContent-dueDate"]));const E=(0,r.elemCreator)("div")(["priority-container"]);(0,r.appendElemToParent)(h)(E),(0,r.addStyleToElem)([["background-color","immediate"===m?"hsl(0, 100%, 35%)":"urgent"===m?"hsl(40, 100%, 65%)":"high"===m?"hsl(90, 100%, 50%)":"medium"===m?"hsl(200, 100%, 50%)":"hsl(250, 100%, 70%)"]])(E),(0,r.pipe)((0,r.addTextToElem)(`${m}`),(0,r.appendElemToParent)(E))((0,r.elemCreator)("p")(["todoContent-priority"]))}))}},726:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.archiveExpiredTodos=void 0,o.archiveExpiredTodos=function(){var e;localStorage.getItem("archived")||localStorage.setItem("archived",JSON.stringify([]));const o=[];Object.keys(localStorage).forEach((e=>{var t;"projectNames"!==e&&"archived"!==e&&o.push(JSON.parse(null!==(t=localStorage.getItem(e))&&void 0!==t?t:""))}));const t=new Date,r=t.getDate(),a=t.getMonth()+1,d=t.getFullYear(),n=JSON.parse(null!==(e=localStorage.getItem("archived"))&&void 0!==e?e:""),l=[];o.forEach((e=>{e.todos.forEach((o=>{const t=o.todoDueDate.split("-"),i=Number(t[0]),c=Number(t[1]);if(Number(t[2])<r||c<a||i<d){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};n.push(t)}else{const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};l.push(t)}}))})),localStorage.setItem("archived",JSON.stringify(n)),l.reduce(((e,o)=>{if(e.has(o.project.projectName)){const t=e.get(o.project.projectName);null==t||t.todos.push(o.todos[0]),e.set(o.project.projectName,t)}else e.set(o.project.projectName,o);return e}),new Map).forEach(((e,o)=>{localStorage.setItem(o,JSON.stringify(e))}))}},882:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.projectsAndTodosOnload=void 0;const r=t(265),a=t(944);o.projectsAndTodosOnload=function(){var e;const o=[];Object.keys(localStorage).forEach((e=>{var t;"Sample Project"!==e&&"projectNames"!==e&&"archived"!==e&&o.push(JSON.parse(null!==(t=localStorage.getItem(e))&&void 0!==t?t:""))}));const t=JSON.parse(null!==(e=localStorage.getItem("Sample Project"))&&void 0!==e?e:"");(0,a.addTodosToContent)(t),o.forEach((e=>{(0,r.addProjectToSidebar)(e.project.projectName,e.project.projectColour),(0,a.addTodosToContent)(e)}))}},654:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.storeProjectAndTodosFull=void 0,o.storeProjectAndTodosFull=function(e){var o;let t=!1;const r=e.project.projectName,a=e.todos[0].todoName,d=e.todos[0],n=new Set;if(Object.keys(localStorage).forEach((e=>{n.add(e)})),n.has(r)){const e=JSON.parse(null!==(o=localStorage.getItem(r))&&void 0!==o?o:""),n=new Set;return e.todos.forEach((e=>n.add(e.todoName))),n.has(a)?(alert(`${a} already exists as a todo (｡•́︿•̀｡)  Please choose another name.`),t=!0,t):(e.todos.push(d),localStorage.setItem(r,JSON.stringify(e)),t=!1,t)}localStorage.setItem(r,JSON.stringify(e))}},932:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.storeSampleProject=void 0,o.storeSampleProject=function(){const e=new Date,o={project:{projectName:"Sample Project",projectColour:"#48d1cc"},todos:[{todoName:"Finish 'The Faded Sun: Kesrith'",todoDescription:`Finish reading the book - return ${e.getDate()>26?"today":"day after tomorrow"}!`,todoDueDate:`${(e=>{let o=e.getDate();o=o<=26?o+2:o;let t=e.getMonth()+1;return`${e.getFullYear()}-${t<10?"0"+t:t}-${o<10?"0"+o:o}`})(e)}`,todoPriority:"urgent"},{todoName:"Vet Appointment",todoDescription:"Take Nighteyes to the vet for routine checkup",todoDueDate:`${(e=>{let o=e.getMonth();return o=o<=10?o+1:o,o+=1,`${e.getFullYear()}-${o<10?"0"+o:o}-${e.getDate()<10?"0"+e.getDate():e.getDate()}`})(e)}`,todoPriority:"medium"},{todoName:"Backpacking trip to Nepal",todoDescription:"Plan route, supplies and apply for visa",todoDueDate:`${(e=>{let o=e.getDate(),t=e.getMonth()+1;return`${e.getFullYear()+1}-${t<10?"0"+t:t}-${o<10?"0"+o:o}`})(e)}`,todoPriority:"low"}]};localStorage.getItem(o.project.projectName)||localStorage.setItem(o.project.projectName,JSON.stringify(o))}},524:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.sidebar=void 0;const r=t(149),a=t(544),d=t(979),n=t(279),l=t(938),i=t(80),c=t(998),p=t(256);o.sidebar=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["sidebar"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["sidebar-tab","container-today"]);(0,r.addEvtListener)("click")(i.handleTodayTabClick)(t),(0,r.appendElemToParent)(o)(t),(0,r.pipe)((0,r.addTextToElem)("Today"),(0,r.appendElemToParent)(t))((0,r.elemCreator)("h4")(["tab-text","today-tab"]));const m=(0,r.elemCreator)("div")(["sidebar-tab","container-upcoming"]);(0,r.addEvtListener)("click")(l.handleUpcomingTabClick)(m),(0,r.appendElemToParent)(o)(m),(0,r.pipe)((0,r.addTextToElem)("Upcoming"),(0,r.appendElemToParent)(m))((0,r.elemCreator)("h4")(["tab-text","tab-upcoming"]));const s=(0,r.elemCreator)("div")(["sidebar-tab","container-archived"]);(0,r.addEvtListener)("click")(n.handleArchivedTabClick)(s),(0,r.appendElemToParent)(o)(s),(0,r.pipe)((0,r.addTextToElem)("Archived"),(0,r.appendElemToParent)(s))((0,r.elemCreator)("h4")(["tab-text","tab-archived"]));const u=(0,r.elemCreator)("div")(["sidebar-heading","container-projects"]);(0,r.appendElemToParent)(o)(u);const T=(0,r.elemCreator)("div")(["projectHeading-wrapper"]);(0,r.appendElemToParent)(u)(T),(0,r.pipe)((0,r.addEvtListener)("click")(c.handleProjectsTabClick),(0,r.addTextToElem)("Projects"),(0,r.appendElemToParent)(T))((0,r.elemCreator)("h3")(["heading-text","text-projects"])),(0,r.pipe)((0,r.addTextToElem)("+"),(0,r.addEvtListener)("click")(a.handleAddNewProjectIconClick),(0,r.appendElemToParent)(T))((0,r.elemCreator)("button")(["bttn","bttn-projectModal"]));const v=(0,r.elemCreator)("div")(["sidebar-project","project"]);(0,r.appendElemToParent)(u)(v),(0,r.pipe)((0,r.addStyleToElem)([["color","#48d1cc"]]),(0,r.addEvtListener)("click")(p.handleCreatedTabsClick),(0,r.addTextToElem)("Sample Project"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("h4")(["project-text","text-sampleProject"])),(0,r.pipe)((0,r.addStyleToElem)([["color","#48d1cc"]]),(0,r.addTextToElem)("+"),(0,r.addAttributeToElem)([["data-name","Sample Project"],["data-colour","#48d1cc"]]),(0,r.addEvtListener)("click")(d.handleAddNewTodoIconClick),(0,r.appendElemToParent)(v))((0,r.elemCreator)("button")(["bttn","bttn-todoModal"]))}}},o={};function t(r){var a=o[r];if(void 0!==a)return a.exports;var d=o[r]={exports:{}};return e[r](d,d.exports,t),d.exports}t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{t(985);const e=t(827),o=t(559),r=t(524),a=t(882),d=t(932),n=t(726);document.addEventListener("DOMContentLoaded",(function(){(0,o.header)(),(0,r.sidebar)(),(0,e.content)(),(0,d.storeSampleProject)(),(0,n.archiveExpiredTodos)(),self.onload=a.projectsAndTodosOnload}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiOERBQ0FBLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRRSxhQUFVLEVBQ2xCLE1BQU1DLEVBQXFCLEVBQVEsS0FDN0JDLEVBQWdDLEVBQVEsS0FDeENDLEVBQTJCLEVBQVEsS0FDbkNDLEVBQThCLEVBQVEsS0F1RDVDTixFQUFRRSxRQXREUSxXQUNaLE1BQU1LLEVBQU9DLFNBQVNDLGNBQWMsU0FDOUJQLEdBQVUsRUFBSUMsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxhQUM1RCxFQUFJUCxFQUFtQlEsb0JBQW9CSixFQUEzQyxDQUFpREwsR0FDakQsTUFBTVUsR0FBTSxFQUFJVCxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGlCQUN4RCxFQUFJUCxFQUFtQlEsb0JBQW9CVCxFQUEzQyxDQUFvRFUsR0FDcEQsTUFBTUMsR0FBaUIsRUFBSVYsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxxQkFDbkUsRUFBSVAsRUFBbUJRLG9CQUFvQkMsRUFBM0MsQ0FBZ0RDLElBQ2hELEVBQUlWLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLHVCQUF1QixFQUFJWixFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxPQUFRLG9DQUFvQyxFQUFJYixFQUFtQlEsb0JBQW9CRSxHQUE5TixFQUErTyxFQUFJVixFQUFtQk8sYUFBYSxJQUFwQyxDQUF5QyxDQUFDLGtCQUN6UixFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxjQUFjLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLE9BQVEsa0RBQWtELEVBQUliLEVBQW1CUSxvQkFBb0JFLEdBQW5PLEVBQW9QLEVBQUlWLEVBQW1CTyxhQUFhLElBQXBDLENBQXlDLENBQUMsZUFDOVIsTUFBTU8sR0FBTyxFQUFJZCxFQUFtQk8sYUFBYSxPQUFwQyxDQUE0QyxDQUFDLHFCQUMxRCxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFNBQXZDLENBQWlEYixFQUF5QmMseUJBQXlCLEVBQUloQixFQUFtQmEsb0JBQW9CLENBQ3ZLLENBQUMsU0FBVSxLQUNYLENBQUMsU0FBVSxRQUNYLENBQUMsS0FBTSxtQkFDUCxDQUFDLE9BQVEsa0JBQ1QsRUFBSWIsRUFBbUJRLG9CQUFvQkMsR0FML0MsQ0FLcURLLElBQ3JELEVBQUlkLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLE1BQU8saUJBQWlCLEVBQUliLEVBQW1CUSxvQkFBb0JNLEdBQTdJLEVBQW9KLEVBQUlkLEVBQW1CTyxhQUFhLFFBQXBDLENBQTZDLENBQUMsa0JBQ2xNLE1BQU1VLEdBQWEsRUFBSWpCLEVBQW1CTyxhQUFhLFFBQXBDLENBQTZDLENBQUMsZ0JBQ2pFLEVBQUlQLEVBQW1CYSxvQkFBb0IsQ0FDdkMsQ0FBQyxPQUFRLFVBQ1QsQ0FBQyxjQUFlLHFCQUNoQixDQUFDLEtBQU0sY0FDUCxDQUFDLE9BQVEsZ0JBSmIsQ0FLR0ksSUFDSCxFQUFJakIsRUFBbUJRLG9CQUFvQk0sRUFBM0MsQ0FBaURHLElBQ2pELEVBQUlqQixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQ3BFLENBQUMsTUFBTywyQkFDUixDQUFDLE9BQVEsOEJBQ1QsRUFBSWIsRUFBbUJRLG9CQUFvQkMsR0FIL0MsRUFHcUQsRUFBSVQsRUFBbUJPLGFBQWEsUUFBcEMsQ0FBNkMsQ0FBQyxRQUFTLDRCQUM1RyxNQUFNVyxHQUF5QixFQUFJbEIsRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyw2QkFDOUUsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJlLGdCQUFnQixRQUF2QyxDQUFnRGQsRUFBOEJrQiw4QkFBOEIsRUFBSW5CLEVBQW1CYSxvQkFBb0IsQ0FDaEwsQ0FBQyxPQUFRLDJCQUNULENBQUMsS0FBTSwyQkFDUCxDQUFDLFFBQVMsOEJBQ1YsRUFBSWIsRUFBbUJRLG9CQUFvQkMsR0FKL0MsQ0FJcURTLElBQ3JELEVBQUlsQixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSwyQkFBMkIsRUFBSVosRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsUUFBUyxRQUFRLEVBQUliLEVBQW1CUSxvQkFBb0JVLEdBQXZNLEVBQWdPLEVBQUlsQixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDhCQUMvUSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxjQUFjLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsZ0JBQWdCLEVBQUliLEVBQW1CUSxvQkFBb0JVLEdBQWxNLEVBQTJOLEVBQUlsQixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDhCQUMxUSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxXQUFXLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsYUFBYSxFQUFJYixFQUFtQlEsb0JBQW9CVSxHQUE1TCxFQUFxTixFQUFJbEIsRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyw4QkFDcFEsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsU0FBUyxFQUFJWixFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxRQUFTLFdBQVcsRUFBSWIsRUFBbUJRLG9CQUFvQlUsR0FBeEwsRUFBaU4sRUFBSWxCLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsOEJBQ2hRLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLFdBQVcsRUFBSVosRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsUUFBUyxhQUFhLEVBQUliLEVBQW1CUSxvQkFBb0JVLEdBQTVMLEVBQXFOLEVBQUlsQixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDhCQUNwUSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxRQUFRLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsVUFBVSxFQUFJYixFQUFtQlEsb0JBQW9CVSxHQUF0TCxFQUErTSxFQUFJbEIsRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyw2QkFDOVAsTUFBTWEsR0FBdUIsRUFBSXBCLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsMkJBQzVFLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0RaLEVBQTRCa0IsNEJBQTRCLEVBQUlyQixFQUFtQmEsb0JBQW9CLENBQzVLLENBQUMsS0FBTSx5QkFDUCxDQUFDLE9BQVEseUJBQ1QsQ0FBQyxRQUFTLDRCQUNWLEVBQUliLEVBQW1CUSxvQkFBb0JDLEdBSi9DLENBSXFEVyxJQUNyRCxFQUFJcEIsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUseUJBQXlCLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsUUFBUSxFQUFJYixFQUFtQlEsb0JBQW9CWSxHQUFyTSxFQUE0TixFQUFJcEIsRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyw0QkFDM1EsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUscUJBQXFCLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMscUJBQXFCLEVBQUliLEVBQW1CUSxvQkFBb0JZLEdBQTlNLEVBQXFPLEVBQUlwQixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDRCQUNwUixFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxxQkFBcUIsRUFBSVosRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsUUFBUyxxQkFBcUIsRUFBSWIsRUFBbUJRLG9CQUFvQlksR0FBOU0sRUFBcU8sRUFBSXBCLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsMkJBQ3BSLE1BQU1lLEdBQWdCLEVBQUl0QixFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLG9CQUNsRSxFQUFJUCxFQUFtQlEsb0JBQW9CVCxFQUEzQyxDQUFvRHVCLEssWUMxRHhEM0IsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFjLEtBQU9kLEVBQVEwQixlQUFpQjFCLEVBQVFrQixlQUFpQmxCLEVBQVEyQixZQUFjM0IsRUFBUWdCLG1CQUFxQmhCLEVBQVFlLGNBQWdCZixFQUFRVyxtQkFBcUJYLEVBQVFVLGlCQUFjLEVBUS9MVixFQUFRVSxZQVBha0IsR0FBV0MsSUFDNUIsTUFBTUMsRUFBVXRCLFNBQVN1QixjQUFjSCxHQUN2QyxPQUFPQyxFQUFPRyxRQUFPLENBQUNDLEVBQU1DLEtBQ3hCRCxFQUFLRSxVQUFVQyxJQUFJRixHQUNaRCxJQUNSSCxJQVdQOUIsRUFBUWdCLG1CQVJvQnFCLEdBQWVULEdBQ2hDUyxFQUFVTCxRQUFPLENBQUNGLEVBQVNRLEtBQzlCLEtBQUlBLEVBQUtDLE9BQVMsR0FHbEIsT0FEQVQsTUFBQUEsR0FBa0RBLEVBQVFVLGFBQWFGLEVBQUssR0FBSUEsRUFBSyxJQUM5RVIsSUFDUkYsR0FXUDVCLEVBQVEwQixlQVJnQmUsR0FBb0JiLEdBQ2pDYSxFQUFlVCxRQUFPLENBQUNGLEVBQVNRLEtBQ25DLEtBQUlBLEVBQUtDLE9BQVMsR0FHbEIsT0FEQVQsTUFBQUEsR0FBa0RBLEVBQVFZLE1BQU1DLFlBQVlMLEVBQUssR0FBSUEsRUFBSyxJQUNuRlIsSUFDUkYsR0FRUDVCLEVBQVFlLGNBTGU2QixHQUFXaEIsSUFDOUIsTUFBTWlCLEVBQVdyQyxTQUFTc0MsZUFBZUYsR0FFekMsT0FEQWhCLE1BQUFBLEdBQThDQSxFQUFNbUIsWUFBWUYsR0FDekRqQixHQU9YNUIsRUFBUVcsbUJBSm9CcUMsR0FBYUMsSUFDakNBLElBQ0FELE1BQUFBLEdBQWtEQSxFQUFRRCxZQUFZRSxLQWE5RWpELEVBQVEyQixZQVZhdUIsR0FBYXJCLEdBQVlzQixHQUFVQyxJQUNwRCxNQUFNQyxFQUFRLElBQUlDLE1BSWxCLE9BSEFELEVBQU1FLElBQU1MLEVBQ1pHLEVBQU1HLElBQU1MLEVBQ1pFLEVBQU1JLE1BQVFMLEVBQ1B2QixFQUFPRyxRQUFPLENBQUNDLEVBQU1DLEtBQ3hCRCxFQUFLRSxVQUFVQyxJQUFJRixHQUNaRCxJQUNSb0IsSUFPUHJELEVBQVFrQixlQUpnQndDLEdBQVVDLEdBQWdCL0IsSUFDOUNBLE1BQUFBLEdBQThDQSxFQUFNZ0MsaUJBQWlCRixFQUFNQyxHQUNwRS9CLEdBSVg1QixFQUFRYyxLQURLLElBQUkrQyxJQUFXNUQsR0FBVTRELEVBQU03QixRQUFPLENBQUM4QixFQUFLQyxJQUFTQSxFQUFLRCxJQUFNN0QsSSxjQ3ZEN0VILE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRZ0Usa0NBQStCLEVBQ3ZDLE1BQU1DLEVBQWlCLEVBQVEsS0FXL0JqRSxFQUFRZ0UsNkJBVjZCLFNBQVVFLElBQzNDLEVBQUlELEVBQWVFLGdCQUNuQixNQUFNQyxFQUFrQjVELFNBQVNDLGNBQWMseUJBQzNDMkQsSUFDQUEsRUFBZ0IxQixNQUFNMkIsV0FDdUYsYUFBeEdELE1BQUFBLE9BQXlELEVBQVNBLEVBQWdCMUIsTUFBTTJCLFlBQTRCLFNBQVcsVUFDcElELEVBQWdCMUIsTUFBTTRCLFVBQ2xCLHNFLGNDVlp4RSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUXVFLCtCQUE0QixFQUNwQyxNQUFNQyxFQUFjLEVBQVEsS0FjNUJ4RSxFQUFRdUUsMEJBYjBCLFdBQzlCLElBQUlFLEVBQUlDLEVBQ1IsTUFBTUMsRUFBK0MsUUFBNUJGLEVBQUtHLEtBQUtDLFFBQVFDLFlBQXlCLElBQVBMLEVBQWdCQSxFQUFLLEdBQzVFTSxFQUFtRCxRQUE5QkwsRUFBS0UsS0FBS0MsUUFBUUcsY0FBMkIsSUFBUE4sRUFBZ0JBLEVBQUssSUFDdEYsRUFBSUYsRUFBWVMsV0FBV04sRUFBaUJJLEdBQzVDLE1BQU1HLEVBQWUxRSxTQUFTQyxjQUFjLG1CQUN4Q3lFLElBQ0FBLEVBQWF4QyxNQUFNMkIsV0FDaUYsYUFBL0ZhLE1BQUFBLE9BQW1ELEVBQVNBLEVBQWF4QyxNQUFNMkIsWUFBNEIsU0FBVyxVQUMzSGEsRUFBYXhDLE1BQU00QixVQUNmLHNFLGNDYlp4RSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUW1GLDRCQUF5QixFQUNqQyxNQUFNQyxFQUFzQixFQUFRLEtBQzlCakYsRUFBcUIsRUFBUSxLQWdCbkNILEVBQVFtRix1QkFmdUIsV0FDM0IsSUFBSVYsRUFFSixNQUFNdkUsRUFBVU0sU0FBU0MsY0FBYyxZQUNqQzRFLEVBQW9CN0UsU0FBU0MsY0FBYyxtQkFDakQ0RSxNQUFBQSxHQUFzRUEsRUFBa0JDLFNBRXhGLE1BQU03RCxHQUFnQixFQUFJdEIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQlQsRUFBM0MsQ0FBb0R1QixHQUN6QjhELEtBQUtDLE1BQWtELFFBQTNDZixFQUFLZ0IsYUFBYUMsUUFBUSxtQkFBZ0MsSUFBUGpCLEVBQWdCQSxFQUFLLElBRTVGa0IsU0FBU0MsS0FDeEIsRUFBSVIsRUFBb0JTLG1CQUFtQkQsR0FBUyxRLGNDaEI1RDlGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFROEYsNEJBQXlCLEVBQ2pDLE1BQU1WLEVBQXNCLEVBQVEsS0FDOUJqRixFQUFxQixFQUFRLEtBcUJuQ0gsRUFBUThGLHVCQXBCdUIsV0FFM0IsTUFBTTVGLEVBQVVNLFNBQVNDLGNBQWMsWUFDakM0RSxFQUFvQjdFLFNBQVNDLGNBQWMsbUJBQ2pENEUsTUFBQUEsR0FBc0VBLEVBQWtCQyxTQUN4RixNQUFNN0QsR0FBZ0IsRUFBSXRCLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsb0JBQ2xFLEVBQUlQLEVBQW1CUSxvQkFBb0JULEVBQTNDLENBQW9EdUIsR0FDcEQsTUFBTXNFLEVBQWtCbkIsS0FBS29CLFlBQ3ZCQyxFQUF3QixHQUM5Qm5HLE9BQU9vRyxLQUFLVCxjQUFjRSxTQUFTUSxJQUMvQixJQUFJMUIsRUFDQTBCLElBQVFKLEdBQ1JFLEVBQXNCRyxLQUFLYixLQUFLQyxNQUF1RCxRQUFoRGYsRUFBS2dCLGFBQWFDLFFBQVFLLFVBQXFDLElBQVB0QixFQUFnQkEsRUFBSyxRQUk1SHdCLEVBQXNCTixTQUFTQyxLQUMzQixFQUFJUixFQUFvQlMsbUJBQW1CRCxRLGNDckJuRDlGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRc0IsaUNBQThCLEVBQ3RDLE1BQU1uQixFQUFxQixFQUFRLEtBQzdCaUYsRUFBc0IsRUFBUSxLQXVEcENwRixFQUFRc0IsNEJBdEQ0QixTQUFVNEMsR0FFMUMsTUFBTWhFLEVBQVVNLFNBQVNDLGNBQWMsWUFDakM0RSxFQUFvQjdFLFNBQVNDLGNBQWMsbUJBQ2pENEUsTUFBQUEsR0FBc0VBLEVBQWtCQyxTQUV4RixNQUFNN0QsR0FBZ0IsRUFBSXRCLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsb0JBQ2xFLEVBQUlQLEVBQW1CUSxvQkFBb0JULEVBQTNDLENBQW9EdUIsR0FDcEQsTUFBTTRFLEVBQW1CekIsS0FBSzNFLE1BQ3hCcUcsRUFBYSxHQUNuQnhHLE9BQU9vRyxLQUFLVCxjQUFjRSxTQUFTUSxJQUMvQixJQUFJMUIsRUFDUSxpQkFBUjBCLEdBQWtDLGFBQVJBLEdBQzFCRyxFQUFXRixLQUFLYixLQUFLQyxNQUEyQyxRQUFwQ2YsRUFBS2dCLGFBQWFDLFFBQVFTLFVBQXlCLElBQVAxQixFQUFnQkEsRUFBSyxRQUdyRyxNQUFNOEIsRUFBc0IsR0F1QjVCLEdBdEJBRCxFQUFXWCxTQUFTQyxJQUNoQkEsRUFBUVksTUFBTWIsU0FBU2MsSUFDbkIsR0FBSUEsRUFBS0MsZUFBaUJMLEVBQWtCLENBQ3hDLE1BQU1NLEVBQU8sQ0FDVGYsUUFBUyxDQUNMZ0IsWUFBYWhCLEVBQVFBLFFBQVFnQixZQUM3QkMsY0FBZWpCLEVBQVFBLFFBQVFpQixlQUVuQ0wsTUFBTyxDQUNILENBQ0lNLFNBQVVMLEVBQUtLLFNBQ2ZDLGdCQUFpQk4sRUFBS00sZ0JBQ3RCQyxZQUFhUCxFQUFLTyxZQUNsQk4sYUFBY0QsRUFBS0MsZ0JBSS9CSCxFQUFvQkgsS0FBS08sVUFLWixNQUFyQk4sRUFBMEIsQ0FFMUIsTUFBTW5HLEVBQVVNLFNBQVNDLGNBQWMsWUFDakM0RSxFQUFvQjdFLFNBQVNDLGNBQWMsbUJBQ2pENEUsTUFBQUEsR0FBc0VBLEVBQWtCQyxTQUV4RixNQUFNN0QsR0FBZ0IsRUFBSXRCLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsb0JBQ2xFLEVBQUlQLEVBQW1CUSxvQkFBb0JULEVBQTNDLENBQW9EdUIsR0FDcEQ2RSxFQUFXWCxTQUFTQyxJQUFZLEVBQUlSLEVBQW9CUyxtQkFBbUJELEtBRy9FVyxFQUFvQlosU0FBU0MsS0FDekIsRUFBSVIsRUFBb0JTLG1CQUFtQkQsUSxZQ3ZEbkQ5RixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUWlILDJCQUF3QixFQU9oQ2pILEVBQVFpSCxzQkFOc0IsU0FBVS9DLEdBQ2pCLEtBQWZVLEtBQUszRSxNQUNMMkUsS0FBS3NDLGtCQUFrQixnQ0FFdkJ0QyxLQUFLc0Msa0JBQWtCLG1GLFlDTi9CcEgsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFtSCwyQkFBd0IsRUFPaENuSCxFQUFRbUgsc0JBTnNCLFNBQVVqRCxHQUNqQixLQUFmVSxLQUFLM0UsTUFDTDJFLEtBQUtzQyxrQkFBa0IsNEJBRXZCdEMsS0FBS3NDLGtCQUFrQix3RSxZQ04vQnBILE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRb0gsOEJBQTJCLEVBTW5DcEgsRUFBUW9ILHlCQUx5QixTQUFVbEQsR0FFdkNVLEtBQUtzQyxrQkFBa0IsSUFDdkJ0QyxLQUFLeUMsa0IsWUNMVHZILE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRc0gsaUNBQThCLEVBTXRDdEgsRUFBUXNILDRCQUw0QixTQUFVcEQsR0FDMUMsTUFBTUUsRUFBa0I1RCxTQUFTQyxjQUFjLHlCQUMzQzJELEdBQ0FBLEVBQWdCa0IsVyxjQ0x4QnhGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRdUgsNkJBQTBCLEVBQ2xDLE1BQU1DLEVBQXdCLEVBQVEsS0FxQ3RDeEgsRUFBUXVILHdCQXBDd0IsU0FBVXJELEdBQ3RDLElBQUlPLEVBQUlDLEVBQUkrQyxFQUFJQyxFQUNoQnhELEVBQUd5RCxpQkFDSCxNQUFNdkQsRUFBa0I1RCxTQUFTQyxjQUFjLHlCQUN6Q21ILEVBQWtCLElBQUlDLFNBQVNqRCxNQUMvQmtELEVBQThILFFBQTNHcEQsRUFBdUQsUUFBakRELEVBQUttRCxFQUFnQkcsSUFBSSwwQkFBdUMsSUFBUHRELE9BQWdCLEVBQVNBLEVBQUd1RCxrQkFBK0IsSUFBUHRELEVBQWdCQSxFQUFLLEdBQzNKdUQsRUFBa0ksUUFBN0dQLEVBQXlELFFBQW5ERCxFQUFLRyxFQUFnQkcsSUFBSSw0QkFBeUMsSUFBUE4sT0FBZ0IsRUFBU0EsRUFBR08sa0JBQStCLElBQVBOLEVBQWdCQSxFQUFLLEdBS2hKLElBQVdRLEVBSDNCekMsYUFBYUMsUUFBUSxpQkFDdEJELGFBQWEwQyxRQUFRLGVBQWdCNUMsS0FBSzZDLFVBQVUsS0FFeEJGLEVBc0I3QkosRUFuQkNoSSxPQUFPb0csS0FBS1QsY0FBY0UsU0FBU1EsSUFDL0IsSUFBSTFCLEVBQ0osR0FBWSxpQkFBUjBCLEVBQXdCLENBQ3hCLE1BQU1rQyxFQUFVLElBQUlDLElBQUkvQyxLQUFLQyxNQUEyQyxRQUFwQ2YsRUFBS2dCLGFBQWFDLFFBQVFTLFVBQXlCLElBQVAxQixFQUFnQkEsRUFBSyxLQUdyRyxHQUZBLENBQUMsaUJBQWtCLFdBQVksWUFBWWtCLFNBQVNiLEdBQVN1RCxFQUFRakcsSUFBSTBDLEtBRXJFdUQsRUFBUUUsSUFBSUwsR0FFWixZQURBTSxNQUFNLEdBQUdOLHdFQUtURyxFQUFRakcsSUFBSThGLEdBQ1p6QyxhQUFhMEMsUUFBUWhDLEVBQUtaLEtBQUs2QyxVQUFVSyxNQUFNQyxLQUFLTCxNQUVwRCxFQUFJYixFQUFzQm1CLHFCQUFxQmIsRUFBaUJHLE9BS2hGN0QsTUFBQUEsR0FBa0VBLEVBQWdCa0IsVyxjQ3JDdEZ4RixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUTRJLDRCQUF5QixFQUNqQyxNQUFNeEQsRUFBc0IsRUFBUSxLQUM5QmpGLEVBQXFCLEVBQVEsS0FzQm5DSCxFQUFRNEksdUJBckJ1QixXQUUzQixNQUFNMUksRUFBVU0sU0FBU0MsY0FBYyxZQUNqQzRFLEVBQW9CN0UsU0FBU0MsY0FBYyxtQkFDakQ0RSxNQUFBQSxHQUFzRUEsRUFBa0JDLFNBRXhGLE1BQU03RCxHQUFnQixFQUFJdEIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQlQsRUFBM0MsQ0FBb0R1QixHQUNwRCxNQUFNb0gsRUFBc0IsR0FFNUIvSSxPQUFPb0csS0FBS1QsY0FBY0UsU0FBU1EsSUFDL0IsSUFBSTFCLEVBQ1EsaUJBQVIwQixHQUFrQyxhQUFSQSxHQUMxQjBDLEVBQW9CekMsS0FBS2IsS0FBS0MsTUFBMkMsUUFBcENmLEVBQUtnQixhQUFhQyxRQUFRUyxVQUF5QixJQUFQMUIsRUFBZ0JBLEVBQUssUUFJOUdvRSxFQUFvQmxELFNBQVNDLEtBQ3pCLEVBQUlSLEVBQW9CUyxtQkFBbUJELFEsY0N0Qm5EOUYsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFtQiw0QkFBeUIsRUFDakMsTUFBTWlFLEVBQXNCLEVBQVEsS0FDOUJqRixFQUFxQixFQUFRLEtBd0duQ0gsRUFBUW1CLHVCQXZHdUIsU0FBVStDLEdBQ3JDLElBQUlPLEVBQUlDLEVBQ1JSLEVBQUd5RCxpQkFFSCxNQUFNekgsRUFBVU0sU0FBU0MsY0FBYyxZQUNqQzRFLEVBQW9CN0UsU0FBU0MsY0FBYyxtQkFDakQ0RSxNQUFBQSxHQUFzRUEsRUFBa0JDLFNBRXhGLE1BQU03RCxHQUFnQixFQUFJdEIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQlQsRUFBM0MsQ0FBb0R1QixHQUNwRCxNQUNNcUgsRUFBNEgsUUFBOUdwRSxFQUE0QyxRQUF0Q0QsRUFEVCxJQUFJb0QsU0FBU2pELE1BQ1VtRCxJQUFJLHNCQUFtQyxJQUFQdEQsT0FBZ0IsRUFBU0EsRUFBR3VELFdBQVdlLHFCQUFrQyxJQUFQckUsRUFBZ0JBLEVBQUssR0FDeko0QixFQUFhLEdBRW5CeEcsT0FBT29HLEtBQUtULGNBQWNFLFNBQVNRLElBQy9CLElBQUkxQixFQUNRLGlCQUFSMEIsR0FBa0MsYUFBUkEsR0FDMUJHLEVBQVdGLEtBQUtiLEtBQUtDLE1BQTJDLFFBQXBDZixFQUFLZ0IsYUFBYUMsUUFBUVMsVUFBeUIsSUFBUDFCLEVBQWdCQSxFQUFLLFFBR3JHLE1BQU11RSxFQUFjLElBQUlDLE9BQU8sR0FBR0gsS0FDNUJJLEVBQXlCLEdBQy9CNUMsRUFBV1gsU0FBU0MsSUFDaEJBLEVBQVFZLE1BQU1iLFNBQVNjLElBRW5CLEdBQUl1QyxFQUFZRyxLQUFLMUMsRUFBS0ssU0FBU2lDLGVBQWdCLENBQy9DLE1BQU1wQyxFQUFPLENBQ1RmLFFBQVMsQ0FDTGdCLFlBQWFoQixFQUFRQSxRQUFRZ0IsWUFDN0JDLGNBQWVqQixFQUFRQSxRQUFRaUIsZUFFbkNMLE1BQU8sQ0FDSCxDQUNJTSxTQUFVTCxFQUFLSyxTQUNmQyxnQkFBaUJOLEVBQUtNLGdCQUN0QkMsWUFBYVAsRUFBS08sWUFDbEJOLGFBQWNELEVBQUtDLGdCQUkvQndDLEVBQXVCOUMsS0FBS08sUUFHM0IsR0FBSXFDLEVBQVlHLEtBQUsxQyxFQUFLTSxnQkFBZ0JnQyxlQUFnQixDQUMzRCxNQUFNcEMsRUFBTyxDQUNUZixRQUFTLENBQ0xnQixZQUFhaEIsRUFBUUEsUUFBUWdCLFlBQzdCQyxjQUFlakIsRUFBUUEsUUFBUWlCLGVBRW5DTCxNQUFPLENBQ0gsQ0FDSU0sU0FBVUwsRUFBS0ssU0FDZkMsZ0JBQWlCTixFQUFLTSxnQkFDdEJDLFlBQWFQLEVBQUtPLFlBQ2xCTixhQUFjRCxFQUFLQyxnQkFJL0J3QyxFQUF1QjlDLEtBQUtPLFFBRzNCLEdBQUlxQyxFQUFZRyxLQUFLMUMsRUFBS08sWUFBWWdCLFlBQWEsQ0FDcEQsTUFBTXJCLEVBQU8sQ0FDVGYsUUFBUyxDQUNMZ0IsWUFBYWhCLEVBQVFBLFFBQVFnQixZQUM3QkMsY0FBZWpCLEVBQVFBLFFBQVFpQixlQUVuQ0wsTUFBTyxDQUNILENBQ0lNLFNBQVVMLEVBQUtLLFNBQ2ZDLGdCQUFpQk4sRUFBS00sZ0JBQ3RCQyxZQUFhUCxFQUFLTyxZQUNsQk4sYUFBY0QsRUFBS0MsZ0JBSS9Cd0MsRUFBdUI5QyxLQUFLTyxRQUczQixHQUFJcUMsRUFBWUcsS0FBSzFDLEVBQUtDLGFBQWFzQixZQUFhLENBQ3JELE1BQU1yQixFQUFPLENBQ1RmLFFBQVMsQ0FDTGdCLFlBQWFoQixFQUFRQSxRQUFRZ0IsWUFDN0JDLGNBQWVqQixFQUFRQSxRQUFRaUIsZUFFbkNMLE1BQU8sQ0FDSCxDQUNJTSxTQUFVTCxFQUFLSyxTQUNmQyxnQkFBaUJOLEVBQUtNLGdCQUN0QkMsWUFBYVAsRUFBS08sWUFDbEJOLGFBQWNELEVBQUtDLGdCQUkvQndDLEVBQXVCOUMsS0FBS08sVUFLeEN1QyxFQUF1QnZELFNBQVNDLEtBQzVCLEVBQUlSLEVBQW9CUyxtQkFBbUJELFEsY0N4R25EOUYsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVF3QiwrQkFBNEIsRUFDcEMsTUFBTXJCLEVBQXFCLEVBQVEsS0FDN0JpRixFQUFzQixFQUFRLEtBb0ZwQ3BGLEVBQVF3QiwwQkFuRjBCLFNBQVUwQyxHQUV4QyxNQUFNaEUsRUFBVU0sU0FBU0MsY0FBYyxZQUNqQzRFLEVBQW9CN0UsU0FBU0MsY0FBYyxtQkFDakQ0RSxNQUFBQSxHQUFzRUEsRUFBa0JDLFNBRXhGLE1BQU03RCxHQUFnQixFQUFJdEIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQlQsRUFBM0MsQ0FBb0R1QixHQUNwRCxNQUFNMkgsRUFBb0J4RSxLQUFLM0UsTUFDekJxRyxFQUFhLEdBRW5CeEcsT0FBT29HLEtBQUtULGNBQWNFLFNBQVNRLElBQy9CLElBQUkxQixFQUNRLGlCQUFSMEIsR0FBa0MsYUFBUkEsR0FDMUJHLEVBQVdGLEtBQUtiLEtBQUtDLE1BQTJDLFFBQXBDZixFQUFLZ0IsYUFBYUMsUUFBUVMsVUFBeUIsSUFBUDFCLEVBQWdCQSxFQUFLLFFBR3JHNEUsUUFBUUMsSUFBSWhELEdBRVosTUFBTWlELEVBQWFqRCxFQUFXdEUsUUFBTyxDQUFDd0gsRUFBS2xILEtBQ3ZDQSxFQUFLa0UsTUFBTWIsU0FBU2MsSUFDVSxjQUF0QkEsRUFBS0MsYUFDTDhDLEVBQUlDLElBQUksRUFBRyxDQUNQN0QsUUFBUyxDQUNMZ0IsWUFBYXRFLEVBQUtzRCxRQUFRZ0IsWUFDMUJDLGNBQWV2RSxFQUFLc0QsUUFBUWlCLGVBRWhDTCxNQUFPLENBQUNDLEtBR2UsV0FBdEJBLEVBQUtDLGFBQ1Y4QyxFQUFJQyxJQUFJLEVBQUcsQ0FDUDdELFFBQVMsQ0FDTGdCLFlBQWF0RSxFQUFLc0QsUUFBUWdCLFlBQzFCQyxjQUFldkUsRUFBS3NELFFBQVFpQixlQUVoQ0wsTUFBTyxDQUFDQyxLQUdlLFNBQXRCQSxFQUFLQyxhQUNWOEMsRUFBSUMsSUFBSSxFQUFHLENBQ1A3RCxRQUFTLENBQ0xnQixZQUFhdEUsRUFBS3NELFFBQVFnQixZQUMxQkMsY0FBZXZFLEVBQUtzRCxRQUFRaUIsZUFFaENMLE1BQU8sQ0FBQ0MsS0FHZSxXQUF0QkEsRUFBS0MsYUFDVjhDLEVBQUlDLElBQUksRUFBRyxDQUNQN0QsUUFBUyxDQUNMZ0IsWUFBYXRFLEVBQUtzRCxRQUFRZ0IsWUFDMUJDLGNBQWV2RSxFQUFLc0QsUUFBUWlCLGVBRWhDTCxNQUFPLENBQUNDLEtBR2UsUUFBdEJBLEVBQUtDLGNBQ1Y4QyxFQUFJQyxJQUFJLEVBQUcsQ0FDUDdELFFBQVMsQ0FDTGdCLFlBQWF0RSxFQUFLc0QsUUFBUWdCLFlBQzFCQyxjQUFldkUsRUFBS3NELFFBQVFpQixlQUVoQ0wsTUFBTyxDQUFDQyxRQUliK0MsSUFDUixJQUFJRSxLQUNQTCxRQUFRQyxJQUFJQyxHQUVaLE1BQU1JLEVBQWdCbEIsTUFBTUMsS0FBS2EsR0FDUCxtQkFBdEJILEdBQ0FPLEVBQWNDLE1BQUssQ0FBQ0MsRUFBR0MsSUFBTUQsRUFBRSxHQUFLQyxFQUFFLEtBRWhCLG1CQUF0QlYsR0FDQU8sRUFBY0MsTUFBSyxDQUFDQyxFQUFHQyxJQUFNQSxFQUFFLEdBQUtELEVBQUUsS0FHMUNGLEVBQWNoRSxTQUFTb0UsS0FDbkIsRUFBSTNFLEVBQW9CUyxtQkFBbUJrRSxFQUFXLFMsYUNwRjlEakssT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFnSyx5QkFBc0IsRUFDOUIsTUFBTTdKLEVBQXFCLEVBQVEsS0FDN0JpRixFQUFzQixFQUFRLEtBa0RwQ3BGLEVBQVFnSyxvQkFqRG9CLFdBRXhCLE1BQU05SixFQUFVTSxTQUFTQyxjQUFjLFlBQ2pDNEUsRUFBb0I3RSxTQUFTQyxjQUFjLG1CQUNqRDRFLE1BQUFBLEdBQXNFQSxFQUFrQkMsU0FFeEYsTUFBTTdELEdBQWdCLEVBQUl0QixFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLG9CQUNsRSxFQUFJUCxFQUFtQlEsb0JBQW9CVCxFQUEzQyxDQUFvRHVCLEdBQ3BELE1BQU02RSxFQUFhLEdBRW5CeEcsT0FBT29HLEtBQUtULGNBQWNFLFNBQVNRLElBQy9CLElBQUkxQixFQUNRLGlCQUFSMEIsR0FBa0MsYUFBUkEsR0FDMUJHLEVBQVdGLEtBQUtiLEtBQUtDLE1BQTJDLFFBQXBDZixFQUFLZ0IsYUFBYUMsUUFBUVMsVUFBeUIsSUFBUDFCLEVBQWdCQSxFQUFLLFFBR3JHLE1BQU13RixFQUFNLElBQUlDLEtBQ1ZDLEVBQU9GLEVBQUlHLFVBQ1hDLEVBQVFKLEVBQUlLLFdBQWEsRUFFekJDLEVBQVEsR0FERE4sRUFBSU8saUJBQ1FILEVBQVEsR0FBSyxJQUFNQSxFQUFRQSxLQUFTRixFQUFPLEdBQUssSUFBTUEsRUFBT0EsSUFDaEZNLEVBQXVCLEdBRTdCbkUsRUFBV1gsU0FBU0MsSUFDaEJBLEVBQVFZLE1BQU1iLFNBQVNjLElBQ25CLEdBQUlBLEVBQUtPLGNBQWdCdUQsRUFBTyxDQUM1QixNQUFNNUQsRUFBTyxDQUNUZixRQUFTLENBQ0xnQixZQUFhaEIsRUFBUUEsUUFBUWdCLFlBQzdCQyxjQUFlakIsRUFBUUEsUUFBUWlCLGVBRW5DTCxNQUFPLENBQ0gsQ0FDSU0sU0FBVUwsRUFBS0ssU0FDZkMsZ0JBQWlCTixFQUFLTSxnQkFDdEJDLFlBQWFQLEVBQUtPLFlBQ2xCTixhQUFjRCxFQUFLQyxnQkFJL0IrRCxFQUFxQnJFLEtBQUtPLFVBS3RDOEQsRUFBcUI5RSxTQUFTQyxLQUMxQixFQUFJUixFQUFvQlMsbUJBQW1CRCxRLFdDbERuRDlGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRMEssZ0NBQTZCLEVBNkNyQzFLLEVBQVEwSywyQkE1QzJCLFdBQy9CLElBQUlqRyxFQUFJQyxFQUFJK0MsRUFBSUMsRUFBSWlELEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQ3ZDeEYsYUFBYUMsUUFBUSxhQUN0QkQsYUFBYTBDLFFBQVEsV0FBWTVDLEtBQUs2QyxVQUFVLEtBRXBELE1BQU1yQyxFQUE2RyxRQUExRnJCLEVBQXFDLFFBQS9CRCxFQUFLRyxLQUFLc0csdUJBQW9DLElBQVB6RyxPQUFnQixFQUFTQSxFQUFHdUIsbUJBQWdDLElBQVB0QixFQUFnQkEsRUFBSyxHQUMxSXlHLEVBQTBDLFFBQXJCMUQsRUFBSzdDLEtBQUszRSxhQUEwQixJQUFQd0gsRUFBZ0JBLEVBQUssR0FDdkUyRCxFQUEwUixRQUExUU4sRUFBcU4sUUFBL01ELEVBQTBKLFFBQXBKRCxFQUFnRyxRQUExRkQsRUFBbUMsUUFBN0JqRCxFQUFLOUMsS0FBS3lHLHFCQUFrQyxJQUFQM0QsT0FBZ0IsRUFBU0EsRUFBRzJELHFCQUFrQyxJQUFQVixPQUFnQixFQUFTQSxFQUFHVyxrQkFBK0IsSUFBUFYsT0FBZ0IsRUFBU0EsRUFBR1csbUJBQWdDLElBQVBWLE9BQWdCLEVBQVNBLEVBQUc3RSxtQkFBZ0MsSUFBUDhFLEVBQWdCQSxFQUFLLEdBQ3ZUeEUsRUFBYSxHQUVuQnhHLE9BQU9vRyxLQUFLVCxjQUFjRSxTQUFTUSxJQUMvQixJQUFJMUIsRUFDUSxpQkFBUjBCLEdBQWtDLGFBQVJBLEdBQ3RCQSxJQUFRSixHQUNSTyxFQUFXRixLQUFLYixLQUFLQyxNQUEyQyxRQUFwQ2YsRUFBS2dCLGFBQWFDLFFBQVFTLFVBQXlCLElBQVAxQixFQUFnQkEsRUFBSyxRQUl6RyxNQUFNK0csRUFBZ0JqRyxLQUFLQyxNQUFrRCxRQUEzQ3VGLEVBQUt0RixhQUFhQyxRQUFRLG1CQUFnQyxJQUFQcUYsRUFBZ0JBLEVBQUssSUFDcEdVLEVBQW1CLEdBRW5CQyxFQUFtQixHQUN6QnBGLEVBQVcsR0FBR0UsTUFBTWIsU0FBU2MsSUFDckJBLEVBQUtLLFdBQWFzRSxFQUNsQk0sRUFBaUJ0RixLQUFLSyxHQUd0QmdGLEVBQWlCckYsS0FBS0ssTUFJOUJILEVBQVcsR0FBR0UsTUFBUWtGLEVBRXRCakcsYUFBYTBDLFFBQVFwQyxFQUFpQlIsS0FBSzZDLFVBQVU5QixFQUFXLEtBQ2hFLE1BQU1xRixFQUE2QixDQUMvQi9GLFFBQVMsQ0FBRWdCLFlBQWFiLEVBQWlCYyxjQUFlc0UsR0FDeEQzRSxNQUFPLENBQUNpRixFQUFpQixLQUc3QkQsRUFBY3BGLEtBQUt1RixHQUNuQmxHLGFBQWEwQyxRQUFRLFdBQVk1QyxLQUFLNkMsVUFBVW9ELElBRTJDLFFBQTFGUCxFQUFtQyxRQUE3QkQsRUFBS3BHLEtBQUt5RyxxQkFBa0MsSUFBUEwsT0FBZ0IsRUFBU0EsRUFBR0sscUJBQWtDLElBQVBKLEdBQXlCQSxFQUFHM0YsVyxZQzVDbkl4RixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUTRMLDhCQUEyQixFQU1uQzVMLEVBQVE0TCx5QkFMeUIsV0FDN0IsTUFBTTNHLEVBQVl6RSxTQUFTQyxjQUFjLG1CQUNyQ3dFLEdBQ0FBLEVBQVVLLFcsY0NMbEJ4RixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUTZMLDBCQUF1QixFQUMvQixNQUFNQyxFQUE2QixFQUFRLEtBQ3JDMUcsRUFBc0IsRUFBUSxLQTBCcENwRixFQUFRNkwscUJBekJxQixTQUFVM0gsR0FDbkMsSUFBSU8sRUFBSUMsRUFBSStDLEVBQUlDLEVBQUlpRCxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJYyxFQUNoRDdILEVBQUd5RCxpQkFDSCxNQUFNcUUsRUFBZ0J4TCxTQUFTQyxjQUFjLG1CQUN2Q3dMLEVBQWUsSUFBSXBFLFNBQVNqRCxNQWE1QnNILEVBTEssQ0FDSHRHLFFBQVMsQ0FBRWdCLFlBUnNILFFBQTVHbEMsRUFBd0QsUUFBbERELEVBQUt3SCxFQUFhbEUsSUFBSSw4QkFBMkMsSUFBUHRELE9BQWdCLEVBQVNBLEVBQUd1RCxrQkFBK0IsSUFBUHRELEVBQWdCQSxFQUFLLEdBUXRJbUMsY0FQNkcsUUFBOUdhLEVBQTBELFFBQXBERCxFQUFLd0UsRUFBYWxFLElBQUksZ0NBQTZDLElBQVBOLE9BQWdCLEVBQVNBLEVBQUdPLGtCQUErQixJQUFQTixFQUFnQkEsRUFBSyxJQVFsS2xCLE1BQU8sQ0FBQyxDQUFFTSxTQVB5RyxRQUFyRzhELEVBQWlELFFBQTNDRCxFQUFLc0IsRUFBYWxFLElBQUksdUJBQW9DLElBQVA0QyxPQUFnQixFQUFTQSxFQUFHM0Msa0JBQStCLElBQVA0QyxFQUFnQkEsRUFBSyxHQU81SDdELGdCQU42RyxRQUE1RytELEVBQXdELFFBQWxERCxFQUFLb0IsRUFBYWxFLElBQUksOEJBQTJDLElBQVA4QyxPQUFnQixFQUFTQSxFQUFHN0Msa0JBQStCLElBQVA4QyxFQUFnQkEsRUFBSyxHQU16SDlELFlBTG9GLFFBQXhHZ0UsRUFBb0QsUUFBOUNELEVBQUtrQixFQUFhbEUsSUFBSSwwQkFBdUMsSUFBUGdELE9BQWdCLEVBQVNBLEVBQUcvQyxrQkFBK0IsSUFBUGdELEVBQWdCQSxFQUFLLEdBS3BHdEUsYUFKcUYsUUFBL0dxRixFQUEyRCxRQUFyRGQsRUFBS2dCLEVBQWFsRSxJQUFJLGlDQUE4QyxJQUFQa0QsT0FBZ0IsRUFBU0EsRUFBR2pELGtCQUErQixJQUFQK0QsRUFBZ0JBLEVBQUssT0FTekosRUFBSUQsRUFBMkJLLDBCQUEwQkQsS0FFeEUsRUFBSTlHLEVBQW9CUyxtQkFBbUJxRyxHQUUvQ0YsTUFBQUEsR0FBOERBLEVBQWMxRyxXLFlDM0JoRnhGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRb00sOEJBQTJCLEVBTW5DcE0sRUFBUW9NLHlCQUx5QixTQUFVbEksR0FFdkNVLEtBQUtzQyxrQkFBa0IsSUFDdkJ0QyxLQUFLeUMsa0IsY0NMVHZILE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRcU0sNEJBQXlCLEVBQ2pDLE1BQU1sTSxFQUFxQixFQUFRLEtBQzdCaUYsRUFBc0IsRUFBUSxLQWtEcENwRixFQUFRcU0sdUJBakR1QixXQUUzQixNQUFNbk0sRUFBVU0sU0FBU0MsY0FBYyxZQUNqQzRFLEVBQW9CN0UsU0FBU0MsY0FBYyxtQkFDakQ0RSxNQUFBQSxHQUFzRUEsRUFBa0JDLFNBRXhGLE1BQU03RCxHQUFnQixFQUFJdEIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQlQsRUFBM0MsQ0FBb0R1QixHQUNwRCxNQUFNNkUsRUFBYSxHQUVuQnhHLE9BQU9vRyxLQUFLVCxjQUFjRSxTQUFTUSxJQUMvQixJQUFJMUIsRUFDUSxpQkFBUjBCLEdBQWtDLGFBQVJBLEdBQzFCRyxFQUFXRixLQUFLYixLQUFLQyxNQUEyQyxRQUFwQ2YsRUFBS2dCLGFBQWFDLFFBQVFTLFVBQXlCLElBQVAxQixFQUFnQkEsRUFBSyxRQUdyRyxNQUFNd0YsRUFBTSxJQUFJQyxLQUNWQyxFQUFPRixFQUFJRyxVQUNYQyxFQUFRSixFQUFJSyxXQUFhLEVBRXpCQyxFQUFRLEdBREROLEVBQUlPLGlCQUNRSCxFQUFRLEdBQUssSUFBTUEsRUFBUUEsS0FBU0YsRUFBTyxHQUFLLElBQU1BLEVBQU9BLElBQ2hGTSxFQUF1QixHQUU3Qm5FLEVBQVdYLFNBQVNDLElBQ2hCQSxFQUFRWSxNQUFNYixTQUFTYyxJQUNuQixHQUFJQSxFQUFLTyxjQUFnQnVELEVBQU8sQ0FDNUIsTUFBTTVELEVBQU8sQ0FDVGYsUUFBUyxDQUNMZ0IsWUFBYWhCLEVBQVFBLFFBQVFnQixZQUM3QkMsY0FBZWpCLEVBQVFBLFFBQVFpQixlQUVuQ0wsTUFBTyxDQUNILENBQ0lNLFNBQVVMLEVBQUtLLFNBQ2ZDLGdCQUFpQk4sRUFBS00sZ0JBQ3RCQyxZQUFhUCxFQUFLTyxZQUNsQk4sYUFBY0QsRUFBS0MsZ0JBSS9CK0QsRUFBcUJyRSxLQUFLTyxVQUt0QzhELEVBQXFCOUUsU0FBU0MsS0FDMUIsRUFBSVIsRUFBb0JTLG1CQUFtQkQsUSxjQ2xEbkQ5RixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUXNNLFlBQVMsRUFDakIsTUFBTW5NLEVBQXFCLEVBQVEsS0FPbkNILEVBQVFzTSxPQU5PLFdBQ1gsTUFBTS9MLEVBQU9DLFNBQVNDLGNBQWMsU0FDOUI2TCxHQUFTLEVBQUluTSxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLFlBQzNELEVBQUlQLEVBQW1CUSxvQkFBb0JKLEVBQTNDLENBQWlEK0wsSUFDakQsRUFBSW5NLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLGtCQUFrQixFQUFJWixFQUFtQlEsb0JBQW9CMkwsR0FBaEksRUFBeUksRUFBSW5NLEVBQW1CTyxhQUFhLEtBQXBDLENBQTBDLENBQUMsUUFBUyxvQixjQ1BqTVosT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFtRSxrQkFBZSxFQUN2QixNQUFNaEUsRUFBcUIsRUFBUSxLQUM3Qm9NLEVBQTBCLEVBQVEsS0FDbENDLEVBQWdDLEVBQVEsS0FDeENDLEVBQTRCLEVBQVEsS0FDcENDLEVBQTZCLEVBQVEsS0FzRDNDMU0sRUFBUW1FLGFBckRhLFdBQ2pCLE1BQU13SSxFQUFVbk0sU0FBU0MsY0FBYyxZQUVqQ21NLEdBQXNCLEVBQUl6TSxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLDBCQUN4RSxFQUFJUCxFQUFtQlEsb0JBQW9CZ00sRUFBM0MsQ0FBb0RDLEdBQ3BELE1BQU1DLEdBQTZCLEVBQUkxTSxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGlDQUMvRSxFQUFJUCxFQUFtQlEsb0JBQW9CaU0sRUFBM0MsQ0FBZ0VDLElBQ2hFLEVBQUkxTSxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxnQkFBZ0IsRUFBSVosRUFBbUJRLG9CQUFvQmtNLEdBQTlILEVBQTJKLEVBQUkxTSxFQUFtQk8sYUFBYSxLQUFwQyxDQUEwQyxDQUFDLGVBQWdCLHFCQUN0TixNQUFNb00sR0FBaUIsRUFBSTNNLEVBQW1CTyxhQUFhLE9BQXBDLENBQTRDLENBQUMscUJBQ3BFLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FDcEUsQ0FBQyxTQUFVLEtBQ1gsQ0FBQyxTQUFVLFFBQ1gsQ0FBQyxLQUFNLG1CQUNQLENBQUMsT0FBUSxzQkFDVCxFQUFJYixFQUFtQmUsZ0JBQWdCLFNBQXZDLENBQWlEdUwsRUFBMEJsRiwwQkFBMEIsRUFBSXBILEVBQW1CUSxvQkFBb0JpTSxHQUxwSixDQUswS0UsR0FDMUssTUFBTUMsR0FBMEIsRUFBSTVNLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsK0JBQzVFLEVBQUlQLEVBQW1CUSxvQkFBb0JtTSxFQUEzQyxDQUEyREMsSUFDM0QsRUFBSTVNLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLE1BQU8sc0JBQXNCLEVBQUliLEVBQW1CWSxlQUFlLFNBQVMsRUFBSVosRUFBbUJRLG9CQUFvQm9NLEdBQWpNLEVBQTJOLEVBQUk1TSxFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLGlCQUV6USxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFFBQXZDLENBQWdEd0wsRUFBMkJ0RiwyQkFBMkIsRUFBSWpILEVBQW1CZSxnQkFBZ0IsVUFBdkMsQ0FBa0RxTCxFQUF3QnRGLHdCQUF3QixFQUFJOUcsRUFBbUJhLG9CQUFvQixDQUM1USxDQUFDLEtBQU0sbUJBQ1AsQ0FBQyxPQUFRLFFBQ1QsQ0FBQyxZQUFhLEtBQ2QsQ0FBQyxZQUFhLE1BQ2QsQ0FBQyxVQUFXLGFBQ1osQ0FBQyxjQUFlLHlCQUNoQixDQUFDLE9BQVEsbUJBQ1QsQ0FBQyxXQUFZLE9BQ2IsRUFBSWIsRUFBbUJRLG9CQUFvQm9NLEdBVC9DLEVBU3lFLEVBQUk1TSxFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLHFCQUN2SCxNQUFNc00sR0FBNEIsRUFBSTdNLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsaUNBQzlFLEVBQUlQLEVBQW1CUSxvQkFBb0JtTSxFQUEzQyxDQUEyREUsSUFDM0QsRUFBSTdNLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLE1BQU8sd0JBQXdCLEVBQUliLEVBQW1CWSxlQUFlLFdBQVcsRUFBSVosRUFBbUJRLG9CQUFvQnFNLEdBQXJNLEVBQWlPLEVBQUk3TSxFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLG1CQUUvUSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQ3BFLENBQUMsT0FBUSxTQUNULENBQUMsS0FBTSxxQkFDUCxDQUFDLE9BQVEscUJBQ1QsQ0FBQyxRQUFTLGNBQ1YsRUFBSWIsRUFBbUJRLG9CQUFvQnFNLEdBTC9DLEVBSzJFLEVBQUk3TSxFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLHVCQUN6SCxNQUFNdU0sR0FBMkIsRUFBSTlNLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsK0JBQzdFLEVBQUlQLEVBQW1CUSxvQkFBb0JtTSxFQUEzQyxDQUEyREcsR0FDM0QsTUFBTUMsR0FBb0IsRUFBSS9NLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsT0FBUSx3QkFDakYsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsV0FBVyxFQUFJWixFQUFtQmUsZ0JBQWdCLFFBQXZDLENBQWdEc0wsRUFBOEJsRiw4QkFBOEIsRUFBSW5ILEVBQW1CYSxvQkFBb0IsQ0FDak8sQ0FBQyxPQUFRLFVBQ1QsQ0FBQyxPQUFRLGtCQUNULEVBQUliLEVBQW1CUSxvQkFBb0JzTSxHQUgvQyxDQUcwRUMsR0FDMUUsTUFBTUMsR0FBaUIsRUFBSWhOLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsT0FBUSxxQkFDOUUsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsUUFBUSxFQUFJWixFQUFtQmEsb0JBQW9CLENBQ2xILENBQUMsT0FBUSxVQUNULENBQUMsT0FBUSxtQkFDVCxDQUFDLE9BQVEsc0JBQ1QsRUFBSWIsRUFBbUJRLG9CQUFvQnNNLEdBSi9DLENBSTBFRSxLLGNDMUQ5RXJOLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRaUYsZUFBWSxFQUNwQixNQUFNOUUsRUFBcUIsRUFBUSxLQUM3QmlOLEVBQTBCLEVBQVEsS0FDbENDLEVBQTZCLEVBQVEsS0FDckNDLEVBQXlCLEVBQVEsS0FDakNDLEVBQTZCLEVBQVEsS0F5RzNDdk4sRUFBUWlGLFVBeEdVLFNBQVV1SSxFQUFrQkMsR0FDMUMsTUFBTWxOLEVBQU9DLFNBQVNDLGNBQWMsU0FDOUJ3SixFQUFNLElBQUlDLEtBQ1Y4QixHQUFnQixFQUFJN0wsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxvQkFDbEUsRUFBSVAsRUFBbUJRLG9CQUFvQkosRUFBM0MsQ0FBaUR5TCxHQUNqRCxNQUFNMEIsR0FBVyxFQUFJdk4sRUFBbUJPLGFBQWEsT0FBcEMsQ0FBNEMsQ0FBQyxPQUFRLGtCQUN0RSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFNBQXZDLENBQWlEb00sRUFBdUJ6Qix1QkFBdUIsRUFBSTFMLEVBQW1CYSxvQkFBb0IsQ0FDbkssQ0FBQyxTQUFVLEtBQ1gsQ0FBQyxTQUFVLFFBQ1gsQ0FBQyxLQUFNLGdCQUNQLENBQUMsT0FBUSxtQkFDVCxFQUFJYixFQUFtQlEsb0JBQW9CcUwsR0FML0MsQ0FLK0QwQixJQUMvRCxFQUFJdk4sRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsa0JBQWtCLEVBQUlaLEVBQW1CUSxvQkFBb0IrTSxHQUFoSSxFQUEySSxFQUFJdk4sRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxlQUFnQixrQkFDdE0sTUFBTWlOLEdBQXVCLEVBQUl4TixFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLDRCQUN6RSxFQUFJUCxFQUFtQlEsb0JBQW9CK00sRUFBM0MsQ0FBcURDLElBQ3JELEVBQUl4TixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxNQUFPLG1CQUFtQixFQUFJYixFQUFtQlksZUFBZSxTQUFTLEVBQUlaLEVBQW1CUSxvQkFBb0JnTixHQUE5TCxFQUFxTixFQUFJeE4sRUFBbUJPLGFBQWEsUUFBcEMsQ0FBNkMsQ0FBQyxpQkFDblEsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJlLGdCQUFnQixRQUF2QyxDQUFnRHFNLEVBQTJCbkIsMkJBQTJCLEVBQUlqTSxFQUFtQmUsZ0JBQWdCLFVBQXZDLENBQWtEa00sRUFBd0JqRyx3QkFBd0IsRUFBSWhILEVBQW1CYSxvQkFBb0IsQ0FDNVEsQ0FBQyxPQUFRLFFBQ1QsQ0FBQyxPQUFRLGdCQUNULENBQUMsS0FBTSxnQkFDUCxDQUFDLE9BQVEsZ0JBQ1QsQ0FBQyxZQUFhLEtBQ2QsQ0FBQyxZQUFhLE1BQ2QsQ0FBQyxVQUFXLGdCQUNaLENBQUMsY0FBZSw0QkFDaEIsQ0FBQyxXQUFZLE9BQ2IsRUFBSWIsRUFBbUJRLG9CQUFvQmdOLEdBVi9DLEVBVXNFLEVBQUl4TixFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLGtCQUNwSCxNQUFNa04sR0FBdUIsRUFBSXpOLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsNEJBQ3pFLEVBQUlQLEVBQW1CUSxvQkFBb0IrTSxFQUEzQyxDQUFxREUsSUFDckQsRUFBSXpOLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLE1BQU8sMEJBQTBCLEVBQUliLEVBQW1CWSxlQUFlLGdCQUFnQixFQUFJWixFQUFtQlEsb0JBQW9CaU4sR0FBNU0sRUFBbU8sRUFBSXpOLEVBQW1CTyxhQUFhLFFBQXBDLENBQTZDLENBQUMsd0JBQ2pSLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FDcEUsQ0FBQyxLQUFNLHVCQUNQLENBQUMsZUFBZ0IsTUFDakIsQ0FBQyxPQUFRLGdCQUNULENBQUMsWUFBYSxPQUNkLENBQUMsT0FBUSx1QkFDVCxDQUFDLGFBQWMsUUFDZixDQUFDLE9BQVEsV0FDVCxFQUFJYixFQUFtQlEsb0JBQW9CaU4sR0FSL0MsRUFRc0UsRUFBSXpOLEVBQW1CTyxhQUFhLFdBQXBDLENBQWdELENBQUMseUJBQ3ZILE1BQU1tTixHQUF1QixFQUFJMU4sRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyw0QkFDekUsRUFBSVAsRUFBbUJRLG9CQUFvQitNLEVBQTNDLENBQXFERyxJQUNyRCxFQUFJMU4sRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsYUFBYSxFQUFJWixFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxNQUFPLHNCQUFzQixFQUFJYixFQUFtQlEsb0JBQW9Ca04sR0FBck0sRUFBNE4sRUFBSTFOLEVBQW1CTyxhQUFhLFFBQXBDLENBQTZDLENBQUMsb0JBQzFRLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FDcEUsQ0FBQyxPQUFRLFFBQ1QsQ0FBQyxLQUFNLG1CQUNQLENBQ0ksTUFDQSxHQUFHaUosRUFBSU8saUJBQWlCUCxFQUFJSyxXQUFhLEdBQUssS0FBT0wsRUFBSUssV0FBYSxHQUFLTCxFQUFJSyxXQUFhLEtBQUtMLEVBQUlHLFVBQVksR0FBSyxJQUFNSCxFQUFJRyxVQUFZSCxFQUFJRyxhQUVwSixDQUNJLE1BQ0EsR0FBR0gsRUFBSU8sY0FBZ0IsT0FBT1AsRUFBSUssV0FBYSxHQUFLLEtBQU9MLEVBQUlLLFdBQWEsR0FBS0wsRUFBSUssV0FBYSxLQUFLTCxFQUFJRyxVQUFZLEdBQUssSUFBTUgsRUFBSUcsVUFBWUgsRUFBSUcsYUFFMUosQ0FBQyxPQUFRLG1CQUNULENBQUMsY0FBZSxjQUNoQixDQUFDLFVBQVcseURBQ1osQ0FBQyxXQUFZLE9BQ2IsRUFBSWpLLEVBQW1CUSxvQkFBb0JrTixHQWYvQyxFQWVzRSxFQUFJMU4sRUFBbUJPLGFBQWEsUUFBcEMsQ0FBNkMsQ0FBQyxxQkFDcEgsTUFBTW9OLEdBQTJCLEVBQUkzTixFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGdDQUM3RSxFQUFJUCxFQUFtQlEsb0JBQW9CK00sRUFBM0MsQ0FBcURJLElBQ3JELEVBQUkzTixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxtQkFBbUIsRUFBSVosRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsTUFBTyw2QkFBNkIsRUFBSWIsRUFBbUJRLG9CQUFvQm1OLEdBQWxOLEVBQTZPLEVBQUkzTixFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLDBCQUMzUixNQUFNcU4sR0FBaUIsRUFBSTVOLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsNEJBQ3RFLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FDcEUsQ0FBQyxPQUFRLDBCQUNULENBQUMsS0FBTSwwQkFDUCxDQUFDLE9BQVEsZ0JBQ1QsQ0FBQyxRQUFTLDBCQUNWLENBQUMsV0FBWSxPQUNiLEVBQUliLEVBQW1CUSxvQkFBb0JtTixHQU4vQyxDQU0wRUMsSUFDMUUsRUFBSTVOLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLGlDQUFpQyxFQUFJWixFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxRQUFTLE9BQU8sRUFBSWIsRUFBbUJRLG9CQUFvQm9OLEdBQTVNLEVBQTZOLEVBQUk1TixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDRCQUM1USxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxRQUFTLFVBQVUsRUFBSWIsRUFBbUJZLGVBQWUsUUFBUSxFQUFJWixFQUFtQlEsb0JBQW9Cb04sR0FBdEwsRUFBdU0sRUFBSTVOLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsNEJBQ3RQLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsYUFBYSxFQUFJYixFQUFtQlksZUFBZSxXQUFXLEVBQUlaLEVBQW1CUSxvQkFBb0JvTixHQUE1TCxFQUE2TSxFQUFJNU4sRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyw0QkFDNVAsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsUUFBUyxXQUFXLEVBQUliLEVBQW1CWSxlQUFlLFNBQVMsRUFBSVosRUFBbUJRLG9CQUFvQm9OLEdBQXhMLEVBQXlNLEVBQUk1TixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDRCQUN4UCxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxRQUFTLGFBQWEsRUFBSWIsRUFBbUJZLGVBQWUsV0FBVyxFQUFJWixFQUFtQlEsb0JBQW9Cb04sR0FBNUwsRUFBNk0sRUFBSTVOLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsNEJBQzVQLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CYSxvQkFBb0IsQ0FBQyxDQUFDLFFBQVMsZ0JBQWdCLEVBQUliLEVBQW1CWSxlQUFlLGNBQWMsRUFBSVosRUFBbUJRLG9CQUFvQm9OLEdBQWxNLEVBQW1OLEVBQUk1TixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLDRCQUVsUSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQ3BFLENBQUMsU0FBVSxJQUNYLENBQUMsUUFBUyxHQUFHd00sS0FDYixDQUFDLE9BQVEsdUJBQ1QsQ0FBQyxPQUFRLFdBQ1QsRUFBSXJOLEVBQW1CUSxvQkFBb0IrTSxHQUwvQyxFQUswRCxFQUFJdk4sRUFBbUJPLGFBQWEsUUFBcEMsQ0FBNkMsQ0FBQyxrQ0FFeEcsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJhLG9CQUFvQixDQUNwRSxDQUFDLFNBQVUsSUFDWCxDQUFDLFFBQVMsR0FBR3lNLEtBQ2IsQ0FBQyxPQUFRLHlCQUNULENBQUMsT0FBUSxXQUNULEVBQUl0TixFQUFtQlEsb0JBQW9CK00sR0FML0MsRUFLMEQsRUFBSXZOLEVBQW1CTyxhQUFhLFFBQXBDLENBQTZDLENBQUMsbUNBQ3hHLE1BQU1zTixHQUF3QixFQUFJN04sRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyw2QkFDMUUsRUFBSVAsRUFBbUJRLG9CQUFvQitNLEVBQTNDLENBQXFETSxHQUNyRCxNQUFNQyxHQUFpQixFQUFJOU4sRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyxPQUFRLHFCQUM5RSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxXQUFXLEVBQUlaLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0RtTSxFQUEyQnpCLDJCQUEyQixFQUFJekwsRUFBbUJhLG9CQUFvQixDQUMzTixDQUFDLE9BQVEsU0FDVCxDQUFDLE9BQVEsbUJBQ1QsQ0FBQyxPQUFRLG1CQUNULEVBQUliLEVBQW1CUSxvQkFBb0JxTixHQUovQyxDQUl1RUMsR0FDdkUsTUFBTUMsR0FBYyxFQUFJL04sRUFBbUJPLGFBQWEsU0FBcEMsQ0FBOEMsQ0FBQyxPQUFRLGtCQUMzRSxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxRQUFRLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FDbEgsQ0FBQyxPQUFRLFVBQ1QsQ0FBQyxPQUFRLGdCQUNULENBQUMsT0FBUSxtQkFDVCxFQUFJYixFQUFtQlEsb0JBQW9CcU4sR0FKL0MsQ0FJdUVFLEssY0M3RzNFcE8sT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVEySSx5QkFBc0IsRUFDOUIsTUFBTXhJLEVBQXFCLEVBQVEsS0FDN0JnTyxFQUE4QixFQUFRLEtBQ3RDQyxFQUEyQixFQUFRLEtBY3pDcE8sRUFBUTJJLG9CQWJvQixTQUFVMEYsRUFBV0MsR0FDN0MsTUFBTUMsRUFBb0IvTixTQUFTQyxjQUFjLHVCQUMzQytOLEdBQW1CLEVBQUlyTyxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGtCQUFtQixhQUN4RixFQUFJUCxFQUFtQlEsb0JBQW9CNE4sRUFBM0MsQ0FBOERDLElBQzlELEVBQUlyTyxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFFBQXZDLENBQWdEa04sRUFBeUJ0SSx5QkFBeUIsRUFBSTNGLEVBQW1CYSxvQkFBb0IsQ0FDdEssQ0FBQyxZQUFhLEdBQUdxTixLQUNqQixDQUFDLGNBQWUsR0FBR0MsUUFDbkIsRUFBSW5PLEVBQW1CdUIsZ0JBQWdCLENBQUMsQ0FBQyxRQUFTLEdBQUc0TSxRQUFrQixFQUFJbk8sRUFBbUJZLGVBQWUsR0FBR3NOLE1BQWMsRUFBSWxPLEVBQW1CUSxvQkFBb0I2TixHQUg3SyxFQUdnTSxFQUFJck8sRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxtQkFDM08sRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJ1QixnQkFBZ0IsQ0FBQyxDQUFDLFFBQVMsR0FBRzRNLFFBQWtCLEVBQUluTyxFQUFtQlksZUFBZSxNQUFNLEVBQUlaLEVBQW1CYSxvQkFBb0IsQ0FDdkwsQ0FBQyxZQUFhLEdBQUdxTixLQUNqQixDQUFDLGNBQWUsR0FBR0MsUUFDbkIsRUFBSW5PLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0RpTixFQUE0QjVKLDRCQUE0QixFQUFJcEUsRUFBbUJRLG9CQUFvQjZOLEdBSHZKLEVBRzBLLEVBQUlyTyxFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLE9BQVEsc0IsY0NoQnJPWixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUTZGLHVCQUFvQixFQUM1QixNQUFNMUYsRUFBcUIsRUFBUSxLQUM3QnNPLEVBQStCLEVBQVEsSUErQzdDek8sRUFBUTZGLGtCQTlDa0IsVUFBVSxRQUFFRCxFQUFPLE1BQUVZLEdBQVNrSSxHQUFrQixHQUN0RSxNQUFNLFlBQUU5SCxFQUFXLGNBQUVDLEdBQWtCakIsRUFDdkNZLEVBQU1iLFNBQVEsQ0FBQ2MsRUFBTWtJLEtBQ2pCLE1BQU0sU0FBRTdILEVBQVEsZ0JBQUVDLEVBQWUsWUFBRUMsRUFBVyxhQUFFTixHQUFpQkYsRUFBTW1JLEdBQ2pFbE4sRUFBZ0JqQixTQUFTQyxjQUFjLG1CQUN2Q21PLEdBQXVCLEVBQUl6TyxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLDJCQUN6RSxFQUFJUCxFQUFtQlEsb0JBQW9CYyxFQUEzQyxDQUEwRG1OLEdBQzFELE1BQU1DLEdBQW1CLEVBQUkxTyxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLG1DQUNyRSxFQUFJUCxFQUFtQlEsb0JBQW9CaU8sRUFBM0MsQ0FBaUVDLElBQ2pFLEVBQUkxTyxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxjQUFlLEdBQUc2RixRQUFvQixFQUFJMUcsRUFBbUJZLGVBQWUsR0FBRzZGLE1BQWdCLEVBQUl6RyxFQUFtQnVCLGdCQUFnQixDQUFDLENBQUMsUUFBUyxHQUFHbUYsUUFBb0IsRUFBSTFHLEVBQW1CUSxvQkFBb0JrTyxHQUE3UixFQUFnVCxFQUFJMU8sRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxlQUFnQiw4QkFDM1csRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJhLG9CQUFvQixDQUFDLENBQUMsTUFBTyxjQUFqRixFQUFnRyxFQUFJYixFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLFFBQVMsdUJBQ3ZKLE1BQU1vTyxHQUFXLEVBQUkzTyxFQUFtQk8sYUFBYSxRQUFwQyxDQUE2QyxDQUFDLDBCQUMvRCxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFFBQXZDLENBQWdEdU4sRUFBNkIvRCw2QkFBNkIsRUFBSXZLLEVBQW1CYSxvQkFBb0IsQ0FDOUssQ0FBQyxPQUFRLFlBQ1QsQ0FBQyxLQUFNLFlBQ1AsQ0FBQyxPQUFRLFlBQ1QsQ0FBQyxRQUFTLEdBQUc2RixRQUNiLEVBQUkxRyxFQUFtQlEsb0JBQW9Ca08sR0FML0MsQ0FLa0VDLEdBRTlESixJQUNBLEVBQUl2TyxFQUFtQmEsb0JBQW9CLENBQUMsQ0FBQyxXQUFZLFNBQXpELENBQW1FOE4sSUFFdkUsRUFBSTNPLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLEdBQUcrRixNQUFhLEVBQUkzRyxFQUFtQlEsb0JBQW9CaU8sR0FBOUgsRUFBcUosRUFBSXpPLEVBQW1CTyxhQUFhLEtBQXBDLENBQTBDLENBQUMsdUJBQ2hNLEVBQUlQLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLEdBQUdnRyxNQUFvQixFQUFJNUcsRUFBbUJRLG9CQUFvQmlPLEdBQXJJLEVBQTRKLEVBQUl6TyxFQUFtQk8sYUFBYSxJQUFwQyxDQUF5QyxDQUFDLDZCQUN0TSxNQUFNcU8sR0FBMkIsRUFBSTVPLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsK0JBQzdFLEVBQUlQLEVBQW1CUSxvQkFBb0JpTyxFQUEzQyxDQUFpRUcsSUFDakUsRUFBSTVPLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLFFBQVFpRyxNQUFnQixFQUFJN0csRUFBbUJRLG9CQUFvQm9PLEdBQXRJLEVBQWlLLEVBQUk1TyxFQUFtQk8sYUFBYSxJQUFwQyxDQUF5QyxDQUFDLHlCQUMzTSxNQUFNc08sR0FBb0IsRUFBSTdPLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsd0JBQ3RFLEVBQUlQLEVBQW1CUSxvQkFBb0JvTyxFQUEzQyxDQUFxRUMsSUFDckUsRUFBSTdPLEVBQW1CdUIsZ0JBQWdCLENBQ25DLENBQ0ksbUJBQ29CLGNBQWpCZ0YsRUFDRyxvQkFDaUIsV0FBakJBLEVBQ0kscUJBQ2lCLFNBQWpCQSxFQUNJLHFCQUNpQixXQUFqQkEsRUFDSSxzQkFDQSx3QkFYMUIsQ0FhR3NJLElBQ0gsRUFBSTdPLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CWSxlQUFlLEdBQUcyRixNQUFpQixFQUFJdkcsRUFBbUJRLG9CQUFvQnFPLEdBQWxJLEVBQXNKLEVBQUk3TyxFQUFtQk8sYUFBYSxJQUFwQyxDQUF5QyxDQUFDLCtCLFlDL0N4TVosT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVFpUCx5QkFBc0IsRUFtRjlCalAsRUFBUWlQLG9CQWxGb0IsV0FDeEIsSUFBSXhLLEVBQ0NnQixhQUFhQyxRQUFRLGFBQ3RCRCxhQUFhMEMsUUFBUSxXQUFZNUMsS0FBSzZDLFVBQVUsS0FFcEQsTUFBTTlCLEVBQWEsR0FDbkJ4RyxPQUFPb0csS0FBS1QsY0FBY0UsU0FBU1EsSUFDL0IsSUFBSTFCLEVBQ1EsaUJBQVIwQixHQUFrQyxhQUFSQSxHQUMxQkcsRUFBV0YsS0FBS2IsS0FBS0MsTUFBMkMsUUFBcENmLEVBQUtnQixhQUFhQyxRQUFRUyxVQUF5QixJQUFQMUIsRUFBZ0JBLEVBQUssUUFHckcsTUFBTXdGLEVBQU0sSUFBSUMsS0FDVkMsRUFBT0YsRUFBSUcsVUFDWEMsRUFBUUosRUFBSUssV0FBYSxFQUN6QjRFLEVBQU9qRixFQUFJTyxjQUVYMkUsRUFBcUI1SixLQUFLQyxNQUFrRCxRQUEzQ2YsRUFBS2dCLGFBQWFDLFFBQVEsbUJBQWdDLElBQVBqQixFQUFnQkEsRUFBSyxJQUN6RzJLLEVBQXFCLEdBQzNCOUksRUFBV1gsU0FBU0MsSUFDaEJBLEVBQVFZLE1BQU1iLFNBQVNjLElBQ25CLE1BQU00SSxFQUFVNUksRUFBS08sWUFBWXNJLE1BQU0sS0FDakNDLEVBQVdDLE9BQU9ILEVBQVEsSUFDMUJJLEVBQVlELE9BQU9ILEVBQVEsSUFHakMsR0FGaUJHLE9BQU9ILEVBQVEsSUFFakJsRixHQUFRc0YsRUFBWXBGLEdBQVNrRixFQUFXTCxFQUFNLENBQ3pELE1BQU12SSxFQUFPLENBQ1RmLFFBQVMsQ0FDTGdCLFlBQWFoQixFQUFRQSxRQUFRZ0IsWUFDN0JDLGNBQWVqQixFQUFRQSxRQUFRaUIsZUFFbkNMLE1BQU8sQ0FDSCxDQUNJTSxTQUFVTCxFQUFLSyxTQUNmQyxnQkFBaUJOLEVBQUtNLGdCQUN0QkMsWUFBYVAsRUFBS08sWUFDbEJOLGFBQWNELEVBQUtDLGdCQUkvQnlJLEVBQW1CL0ksS0FBS08sT0FFdkIsQ0FFRCxNQUFNQSxFQUFPLENBQ1RmLFFBQVMsQ0FDTGdCLFlBQWFoQixFQUFRQSxRQUFRZ0IsWUFDN0JDLGNBQWVqQixFQUFRQSxRQUFRaUIsZUFFbkNMLE1BQU8sQ0FDSCxDQUNJTSxTQUFVTCxFQUFLSyxTQUNmQyxnQkFBaUJOLEVBQUtNLGdCQUN0QkMsWUFBYVAsRUFBS08sWUFDbEJOLGFBQWNELEVBQUtDLGdCQUkvQjBJLEVBQW1CaEosS0FBS08sVUFLcENsQixhQUFhMEMsUUFBUSxXQUFZNUMsS0FBSzZDLFVBQVUrRyxJQUVuQkMsRUFBbUJwTixRQUFPLENBQUN3SCxFQUFLbEgsS0FDekQsR0FBS2tILEVBQUlqQixJQUFJakcsRUFBS3NELFFBQVFnQixhQUdyQixDQUNELE1BQU1ELEVBQU82QyxFQUFJekIsSUFBSXpGLEVBQUtzRCxRQUFRZ0IsYUFDbENELE1BQUFBLEdBQTRDQSxFQUFLSCxNQUFNSixLQUFLOUQsRUFBS2tFLE1BQU0sSUFDdkVnRCxFQUFJQyxJQUFJbkgsRUFBS3NELFFBQVFnQixZQUFhRCxRQUxsQzZDLEVBQUlDLElBQUluSCxFQUFLc0QsUUFBUWdCLFlBQWF0RSxHQU90QyxPQUFPa0gsSUFDUixJQUFJRSxLQUVjL0QsU0FBUSxDQUFDK0osRUFBTUMsS0FDaENsSyxhQUFhMEMsUUFBUXdILEVBQVVwSyxLQUFLNkMsVUFBVXNILFMsY0NqRnRENVAsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVE0UCw0QkFBeUIsRUFDakMsTUFBTXBJLEVBQXdCLEVBQVEsS0FDaENwQyxFQUFzQixFQUFRLEtBbUJwQ3BGLEVBQVE0UCx1QkFsQnVCLFdBQzNCLElBQUluTCxFQUNKLE1BQU1vTCxFQUFXLEdBQ2pCL1AsT0FBT29HLEtBQUtULGNBQWNFLFNBQVNRLElBQy9CLElBQUkxQixFQUNRLG1CQUFSMEIsR0FBb0MsaUJBQVJBLEdBQWtDLGFBQVJBLEdBQ3REMEosRUFBU3pKLEtBQUtiLEtBQUtDLE1BQTJDLFFBQXBDZixFQUFLZ0IsYUFBYUMsUUFBUVMsVUFBeUIsSUFBUDFCLEVBQWdCQSxFQUFLLFFBSW5HLE1BQU1xTCxFQUFnQnZLLEtBQUtDLE1BQXdELFFBQWpEZixFQUFLZ0IsYUFBYUMsUUFBUSx5QkFBc0MsSUFBUGpCLEVBQWdCQSxFQUFLLEtBQ2hILEVBQUlXLEVBQW9CUyxtQkFBbUJpSyxHQUUzQ0QsRUFBU2xLLFNBQVNDLEtBQ2QsRUFBSTRCLEVBQXNCbUIscUJBQXFCL0MsRUFBUUEsUUFBUWdCLFlBQWFoQixFQUFRQSxRQUFRaUIsZ0JBQzVGLEVBQUl6QixFQUFvQlMsbUJBQW1CRCxRLFlDbkJuRDlGLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRbU0sOEJBQTJCLEVBbUNuQ25NLEVBQVFtTSx5QkFsQ3lCLFNBQVU0RCxHQUN2QyxJQUFJdEwsRUFDSixJQUFJdUwsR0FBaUIsRUFDckIsTUFBTUMsRUFBa0JGLEVBQWlCbkssUUFBUWdCLFlBQzNDc0osRUFBa0JILEVBQWlCdkosTUFBTSxHQUFHTSxTQUM1Q3FKLEVBQWVKLEVBQWlCdkosTUFBTSxHQUN0QzRKLEVBQWMsSUFBSTlILElBS3hCLEdBSkF4SSxPQUFPb0csS0FBS1QsY0FBY0UsU0FBU1EsSUFDL0JpSyxFQUFZaE8sSUFBSStELE1BR2ZpSyxFQUFZN0gsSUFBSTBILEdBR2hCLENBRUQsTUFBTUksRUFBcUI5SyxLQUFLQyxNQUF1RCxRQUFoRGYsRUFBS2dCLGFBQWFDLFFBQVF1SyxVQUFxQyxJQUFQeEwsRUFBZ0JBLEVBQUssSUFDOUc2TCxFQUFlLElBQUloSSxJQUd6QixPQUZBK0gsRUFBbUI3SixNQUFNYixTQUFTYyxHQUFTNkosRUFBYWxPLElBQUlxRSxFQUFLSyxZQUU1RHdKLEVBQWEvSCxJQUFJMkgsSUFRbEIxSCxNQUFNLEdBQUcwSCxxRUFDVEYsR0FBaUIsRUFDVkEsSUFUUEssRUFBbUI3SixNQUFNSixLQUFLK0osR0FDOUIxSyxhQUFhMEMsUUFBUThILEVBQWlCMUssS0FBSzZDLFVBQVVpSSxJQUNyREwsR0FBaUIsRUFDVkEsR0FaWHZLLGFBQWEwQyxRQUFROEgsRUFBaUIxSyxLQUFLNkMsVUFBVTJILE0sWUNkN0RqUSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0REQsRUFBUXVRLHdCQUFxQixFQXNEN0J2USxFQUFRdVEsbUJBckRtQixXQUN2QixNQUFNdEcsRUFBTSxJQUFJQyxLQXNCVjRGLEVBQWdCLENBQ2xCbEssUUFFQSxDQUFFZ0IsWUFBYSxpQkFBa0JDLGNBQWUsV0FDaERMLE1BQU8sQ0FDSCxDQUNJTSxTQUFVLGtDQUNWQyxnQkFBaUIsb0NBQW9Da0QsRUFBSUcsVUFBWSxHQUFLLFFBQVUsd0JBQ3BGcEQsWUFBYSxHQWRHLENBQUNpRCxJQUN6QixJQUFJdUcsRUFBTXZHLEVBQUlHLFVBQ2RvRyxFQUFNQSxHQUFPLEdBQUtBLEVBQU0sRUFBSUEsRUFDNUIsSUFBSW5HLEVBQVFKLEVBQUlLLFdBQWEsRUFDN0IsTUFBTyxHQUFHTCxFQUFJTyxpQkFBaUJILEVBQVEsR0FBSyxJQUFNQSxFQUFRQSxLQUFTbUcsRUFBTSxHQUFLLElBQU1BLEVBQU1BLEtBVWxFQyxDQUFvQnhHLEtBQ3BDdkQsYUFBYyxVQUVsQixDQUNJSSxTQUFVLGtCQUNWQyxnQkFBaUIsZ0RBQ2pCQyxZQUFhLEdBM0JBLENBQUNpRCxJQUN0QixJQUFJSSxFQUFRSixFQUFJSyxXQUdoQixPQUZBRCxFQUFRQSxHQUFTLEdBQUtBLEVBQVEsRUFBSUEsRUFDbENBLEdBQWdCLEVBQ1QsR0FBR0osRUFBSU8saUJBQWlCSCxFQUFRLEdBQUssSUFBTUEsRUFBUUEsS0FBU0osRUFBSUcsVUFBWSxHQUFLLElBQU1ILEVBQUlHLFVBQVlILEVBQUlHLGFBdUIxRnNHLENBQWlCekcsS0FDakN2RCxhQUFjLFVBRWxCLENBQ0lJLFNBQVUsNEJBQ1ZDLGdCQUFpQiwwQ0FDakJDLFlBQWEsR0F4Q0EsQ0FBQ2lELElBQ3RCLElBQUl1RyxFQUFNdkcsRUFBSUcsVUFDVkMsRUFBUUosRUFBSUssV0FBYSxFQUU3QixNQUFPLEdBRE1MLEVBQUlPLGNBQWdCLEtBQ2ZILEVBQVEsR0FBSyxJQUFNQSxFQUFRQSxLQUFTbUcsRUFBTSxHQUFLLElBQU1BLEVBQU1BLEtBb0NyREcsQ0FBaUIxRyxLQUNqQ3ZELGFBQWMsU0FLckJqQixhQUFhQyxRQUFRb0ssRUFBY2xLLFFBQVFnQixjQUM1Q25CLGFBQWEwQyxRQUFRMkgsRUFBY2xLLFFBQVFnQixZQUFhckIsS0FBSzZDLFVBQVUwSCxNLGNDcEQvRWhRLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRMk0sYUFBVSxFQUNsQixNQUFNeE0sRUFBcUIsRUFBUSxLQUM3QnlRLEVBQWlDLEVBQVEsS0FDekN6QyxFQUE4QixFQUFRLEtBQ3RDMEMsRUFBMkIsRUFBUSxLQUNuQ0MsRUFBMkIsRUFBUSxLQUNuQ0MsRUFBd0IsRUFBUSxJQUNoQ0MsRUFBMkIsRUFBUSxLQUNuQzVDLEVBQTJCLEVBQVEsS0ErQnpDcE8sRUFBUTJNLFFBOUJRLFdBQ1osTUFBTXBNLEVBQU9DLFNBQVNDLGNBQWMsU0FDOUJrTSxHQUFVLEVBQUl4TSxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGFBQzVELEVBQUlQLEVBQW1CUSxvQkFBb0JKLEVBQTNDLENBQWlEb00sR0FDakQsTUFBTXNFLEdBQWlCLEVBQUk5USxFQUFtQk8sYUFBYSxNQUFwQyxDQUEyQyxDQUFDLGNBQWUscUJBQ2xGLEVBQUlQLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0Q2UCxFQUFzQi9HLG9CQUF0RSxDQUEyRmlILElBQzNGLEVBQUk5USxFQUFtQlEsb0JBQW9CZ00sRUFBM0MsQ0FBb0RzRSxJQUNwRCxFQUFJOVEsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJZLGVBQWUsVUFBVSxFQUFJWixFQUFtQlEsb0JBQW9Cc1EsR0FBeEgsRUFBeUksRUFBSTlRLEVBQW1CTyxhQUFhLEtBQXBDLENBQTBDLENBQUMsV0FBWSxlQUNoTSxNQUFNd1EsR0FBb0IsRUFBSS9RLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsY0FBZSx3QkFDckYsRUFBSVAsRUFBbUJlLGdCQUFnQixRQUF2QyxDQUFnRDRQLEVBQXlCekUsdUJBQXpFLENBQWlHNkUsSUFDakcsRUFBSS9RLEVBQW1CUSxvQkFBb0JnTSxFQUEzQyxDQUFvRHVFLElBQ3BELEVBQUkvUSxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxhQUFhLEVBQUlaLEVBQW1CUSxvQkFBb0J1USxHQUEzSCxFQUErSSxFQUFJL1EsRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxXQUFZLGtCQUN0TSxNQUFNeVEsR0FBb0IsRUFBSWhSLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsY0FBZSx3QkFDckYsRUFBSVAsRUFBbUJlLGdCQUFnQixRQUF2QyxDQUFnRDJQLEVBQXlCMUwsdUJBQXpFLENBQWlHZ00sSUFDakcsRUFBSWhSLEVBQW1CUSxvQkFBb0JnTSxFQUEzQyxDQUFvRHdFLElBQ3BELEVBQUloUixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxhQUFhLEVBQUlaLEVBQW1CUSxvQkFBb0J3USxHQUEzSCxFQUErSSxFQUFJaFIsRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxXQUFZLGtCQUN0TSxNQUFNNk4sR0FBb0IsRUFBSXBPLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsa0JBQW1CLHdCQUN6RixFQUFJUCxFQUFtQlEsb0JBQW9CZ00sRUFBM0MsQ0FBb0Q0QixHQUNwRCxNQUFNNkMsR0FBa0IsRUFBSWpSLEVBQW1CTyxhQUFhLE1BQXBDLENBQTJDLENBQUMsNEJBQ3BFLEVBQUlQLEVBQW1CUSxvQkFBb0I0TixFQUEzQyxDQUE4RDZDLElBQzlELEVBQUlqUixFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQmUsZ0JBQWdCLFFBQXZDLENBQWdEOFAsRUFBeUJwSSx5QkFBeUIsRUFBSXpJLEVBQW1CWSxlQUFlLGFBQWEsRUFBSVosRUFBbUJRLG9CQUFvQnlRLEdBQTdOLEVBQStPLEVBQUlqUixFQUFtQk8sYUFBYSxLQUFwQyxDQUEwQyxDQUFDLGVBQWdCLG9CQUMxUyxFQUFJUCxFQUFtQlcsT0FBTSxFQUFJWCxFQUFtQlksZUFBZSxNQUFNLEVBQUlaLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0QwUCxFQUErQjVNLCtCQUErQixFQUFJN0QsRUFBbUJRLG9CQUFvQnlRLEdBQWxPLEVBQW9QLEVBQUlqUixFQUFtQk8sYUFBYSxTQUFwQyxDQUE4QyxDQUFDLE9BQVEsdUJBQzNTLE1BQU0yUSxHQUF5QixFQUFJbFIsRUFBbUJPLGFBQWEsTUFBcEMsQ0FBMkMsQ0FBQyxrQkFBbUIsYUFDOUYsRUFBSVAsRUFBbUJRLG9CQUFvQjROLEVBQTNDLENBQThEOEMsSUFDOUQsRUFBSWxSLEVBQW1CVyxPQUFNLEVBQUlYLEVBQW1CdUIsZ0JBQWdCLENBQUMsQ0FBQyxRQUFTLGNBQWMsRUFBSXZCLEVBQW1CZSxnQkFBZ0IsUUFBdkMsQ0FBZ0RrTixFQUF5QnRJLHlCQUF5QixFQUFJM0YsRUFBbUJZLGVBQWUsbUJBQW1CLEVBQUlaLEVBQW1CUSxvQkFBb0IwUSxHQUFuUyxFQUE0VCxFQUFJbFIsRUFBbUJPLGFBQWEsS0FBcEMsQ0FBMEMsQ0FBQyxlQUFnQix5QkFDdlgsRUFBSVAsRUFBbUJXLE9BQU0sRUFBSVgsRUFBbUJ1QixnQkFBZ0IsQ0FBQyxDQUFDLFFBQVMsY0FBYyxFQUFJdkIsRUFBbUJZLGVBQWUsTUFBTSxFQUFJWixFQUFtQmEsb0JBQW9CLENBQ2hMLENBQUMsWUFBYSxrQkFDZCxDQUFDLGNBQWUsY0FDaEIsRUFBSWIsRUFBbUJlLGdCQUFnQixRQUF2QyxDQUFnRGlOLEVBQTRCNUosNEJBQTRCLEVBQUlwRSxFQUFtQlEsb0JBQW9CMFEsR0FIdkosRUFHZ0wsRUFBSWxSLEVBQW1CTyxhQUFhLFNBQXBDLENBQThDLENBQUMsT0FBUSx1QkN0Q3ZPNFEsRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkUsSUFBakJELEVBQ0gsT0FBT0EsRUFBYXpSLFFBR3JCLElBQUkyUixFQUFTTCxFQUF5QkUsR0FBWSxDQUdqRHhSLFFBQVMsSUFPVixPQUhBNFIsRUFBb0JKLEdBQVVHLEVBQVFBLEVBQU8zUixRQUFTdVIsR0FHL0NJLEVBQU8zUixRQ3BCZnVSLEVBQW9CTSxFQUFLN1IsSUFDSCxvQkFBWDhSLFFBQTBCQSxPQUFPQyxhQUMxQ2pTLE9BQU9DLGVBQWVDLEVBQVM4UixPQUFPQyxZQUFhLENBQUU5UixNQUFPLFdBRTdESCxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxLLE1DSHZELEVBQVEsS0FDUixNQUFNK1IsRUFBWSxFQUFRLEtBQ3BCQyxFQUFXLEVBQVEsS0FDbkJDLEVBQVksRUFBUSxLQUNwQkMsRUFBMkIsRUFBUSxLQUNuQ0MsRUFBdUIsRUFBUSxLQUMvQkMsRUFBd0IsRUFBUSxLQVV0QzdSLFNBQVNvRCxpQkFBaUIsb0JBVFYsWUFDWixFQUFJcU8sRUFBUzNGLFdBQ2IsRUFBSTRGLEVBQVV2RixZQUNkLEVBQUlxRixFQUFVOVIsWUFDZCxFQUFJa1MsRUFBcUI3Qix1QkFDekIsRUFBSThCLEVBQXNCcEQsdUJBRTFCcUQsS0FBS0MsT0FBU0osRUFBeUJ2QywyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvY29udGVudC9jb250ZW50LnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvZWxlbWVudC1jcmVhdG9ycy50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVBZGROZXdUb2RvSWNvbkNsaWNrLnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvZXZlbnRDQnMvaGFuZGxlQXJjaGl2ZWRUYWJDbGljay50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZUNyZWF0ZWRUYWJzQ2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVGaWx0ZXJCeVByaW9yaXR5Q2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVJbnZhbGlkUHJvak5hbWUudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVJbnZhbGlkVG9kb05hbWUudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVQcm9qTmFtZVZhbGlkYXRpb24udHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVQcm9qZWN0Q2xvc2VJY29uQ2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdC50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZVByb2plY3RzVGFiQ2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVTZWFyY2hGb3JtU3VibWl0LnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvZXZlbnRDQnMvaGFuZGxlU29ydEJ5UHJpb3JpdHlDbGljay50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZVRvZGF5VGFiQ2xpY2sudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9ldmVudENCcy9oYW5kbGVUb2RvQ2hlY2tib3hDb21wbGV0ZS50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZVRvZG9DbG9zZUljb25DbGljay50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2V2ZW50Q0JzL2hhbmRsZVRvZG9Gb3JtU3VibWl0LnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvZXZlbnRDQnMvaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uLnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvZXZlbnRDQnMvaGFuZGxlVXBjb21pbmdUYWJDbGljay50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL2hlYWRlci9oZWFkZXIudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9tb2RhbHMvcHJvamVjdE1vZGFsLnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvbW9kYWxzL3RvZG9Nb2RhbC50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL3Byb2plY3RzQW5kVG9kb3MvYWRkUHJvamVjdFRvU2lkZWJhci50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL3Byb2plY3RzQW5kVG9kb3MvYWRkVG9kb3NUb0NvbnRlbnQudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9wcm9qZWN0c0FuZFRvZG9zL2FyY2hpdmVFeHBpcmVkVG9kb3MudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9wcm9qZWN0c0FuZFRvZG9zL3Byb2plY3RzQW5kVG9kb3NPbmxvYWQudHMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy90cy9wcm9qZWN0c0FuZFRvZG9zL3N0b3JlUHJvamVjdEFuZFRvZG9zRnVsbC50cyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL3RzL3Byb2plY3RzQW5kVG9kb3Mvc3RvcmVTYW1wbGVQcm9qZWN0LnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvdHMvc2lkZWJhci9zaWRlYmFyLnRzIiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbnRlbnQgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50X2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi4vZWxlbWVudC1jcmVhdG9yc1wiKTtcbmNvbnN0IGhhbmRsZUZpbHRlckJ5UHJpb3JpdHlDbGlja18xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZUZpbHRlckJ5UHJpb3JpdHlDbGlja1wiKTtcbmNvbnN0IGhhbmRsZVNlYXJjaEZvcm1TdWJtaXRfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVTZWFyY2hGb3JtU3VibWl0XCIpO1xuY29uc3QgaGFuZGxlU29ydEJ5UHJpb3JpdHlDbGlja18xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2tcIik7XG5jb25zdCBjb250ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCcpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50J10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShyb290KShjb250ZW50KTtcbiAgICBjb25zdCB0b3AgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50LXRvcCddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoY29udGVudCkodG9wKTtcbiAgICBjb25zdCBsaW5rc0NvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2xpbmtzLWNvbnRhaW5lciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9wKShsaW5rc0NvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdNYWRlIGJ5IEF0aG1hIFZhc2knKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ2hyZWYnLCAnaHR0cHM6Ly9naXRodWIuY29tL0F0aG1hLVZhc2knXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkobGlua3NDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnYScpKFsnbGluay1hdXRob3InXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnVmlldyBDb2RlJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydocmVmJywgJ2h0dHBzOi8vZ2l0aHViLmNvbS9BdGhtYS1WYXNpL1RvZG8tTGlzdC1BcHAnXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkobGlua3NDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnYScpKFsnbGluay1yZXBvJ10pKTtcbiAgICBjb25zdCBmb3JtID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2Zvcm0nKShbJ2Zvcm0tc2VhcmNoVG9kbyddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdzdWJtaXQnKShoYW5kbGVTZWFyY2hGb3JtU3VibWl0XzEuaGFuZGxlU2VhcmNoRm9ybVN1Ym1pdCksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnYWN0aW9uJywgJyMnXSxcbiAgICAgICAgWydtZXRob2QnLCAncG9zdCddLFxuICAgICAgICBbJ2lkJywgJ2Zvcm0tc2VhcmNoVG9kbyddLFxuICAgICAgICBbJ25hbWUnLCAnc2VhcmNoLXRvZG8nXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvcCkpKGZvcm0pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ2ZvcicsICdzZWFyY2hUb2RvJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGZvcm0pKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnbGFiZWwnKShbJ2xhYmVsLXNlYXJjaCddKSk7XG4gICAgY29uc3Qgc2VhcmNoVG9kbyA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdpbnB1dCcpKFsnc2VhcmNoVG9kbyddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ3R5cGUnLCAnc2VhcmNoJ10sXG4gICAgICAgIFsncGxhY2Vob2xkZXInLCAnc2VhcmNoIGZvciBhIHRvZG8nXSxcbiAgICAgICAgWydpZCcsICdzZWFyY2hUb2RvJ10sXG4gICAgICAgIFsnbmFtZScsICdzZWFyY2gtdG9kbyddLFxuICAgIF0pKHNlYXJjaFRvZG8pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShmb3JtKShzZWFyY2hUb2RvKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnZm9yJywgJ3NlbGVjdC1maWx0ZXJCeVByaW9yaXR5J10sXG4gICAgICAgIFsnbmFtZScsICdzZWxlY3QtZmlsdGVyQnlQcmlvcml0eSddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9wKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2xhYmVsJykoWydsYWJlbCcsICdsYWJlbC1maWx0ZXJCeVByaW9yaXR5J10pKTtcbiAgICBjb25zdCBzZWxlY3RGaWx0ZXJCeVByaW9yaXR5ID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ3NlbGVjdCcpKFsnc2VsZWN0LWZpbHRlckJ5UHJpb3JpdHknXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnY2xpY2snKShoYW5kbGVGaWx0ZXJCeVByaW9yaXR5Q2xpY2tfMS5oYW5kbGVGaWx0ZXJCeVByaW9yaXR5Q2xpY2spLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ25hbWUnLCAnc2VsZWN0LWZpbHRlckJ5UHJpb3JpdHknXSxcbiAgICAgICAgWydpZCcsICdzZWxlY3QtZmlsdGVyQnlQcmlvcml0eSddLFxuICAgICAgICBbJ3RpdGxlJywgJ3NlbGVjdC1maWx0ZXJCeVByaW9yaXR5J10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KSh0b3ApKShzZWxlY3RGaWx0ZXJCeVByaW9yaXR5KTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJy0tRmlsdGVyIGJ5IHByaW9yaXR5LS0nKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJyAnXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2VsZWN0RmlsdGVyQnlQcmlvcml0eSkpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdvcHRpb24nKShbJ29wdGlvbi1maWx0ZXJCeVByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ2ltbWVkaWF0ZScpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1sndmFsdWUnLCAnaW1tZWRpYXRlJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdEZpbHRlckJ5UHJpb3JpdHkpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnb3B0aW9uJykoWydvcHRpb24tZmlsdGVyQnlQcmlvcml0eSddKSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCd1cmdlbnQnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJ3VyZ2VudCddXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShzZWxlY3RGaWx0ZXJCeVByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLWZpbHRlckJ5UHJpb3JpdHknXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnaGlnaCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1sndmFsdWUnLCAnaGlnaCddXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShzZWxlY3RGaWx0ZXJCeVByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLWZpbHRlckJ5UHJpb3JpdHknXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnbWVkaXVtJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWyd2YWx1ZScsICdtZWRpdW0nXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2VsZWN0RmlsdGVyQnlQcmlvcml0eSkpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdvcHRpb24nKShbJ29wdGlvbi1maWx0ZXJCeVByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ2xvdycpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1sndmFsdWUnLCAnbG93J11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdEZpbHRlckJ5UHJpb3JpdHkpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnb3B0aW9uJykoWydvcHRpb24tZmlsdGVyQnlQcmlvcml0eSddKSk7XG4gICAgY29uc3Qgc2VsZWN0U29ydEJ5UHJpb3JpdHkgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnc2VsZWN0JykoWydzZWxlY3Qtc29ydEJ5UHJpb3JpdHknXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnY2xpY2snKShoYW5kbGVTb3J0QnlQcmlvcml0eUNsaWNrXzEuaGFuZGxlU29ydEJ5UHJpb3JpdHlDbGljayksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnaWQnLCAnc2VsZWN0LXNvcnRCeVByaW9yaXR5J10sXG4gICAgICAgIFsnbmFtZScsICdzZWxlY3Qtc29ydEJ5UHJpb3JpdHknXSxcbiAgICAgICAgWyd0aXRsZScsICdzZWxlY3Qtc29ydEJ5UHJpb3JpdHknXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvcCkpKHNlbGVjdFNvcnRCeVByaW9yaXR5KTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJy0tU29ydCBieSBwcmlvcml0eS0tJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWyd2YWx1ZScsICcgJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFNvcnRCeVByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNvcnRCeVByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ2xvdyB0byBpbW1lZGlhdGUnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJ2xvd1RvSW1tZWRpYXRlJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFNvcnRCeVByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNvcnRCeVByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ2ltbWVkaWF0ZSB0byBsb3cnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJ2ltbWVkaWF0ZVRvTG93J11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFNvcnRCeVByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNvcnRCeVByaW9yaXR5J10pKTtcbiAgICBjb25zdCBjb250ZW50Qm90dG9tID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnY29udGVudC1ib3R0b20nXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGNvbnRlbnQpKGNvbnRlbnRCb3R0b20pO1xufTtcbmV4cG9ydHMuY29udGVudCA9IGNvbnRlbnQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGlwZSA9IGV4cG9ydHMuYWRkU3R5bGVUb0VsZW0gPSBleHBvcnRzLmFkZEV2dExpc3RlbmVyID0gZXhwb3J0cy5jcmVhdGVJbWFnZSA9IGV4cG9ydHMuYWRkQXR0cmlidXRlVG9FbGVtID0gZXhwb3J0cy5hZGRUZXh0VG9FbGVtID0gZXhwb3J0cy5hcHBlbmRFbGVtVG9QYXJlbnQgPSBleHBvcnRzLmVsZW1DcmVhdG9yID0gdm9pZCAwO1xuY29uc3QgZWxlbUNyZWF0b3IgPSAoZWxlbV8pID0+IChjbGFzc18pID0+IHtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbGVtXyk7XG4gICAgcmV0dXJuIGNsYXNzXy5yZWR1Y2UoKGVsZW0sIGN1cnJDbGFzcykgPT4ge1xuICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY3VyckNsYXNzKTtcbiAgICAgICAgcmV0dXJuIGVsZW07XG4gICAgfSwgZWxlbWVudCk7XG59O1xuZXhwb3J0cy5lbGVtQ3JlYXRvciA9IGVsZW1DcmVhdG9yO1xuY29uc3QgYWRkQXR0cmlidXRlVG9FbGVtID0gKGF0dHJWYWxzXykgPT4gKGVsZW1fKSA9PiB7XG4gICAgcmV0dXJuIGF0dHJWYWxzXy5yZWR1Y2UoKGVsZW1lbnQsIGN1cnIpID0+IHtcbiAgICAgICAgaWYgKGN1cnIubGVuZ3RoID4gMilcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIGVsZW1lbnQgPT09IG51bGwgfHwgZWxlbWVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbWVudC5zZXRBdHRyaWJ1dGUoY3VyclswXSwgY3VyclsxXSk7XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH0sIGVsZW1fKTtcbn07XG5leHBvcnRzLmFkZEF0dHJpYnV0ZVRvRWxlbSA9IGFkZEF0dHJpYnV0ZVRvRWxlbTtcbmNvbnN0IGFkZFN0eWxlVG9FbGVtID0gKHN0eWxlUHJvcFZhbHNfKSA9PiAoZWxlbV8pID0+IHtcbiAgICByZXR1cm4gc3R5bGVQcm9wVmFsc18ucmVkdWNlKChlbGVtZW50LCBjdXJyKSA9PiB7XG4gICAgICAgIGlmIChjdXJyLmxlbmd0aCA+IDIpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICBlbGVtZW50ID09PSBudWxsIHx8IGVsZW1lbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoY3VyclswXSwgY3VyclsxXSk7XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH0sIGVsZW1fKTtcbn07XG5leHBvcnRzLmFkZFN0eWxlVG9FbGVtID0gYWRkU3R5bGVUb0VsZW07XG5jb25zdCBhZGRUZXh0VG9FbGVtID0gKHRleHRfKSA9PiAoZWxlbV8pID0+IHtcbiAgICBjb25zdCB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHRfKTtcbiAgICBlbGVtXyA9PT0gbnVsbCB8fCBlbGVtXyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbV8uYXBwZW5kQ2hpbGQodGV4dE5vZGUpO1xuICAgIHJldHVybiBlbGVtXztcbn07XG5leHBvcnRzLmFkZFRleHRUb0VsZW0gPSBhZGRUZXh0VG9FbGVtO1xuY29uc3QgYXBwZW5kRWxlbVRvUGFyZW50ID0gKHBhcmVudF8pID0+IChjaGlsZF8pID0+IHtcbiAgICBpZiAoY2hpbGRfKVxuICAgICAgICBwYXJlbnRfID09PSBudWxsIHx8IHBhcmVudF8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmVudF8uYXBwZW5kQ2hpbGQoY2hpbGRfKTtcbn07XG5leHBvcnRzLmFwcGVuZEVsZW1Ub1BhcmVudCA9IGFwcGVuZEVsZW1Ub1BhcmVudDtcbmNvbnN0IGNyZWF0ZUltYWdlID0gKHNvdXJjZV8pID0+IChjbGFzc18pID0+IChhbHRfKSA9PiAodGl0bGVfKSA9PiB7XG4gICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICBpbWFnZS5zcmMgPSBzb3VyY2VfO1xuICAgIGltYWdlLmFsdCA9IGFsdF87XG4gICAgaW1hZ2UudGl0bGUgPSB0aXRsZV87XG4gICAgcmV0dXJuIGNsYXNzXy5yZWR1Y2UoKGVsZW0sIGN1cnJDbGFzcykgPT4ge1xuICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY3VyckNsYXNzKTtcbiAgICAgICAgcmV0dXJuIGVsZW07XG4gICAgfSwgaW1hZ2UpO1xufTtcbmV4cG9ydHMuY3JlYXRlSW1hZ2UgPSBjcmVhdGVJbWFnZTtcbmNvbnN0IGFkZEV2dExpc3RlbmVyID0gKGV2dF8pID0+IChoYW5kbGVFdnRfKSA9PiAoZWxlbV8pID0+IHtcbiAgICBlbGVtXyA9PT0gbnVsbCB8fCBlbGVtXyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbV8uYWRkRXZlbnRMaXN0ZW5lcihldnRfLCBoYW5kbGVFdnRfKTtcbiAgICByZXR1cm4gZWxlbV87XG59O1xuZXhwb3J0cy5hZGRFdnRMaXN0ZW5lciA9IGFkZEV2dExpc3RlbmVyO1xuY29uc3QgcGlwZSA9ICguLi5mdW5jcykgPT4gKHZhbHVlKSA9PiBmdW5jcy5yZWR1Y2UoKHJlcywgZnVuYykgPT4gZnVuYyhyZXMpLCB2YWx1ZSk7XG5leHBvcnRzLnBpcGUgPSBwaXBlO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2sgPSB2b2lkIDA7XG5jb25zdCBwcm9qZWN0TW9kYWxfMSA9IHJlcXVpcmUoXCIuLi9tb2RhbHMvcHJvamVjdE1vZGFsXCIpO1xuY29uc3QgaGFuZGxlQWRkTmV3UHJvamVjdEljb25DbGljayA9IGZ1bmN0aW9uIChldikge1xuICAgICgwLCBwcm9qZWN0TW9kYWxfMS5wcm9qZWN0TW9kYWwpKCk7XG4gICAgY29uc3QgYWRkUHJvamVjdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZFByb2plY3QtY29udGFpbmVyJyk7XG4gICAgaWYgKGFkZFByb2plY3RNb2RhbCkge1xuICAgICAgICBhZGRQcm9qZWN0TW9kYWwuc3R5bGUudmlzaWJpbGl0eSA9XG4gICAgICAgICAgICAoYWRkUHJvamVjdE1vZGFsID09PSBudWxsIHx8IGFkZFByb2plY3RNb2RhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWRkUHJvamVjdE1vZGFsLnN0eWxlLnZpc2liaWxpdHkpID09PSAndmlzaWJsZScgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJztcbiAgICAgICAgYWRkUHJvamVjdE1vZGFsLnN0eWxlLmJveFNoYWRvdyA9XG4gICAgICAgICAgICAnMXB4IDFweCAxLjZweCAxLjZweCAjNjM1MjZmNjEsIDEuNnB4IDEuNnB4IDIuNnB4IDIuNnB4ICM2MzUyNmY2MSc7XG4gICAgfVxufTtcbmV4cG9ydHMuaGFuZGxlQWRkTmV3UHJvamVjdEljb25DbGljayA9IGhhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2s7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlQWRkTmV3VG9kb0ljb25DbGljayA9IHZvaWQgMDtcbmNvbnN0IHRvZG9Nb2RhbF8xID0gcmVxdWlyZShcIi4uL21vZGFscy90b2RvTW9kYWxcIik7XG5jb25zdCBoYW5kbGVBZGROZXdUb2RvSWNvbkNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgcHJvamVjdERhdGFOYW1lID0gKF9hID0gdGhpcy5kYXRhc2V0Lm5hbWUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnO1xuICAgIGNvbnN0IHByb2plY3REYXRhQ29sb3VyID0gKF9iID0gdGhpcy5kYXRhc2V0LmNvbG91cikgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogJyc7XG4gICAgKDAsIHRvZG9Nb2RhbF8xLnRvZG9Nb2RhbCkocHJvamVjdERhdGFOYW1lLCBwcm9qZWN0RGF0YUNvbG91cik7XG4gICAgY29uc3QgYWRkVG9kb01vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG8tY29udGFpbmVyJyk7XG4gICAgaWYgKGFkZFRvZG9Nb2RhbCkge1xuICAgICAgICBhZGRUb2RvTW9kYWwuc3R5bGUudmlzaWJpbGl0eSA9XG4gICAgICAgICAgICAoYWRkVG9kb01vZGFsID09PSBudWxsIHx8IGFkZFRvZG9Nb2RhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWRkVG9kb01vZGFsLnN0eWxlLnZpc2liaWxpdHkpID09PSAndmlzaWJsZScgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJztcbiAgICAgICAgYWRkVG9kb01vZGFsLnN0eWxlLmJveFNoYWRvdyA9XG4gICAgICAgICAgICAnMXB4IDFweCAxLjZweCAxLjZweCAjNjM1MjZmNjEsIDEuNnB4IDEuNnB4IDIuNnB4IDIuNnB4ICM2MzUyNmY2MSc7XG4gICAgfVxufTtcbmV4cG9ydHMuaGFuZGxlQWRkTmV3VG9kb0ljb25DbGljayA9IGhhbmRsZUFkZE5ld1RvZG9JY29uQ2xpY2s7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlQXJjaGl2ZWRUYWJDbGljayA9IHZvaWQgMDtcbmNvbnN0IGFkZFRvZG9zVG9Db250ZW50XzEgPSByZXF1aXJlKFwiLi4vcHJvamVjdHNBbmRUb2Rvcy9hZGRUb2Rvc1RvQ29udGVudFwiKTtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgaGFuZGxlQXJjaGl2ZWRUYWJDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2E7XG4gICAgLy9yZW1vdmUgY29udGVudCBzZWN0aW9uJ3MgcHJldmlvdXMgY29udGVudHNcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcbiAgICBjb25zdCBjb250ZW50Qm90dG9tUHJldiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50LWJvdHRvbScpO1xuICAgIGNvbnRlbnRCb3R0b21QcmV2ID09PSBudWxsIHx8IGNvbnRlbnRCb3R0b21QcmV2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50Qm90dG9tUHJldi5yZW1vdmUoKTtcbiAgICAvL3JlbmRlciBuZXcgY29udGVudFxuICAgIGNvbnN0IGNvbnRlbnRCb3R0b20gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50LWJvdHRvbSddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoY29udGVudCkoY29udGVudEJvdHRvbSk7XG4gICAgY29uc3QgYXJjaGl2ZWRTdG9yYWdlQXJyID0gSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXJjaGl2ZWQnKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpO1xuICAgIC8vcmVuZGVyIHRvZG9zIHdpdGggY2hlY2tib3ggZGlzYWJsZWRcbiAgICBhcmNoaXZlZFN0b3JhZ2VBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICAoMCwgYWRkVG9kb3NUb0NvbnRlbnRfMS5hZGRUb2Rvc1RvQ29udGVudCkocHJvamVjdCwgdHJ1ZSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5oYW5kbGVBcmNoaXZlZFRhYkNsaWNrID0gaGFuZGxlQXJjaGl2ZWRUYWJDbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVDcmVhdGVkVGFic0NsaWNrID0gdm9pZCAwO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgZWxlbWVudF9jcmVhdG9yc18xID0gcmVxdWlyZShcIi4uL2VsZW1lbnQtY3JlYXRvcnNcIik7XG5jb25zdCBoYW5kbGVDcmVhdGVkVGFic0NsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIC8vcmVtb3ZlIGNvbnRlbnQgc2VjdGlvbidzIHByZXZpb3VzIGNvbnRlbnRzXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XG4gICAgY29uc3QgY29udGVudEJvdHRvbVByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudC1ib3R0b20nKTtcbiAgICBjb250ZW50Qm90dG9tUHJldiA9PT0gbnVsbCB8fCBjb250ZW50Qm90dG9tUHJldiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudEJvdHRvbVByZXYucmVtb3ZlKCk7XG4gICAgY29uc3QgY29udGVudEJvdHRvbSA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2NvbnRlbnQtYm90dG9tJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShjb250ZW50KShjb250ZW50Qm90dG9tKTtcbiAgICBjb25zdCB0aGlzUHJvamVjdE5hbWUgPSB0aGlzLnRleHRDb250ZW50O1xuICAgIGNvbnN0IHByb2plY3RBbmRUb2Rvc09iakFyciA9IFtdO1xuICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGtleSA9PT0gdGhpc1Byb2plY3ROYW1lKSB7XG4gICAgICAgICAgICBwcm9qZWN0QW5kVG9kb3NPYmpBcnIucHVzaChKU09OLnBhcnNlKChfYSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXNQcm9qZWN0TmFtZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL3JlbmRlciB0b2Rvc1xuICAgIHByb2plY3RBbmRUb2Rvc09iakFyci5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgICgwLCBhZGRUb2Rvc1RvQ29udGVudF8xLmFkZFRvZG9zVG9Db250ZW50KShwcm9qZWN0KTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmhhbmRsZUNyZWF0ZWRUYWJzQ2xpY2sgPSBoYW5kbGVDcmVhdGVkVGFic0NsaWNrO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZUZpbHRlckJ5UHJpb3JpdHlDbGljayA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgaGFuZGxlRmlsdGVyQnlQcmlvcml0eUNsaWNrID0gZnVuY3Rpb24gKGV2KSB7XG4gICAgLy9yZW1vdmUgY29udGVudCBzZWN0aW9uJ3MgcHJldmlvdXMgY29udGVudHNcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcbiAgICBjb25zdCBjb250ZW50Qm90dG9tUHJldiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50LWJvdHRvbScpO1xuICAgIGNvbnRlbnRCb3R0b21QcmV2ID09PSBudWxsIHx8IGNvbnRlbnRCb3R0b21QcmV2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50Qm90dG9tUHJldi5yZW1vdmUoKTtcbiAgICAvL3JlbmRlciBuZXcgY29udGVudFxuICAgIGNvbnN0IGNvbnRlbnRCb3R0b20gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50LWJvdHRvbSddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoY29udGVudCkoY29udGVudEJvdHRvbSk7XG4gICAgY29uc3Qgc2VsZWN0ZWRQcmlvcml0eSA9IHRoaXMudmFsdWU7XG4gICAgY29uc3QgcHJvamVjdEFyciA9IFtdO1xuICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGtleSAhPT0gJ3Byb2plY3ROYW1lcycgJiYga2V5ICE9PSAnYXJjaGl2ZWQnKSB7XG4gICAgICAgICAgICBwcm9qZWN0QXJyLnB1c2goSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJykpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3QgZmlsdGVyZWRQcmlvcml0eUFyciA9IFtdO1xuICAgIHByb2plY3RBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICBwcm9qZWN0LnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgICAgIGlmICh0b2RvLnRvZG9Qcmlvcml0eSA9PT0gc2VsZWN0ZWRQcmlvcml0eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXAgPSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3ROYW1lOiBwcm9qZWN0LnByb2plY3QucHJvamVjdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0Q29sb3VyOiBwcm9qZWN0LnByb2plY3QucHJvamVjdENvbG91cixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG9kb3M6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvTmFtZTogdG9kby50b2RvTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRGVzY3JpcHRpb246IHRvZG8udG9kb0Rlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EdWVEYXRlOiB0b2RvLnRvZG9EdWVEYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogdG9kby50b2RvUHJpb3JpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZmlsdGVyZWRQcmlvcml0eUFyci5wdXNoKHRlbXApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICAvL2lmIHNlbGVjdCBpbnB1dCBkZWZhdWx0IHRleHQgaXMgY2xpY2tlZCwgYWxsICdsaXZlJyBwcm9qZWN0cyBkaXNwbGF5ZWRcbiAgICBpZiAoc2VsZWN0ZWRQcmlvcml0eSA9PT0gJyAnKSB7XG4gICAgICAgIC8vcmVtb3ZlIGNvbnRlbnQgc2VjdGlvbidzIHByZXZpb3VzIGNvbnRlbnRzXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xuICAgICAgICBjb25zdCBjb250ZW50Qm90dG9tUHJldiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50LWJvdHRvbScpO1xuICAgICAgICBjb250ZW50Qm90dG9tUHJldiA9PT0gbnVsbCB8fCBjb250ZW50Qm90dG9tUHJldiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudEJvdHRvbVByZXYucmVtb3ZlKCk7XG4gICAgICAgIC8vcmVuZGVyIG5ldyBjb250ZW50XG4gICAgICAgIGNvbnN0IGNvbnRlbnRCb3R0b20gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50LWJvdHRvbSddKTtcbiAgICAgICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGNvbnRlbnQpKGNvbnRlbnRCb3R0b20pO1xuICAgICAgICBwcm9qZWN0QXJyLmZvckVhY2goKHByb2plY3QpID0+ICgwLCBhZGRUb2Rvc1RvQ29udGVudF8xLmFkZFRvZG9zVG9Db250ZW50KShwcm9qZWN0KSk7XG4gICAgfVxuICAgIC8vcmVuZGVyIHRvZG9zXG4gICAgZmlsdGVyZWRQcmlvcml0eUFyci5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgICgwLCBhZGRUb2Rvc1RvQ29udGVudF8xLmFkZFRvZG9zVG9Db250ZW50KShwcm9qZWN0KTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmhhbmRsZUZpbHRlckJ5UHJpb3JpdHlDbGljayA9IGhhbmRsZUZpbHRlckJ5UHJpb3JpdHlDbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVJbnZhbGlkUHJvak5hbWUgPSB2b2lkIDA7XG5jb25zdCBoYW5kbGVJbnZhbGlkUHJvak5hbWUgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICBpZiAodGhpcy52YWx1ZSA9PT0gJycpXG4gICAgICAgIHRoaXMuc2V0Q3VzdG9tVmFsaWRpdHkoJ1BsZWFzZSBlbnRlciBhIHByb2plY3QgbmFtZSEnKTtcbiAgICBlbHNlXG4gICAgICAgIHRoaXMuc2V0Q3VzdG9tVmFsaWRpdHkoJ1Byb2plY3QgbmFtZXMgY2FuIG9ubHkgY29udGFpbiB1cHBlciBhbmQgbG93ZXJjYXNlIGxldHRlcnMuIFBsZWFzZSB0cnkgYWdhaW4hJyk7XG59O1xuZXhwb3J0cy5oYW5kbGVJbnZhbGlkUHJvak5hbWUgPSBoYW5kbGVJbnZhbGlkUHJvak5hbWU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlSW52YWxpZFRvZG9OYW1lID0gdm9pZCAwO1xuY29uc3QgaGFuZGxlSW52YWxpZFRvZG9OYW1lID0gZnVuY3Rpb24gKGV2KSB7XG4gICAgaWYgKHRoaXMudmFsdWUgPT09ICcnKVxuICAgICAgICB0aGlzLnNldEN1c3RvbVZhbGlkaXR5KCdQbGVhc2UgZW50ZXIgYSB0b2RvIG5hbWUnKTtcbiAgICBlbHNlXG4gICAgICAgIHRoaXMuc2V0Q3VzdG9tVmFsaWRpdHkoJ1RvZG8gbmFtZXMgY2FuIG9ubHkgY29udGFpbiBsZXR0ZXJzIGFuZCBudW1iZXJzLiBQbGVhc2UgdHJ5IGFnYWluIScpO1xufTtcbmV4cG9ydHMuaGFuZGxlSW52YWxpZFRvZG9OYW1lID0gaGFuZGxlSW52YWxpZFRvZG9OYW1lO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVByb2pOYW1lVmFsaWRhdGlvbiA9IHZvaWQgMDtcbmNvbnN0IGhhbmRsZVByb2pOYW1lVmFsaWRhdGlvbiA9IGZ1bmN0aW9uIChldikge1xuICAgIC8vdG8gYXZvaWQgaW5wdXQgcmVnaXN0ZXJpbmcgYXMgaW52YWxpZCwgaWYgYSBjdXN0b20gdmFsaWRpdHkgd2FzIHByZXZpb3VzbHkgc2V0LCB3aGVuIGlucHV0IGNvbnRhaW5zIHZhbGlkIHZhbHVlIHVwb24gc3VibWlzc2lvblxuICAgIHRoaXMuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgIHRoaXMuY2hlY2tWYWxpZGl0eSgpO1xufTtcbmV4cG9ydHMuaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uID0gaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVByb2plY3RDbG9zZUljb25DbGljayA9IHZvaWQgMDtcbmNvbnN0IGhhbmRsZVByb2plY3RDbG9zZUljb25DbGljayA9IGZ1bmN0aW9uIChldikge1xuICAgIGNvbnN0IGFkZFByb2plY3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0LWNvbnRhaW5lcicpO1xuICAgIGlmIChhZGRQcm9qZWN0TW9kYWwpXG4gICAgICAgIGFkZFByb2plY3RNb2RhbC5yZW1vdmUoKTtcbn07XG5leHBvcnRzLmhhbmRsZVByb2plY3RDbG9zZUljb25DbGljayA9IGhhbmRsZVByb2plY3RDbG9zZUljb25DbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdCA9IHZvaWQgMDtcbmNvbnN0IGFkZFByb2plY3RUb1NpZGViYXJfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFByb2plY3RUb1NpZGViYXJcIik7XG5jb25zdCBoYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdCA9IGZ1bmN0aW9uIChldikge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGFkZFByb2plY3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0LWNvbnRhaW5lcicpO1xuICAgIGNvbnN0IHByb2plY3RGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSh0aGlzKTtcbiAgICBjb25zdCBwcm9qZWN0Rm9ybU5hbWUgPSAoX2IgPSAoX2EgPSBwcm9qZWN0Rm9ybURhdGEuZ2V0KCdhZGRQcm9qZWN0LW5hbWUnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRvU3RyaW5nKCkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6ICcnO1xuICAgIGNvbnN0IHByb2plY3RGb3JtQ29sb3VyID0gKF9kID0gKF9jID0gcHJvamVjdEZvcm1EYXRhLmdldCgnYWRkUHJvamVjdC1jb2xvdXInKSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnRvU3RyaW5nKCkpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6ICcnO1xuICAgIC8vaWYgJ3Byb2plY3ROYW1lcycgZG9lc24ndCBleGlzdCwgY3JlYXRlIGl0LCBvdGhlcndpc2UgZG8gbm90aGluZ1xuICAgIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byb2plY3ROYW1lcycpKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwcm9qZWN0TmFtZXMnLCBKU09OLnN0cmluZ2lmeShbXSkpO1xuICAgIH1cbiAgICBjb25zdCBzdG9yZVByb2plY3QgPSAoZnVuY3Rpb24gKHByb2plY3RGb3JtTmFtZV8pIHtcbiAgICAgICAgLy9pZiBrZXkgaW4gbG9jYWxzdG9yYWdlIGlzIHByb2plY3ROYW1lcywgdGhlbiBnZXQgdGhlIHZhbHVlcyBhc1xuICAgICAgICAvL2FuIGFycmF5XG4gICAgICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAncHJvamVjdE5hbWVzJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleXNTZXQgPSBuZXcgU2V0KEpTT04ucGFyc2UoKF9hID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpKTtcbiAgICAgICAgICAgICAgICBbJ1NhbXBsZSBQcm9qZWN0JywgJ2FyY2hpdmVkJywgJ3Byb2plY3RzJ10uZm9yRWFjaCgobmFtZSkgPT4ga2V5c1NldC5hZGQobmFtZSkpO1xuICAgICAgICAgICAgICAgIC8vaWYgbmFtZSBhbHJlYWR5IHByZXNlbnRcbiAgICAgICAgICAgICAgICBpZiAoa2V5c1NldC5oYXMocHJvamVjdEZvcm1OYW1lXykpIHtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoYCR7cHJvamVjdEZvcm1OYW1lX30gYWxyZWFkeSBleGlzdHMgYXMgYSBwcm9qZWN0ICjvvaHigKLMge+4v+KAosyA772hKSAgUGxlYXNlIGNob29zZSBhbm90aGVyIG5hbWUuYCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vaWYgbmV3IG5hbWUsIHB1c2ggdG8gYXJyIGFuZCB0aGVuIHN0b3JlIGFycmF5IGluIGxvY2FsU3RvcmFnZVxuICAgICAgICAgICAgICAgICAgICBrZXlzU2V0LmFkZChwcm9qZWN0Rm9ybU5hbWVfKTtcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKGtleXNTZXQpKSk7XG4gICAgICAgICAgICAgICAgICAgIC8vcmVuZGVyIHByb2plY3RzIHdpdGggbmFtZSxjb2xvdXIgJiBpY29uIHVuZGVyIHNpZGViYXJcbiAgICAgICAgICAgICAgICAgICAgKDAsIGFkZFByb2plY3RUb1NpZGViYXJfMS5hZGRQcm9qZWN0VG9TaWRlYmFyKShwcm9qZWN0Rm9ybU5hbWUsIHByb2plY3RGb3JtQ29sb3VyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pKHByb2plY3RGb3JtTmFtZSk7XG4gICAgYWRkUHJvamVjdE1vZGFsID09PSBudWxsIHx8IGFkZFByb2plY3RNb2RhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWRkUHJvamVjdE1vZGFsLnJlbW92ZSgpO1xufTtcbmV4cG9ydHMuaGFuZGxlUHJvamVjdEZvcm1TdWJtaXQgPSBoYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVQcm9qZWN0c1RhYkNsaWNrID0gdm9pZCAwO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgZWxlbWVudF9jcmVhdG9yc18xID0gcmVxdWlyZShcIi4uL2VsZW1lbnQtY3JlYXRvcnNcIik7XG5jb25zdCBoYW5kbGVQcm9qZWN0c1RhYkNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIC8vcmVtb3ZlIGNvbnRlbnQgc2VjdGlvbidzIHByZXZpb3VzIGNvbnRlbnRzXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XG4gICAgY29uc3QgY29udGVudEJvdHRvbVByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudC1ib3R0b20nKTtcbiAgICBjb250ZW50Qm90dG9tUHJldiA9PT0gbnVsbCB8fCBjb250ZW50Qm90dG9tUHJldiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudEJvdHRvbVByZXYucmVtb3ZlKCk7XG4gICAgLy9yZW5kZXIgbmV3IGNvbnRlbnRcbiAgICBjb25zdCBjb250ZW50Qm90dG9tID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnY29udGVudC1ib3R0b20nXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGNvbnRlbnQpKGNvbnRlbnRCb3R0b20pO1xuICAgIGNvbnN0IHByb2plY3RzQW5kVG9kb3NBcnIgPSBbXTtcbiAgICAvL2dyYWIgYWxsIHRoZSBwcm9qZWN0cyBleGNlcHQgc3BlY2lmaWVkXG4gICAgT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoa2V5ICE9PSAncHJvamVjdE5hbWVzJyAmJiBrZXkgIT09ICdhcmNoaXZlZCcpIHtcbiAgICAgICAgICAgIHByb2plY3RzQW5kVG9kb3NBcnIucHVzaChKU09OLnBhcnNlKChfYSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL3JlbmRlciB0b2Rvc1xuICAgIHByb2plY3RzQW5kVG9kb3NBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICAoMCwgYWRkVG9kb3NUb0NvbnRlbnRfMS5hZGRUb2Rvc1RvQ29udGVudCkocHJvamVjdCk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5oYW5kbGVQcm9qZWN0c1RhYkNsaWNrID0gaGFuZGxlUHJvamVjdHNUYWJDbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVTZWFyY2hGb3JtU3VibWl0ID0gdm9pZCAwO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgZWxlbWVudF9jcmVhdG9yc18xID0gcmVxdWlyZShcIi4uL2VsZW1lbnQtY3JlYXRvcnNcIik7XG5jb25zdCBoYW5kbGVTZWFyY2hGb3JtU3VibWl0ID0gZnVuY3Rpb24gKGV2KSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vcmVtb3ZlIGNvbnRlbnQgc2VjdGlvbidzIHByZXZpb3VzIGNvbnRlbnRzXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XG4gICAgY29uc3QgY29udGVudEJvdHRvbVByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudC1ib3R0b20nKTtcbiAgICBjb250ZW50Qm90dG9tUHJldiA9PT0gbnVsbCB8fCBjb250ZW50Qm90dG9tUHJldiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudEJvdHRvbVByZXYucmVtb3ZlKCk7XG4gICAgLy9yZW5kZXIgbmV3IGNvbnRlbnQgYW5kIGFwcGVuZCB0byB0aGlzXG4gICAgY29uc3QgY29udGVudEJvdHRvbSA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2NvbnRlbnQtYm90dG9tJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShjb250ZW50KShjb250ZW50Qm90dG9tKTtcbiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSh0aGlzKTtcbiAgICBjb25zdCBzZWFyY2hUZXJtID0gKF9iID0gKF9hID0gZm9ybURhdGEuZ2V0KCdzZWFyY2gtdG9kbycpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAnJztcbiAgICBjb25zdCBwcm9qZWN0QXJyID0gW107XG4gICAgLy9ncmFiIGFsbCB0aGUgcHJvamVjdHMgZXhjZXB0IHNwZWNpZmllZFxuICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGtleSAhPT0gJ3Byb2plY3ROYW1lcycgJiYga2V5ICE9PSAnYXJjaGl2ZWQnKSB7XG4gICAgICAgICAgICBwcm9qZWN0QXJyLnB1c2goSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJykpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3Qgc2VhcmNoUmVnRXggPSBuZXcgUmVnRXhwKGAke3NlYXJjaFRlcm19YCk7XG4gICAgY29uc3QgbWF0Y2hlZFByb2pBbmRUb2Rvc0FyciA9IFtdO1xuICAgIHByb2plY3RBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICBwcm9qZWN0LnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgICAgIC8vIGlmIGl0IG1hdGNoZXMgdG9kb05hbWVcbiAgICAgICAgICAgIGlmIChzZWFyY2hSZWdFeC50ZXN0KHRvZG8udG9kb05hbWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wID0ge1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0TmFtZTogcHJvamVjdC5wcm9qZWN0LnByb2plY3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdENvbG91cjogcHJvamVjdC5wcm9qZWN0LnByb2plY3RDb2xvdXIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRvZG9zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb05hbWU6IHRvZG8udG9kb05hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0Rlc2NyaXB0aW9uOiB0b2RvLnRvZG9EZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRHVlRGF0ZTogdG9kby50b2RvRHVlRGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvUHJpb3JpdHk6IHRvZG8udG9kb1ByaW9yaXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG1hdGNoZWRQcm9qQW5kVG9kb3NBcnIucHVzaCh0ZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGVsc2UgaXQgbWF0Y2hlcyBkZXNjcmlwdGlvbiB0ZXh0XG4gICAgICAgICAgICBlbHNlIGlmIChzZWFyY2hSZWdFeC50ZXN0KHRvZG8udG9kb0Rlc2NyaXB0aW9uLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGVtcCA9IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdE5hbWU6IHByb2plY3QucHJvamVjdC5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RDb2xvdXI6IHByb2plY3QucHJvamVjdC5wcm9qZWN0Q29sb3VyLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b2RvczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9OYW1lOiB0b2RvLnRvZG9OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EZXNjcmlwdGlvbjogdG9kby50b2RvRGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0R1ZURhdGU6IHRvZG8udG9kb0R1ZURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb1ByaW9yaXR5OiB0b2RvLnRvZG9Qcmlvcml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBtYXRjaGVkUHJvakFuZFRvZG9zQXJyLnB1c2godGVtcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL2Vsc2UgaXQgbWF0Y2hlcyBkdWVEYXRlXG4gICAgICAgICAgICBlbHNlIGlmIChzZWFyY2hSZWdFeC50ZXN0KHRvZG8udG9kb0R1ZURhdGUudG9TdHJpbmcoKSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wID0ge1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0TmFtZTogcHJvamVjdC5wcm9qZWN0LnByb2plY3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdENvbG91cjogcHJvamVjdC5wcm9qZWN0LnByb2plY3RDb2xvdXIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRvZG9zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb05hbWU6IHRvZG8udG9kb05hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0Rlc2NyaXB0aW9uOiB0b2RvLnRvZG9EZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRHVlRGF0ZTogdG9kby50b2RvRHVlRGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvUHJpb3JpdHk6IHRvZG8udG9kb1ByaW9yaXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG1hdGNoZWRQcm9qQW5kVG9kb3NBcnIucHVzaCh0ZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vZWxzZSBpdCBtYXRjaGVzIHByaW9yaXR5XG4gICAgICAgICAgICBlbHNlIGlmIChzZWFyY2hSZWdFeC50ZXN0KHRvZG8udG9kb1ByaW9yaXR5LnRvU3RyaW5nKCkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGVtcCA9IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdE5hbWU6IHByb2plY3QucHJvamVjdC5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RDb2xvdXI6IHByb2plY3QucHJvamVjdC5wcm9qZWN0Q29sb3VyLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b2RvczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9OYW1lOiB0b2RvLnRvZG9OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EZXNjcmlwdGlvbjogdG9kby50b2RvRGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0R1ZURhdGU6IHRvZG8udG9kb0R1ZURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb1ByaW9yaXR5OiB0b2RvLnRvZG9Qcmlvcml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBtYXRjaGVkUHJvakFuZFRvZG9zQXJyLnB1c2godGVtcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIC8vcmVuZGVyIHRvZG9zXG4gICAgbWF0Y2hlZFByb2pBbmRUb2Rvc0Fyci5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgICgwLCBhZGRUb2Rvc1RvQ29udGVudF8xLmFkZFRvZG9zVG9Db250ZW50KShwcm9qZWN0KTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmhhbmRsZVNlYXJjaEZvcm1TdWJtaXQgPSBoYW5kbGVTZWFyY2hGb3JtU3VibWl0O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2sgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50X2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi4vZWxlbWVudC1jcmVhdG9yc1wiKTtcbmNvbnN0IGFkZFRvZG9zVG9Db250ZW50XzEgPSByZXF1aXJlKFwiLi4vcHJvamVjdHNBbmRUb2Rvcy9hZGRUb2Rvc1RvQ29udGVudFwiKTtcbmNvbnN0IGhhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2sgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAvL3JlbW92ZSBjb250ZW50IHNlY3Rpb24ncyBwcmV2aW91cyBjb250ZW50c1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xuICAgIGNvbnN0IGNvbnRlbnRCb3R0b21QcmV2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQtYm90dG9tJyk7XG4gICAgY29udGVudEJvdHRvbVByZXYgPT09IG51bGwgfHwgY29udGVudEJvdHRvbVByZXYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnRCb3R0b21QcmV2LnJlbW92ZSgpO1xuICAgIC8vcmVuZGVyIG5ldyBjb250ZW50XG4gICAgY29uc3QgY29udGVudEJvdHRvbSA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2NvbnRlbnQtYm90dG9tJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShjb250ZW50KShjb250ZW50Qm90dG9tKTtcbiAgICBjb25zdCBzZWxlY3RlZFNvcnRWYWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgY29uc3QgcHJvamVjdEFyciA9IFtdO1xuICAgIC8vZ3JhYiBhbGwgcHJvamVjdHMgZXhjZXB0IHNwZWNpZmllZFxuICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGtleSAhPT0gJ3Byb2plY3ROYW1lcycgJiYga2V5ICE9PSAnYXJjaGl2ZWQnKSB7XG4gICAgICAgICAgICBwcm9qZWN0QXJyLnB1c2goSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJykpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc29sZS5sb2cocHJvamVjdEFycik7XG4gICAgLy9hc3NpZ25zIGEga2V5IHRvIGVhY2ggcHJvamVjdCBiYXNlZCBvbiBpdHMgdG9kb1xuICAgIGNvbnN0IHByb2plY3RNYXAgPSBwcm9qZWN0QXJyLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgICAgIGN1cnIudG9kb3MuZm9yRWFjaCgodG9kbykgPT4ge1xuICAgICAgICAgICAgaWYgKHRvZG8udG9kb1ByaW9yaXR5ID09PSAnaW1tZWRpYXRlJykge1xuICAgICAgICAgICAgICAgIGFjYy5zZXQoNSwge1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0TmFtZTogY3Vyci5wcm9qZWN0LnByb2plY3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdENvbG91cjogY3Vyci5wcm9qZWN0LnByb2plY3RDb2xvdXIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRvZG9zOiBbdG9kb10sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0b2RvLnRvZG9Qcmlvcml0eSA9PT0gJ3VyZ2VudCcpIHtcbiAgICAgICAgICAgICAgICBhY2Muc2V0KDQsIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdE5hbWU6IGN1cnIucHJvamVjdC5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RDb2xvdXI6IGN1cnIucHJvamVjdC5wcm9qZWN0Q29sb3VyLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b2RvczogW3RvZG9dLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodG9kby50b2RvUHJpb3JpdHkgPT09ICdoaWdoJykge1xuICAgICAgICAgICAgICAgIGFjYy5zZXQoMywge1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0TmFtZTogY3Vyci5wcm9qZWN0LnByb2plY3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdENvbG91cjogY3Vyci5wcm9qZWN0LnByb2plY3RDb2xvdXIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRvZG9zOiBbdG9kb10sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0b2RvLnRvZG9Qcmlvcml0eSA9PT0gJ21lZGl1bScpIHtcbiAgICAgICAgICAgICAgICBhY2Muc2V0KDIsIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdE5hbWU6IGN1cnIucHJvamVjdC5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RDb2xvdXI6IGN1cnIucHJvamVjdC5wcm9qZWN0Q29sb3VyLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b2RvczogW3RvZG9dLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodG9kby50b2RvUHJpb3JpdHkgPT09ICdsb3cnKSB7XG4gICAgICAgICAgICAgICAgYWNjLnNldCgxLCB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3ROYW1lOiBjdXJyLnByb2plY3QucHJvamVjdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0Q29sb3VyOiBjdXJyLnByb2plY3QucHJvamVjdENvbG91cixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG9kb3M6IFt0b2RvXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbmV3IE1hcCgpKTtcbiAgICBjb25zb2xlLmxvZyhwcm9qZWN0TWFwKTtcbiAgICAvL2luIG9yZGVyIHRvIHVzZSB0aGUgc29ydCBtZXRob2RcbiAgICBjb25zdCBwcm9qZWN0TWFwQXJyID0gQXJyYXkuZnJvbShwcm9qZWN0TWFwKTtcbiAgICBpZiAoc2VsZWN0ZWRTb3J0VmFsdWUgPT09ICdsb3dUb0ltbWVkaWF0ZScpIHtcbiAgICAgICAgcHJvamVjdE1hcEFyci5zb3J0KChhLCBiKSA9PiBhWzBdIC0gYlswXSk7XG4gICAgfVxuICAgIGlmIChzZWxlY3RlZFNvcnRWYWx1ZSA9PT0gJ2ltbWVkaWF0ZVRvTG93Jykge1xuICAgICAgICBwcm9qZWN0TWFwQXJyLnNvcnQoKGEsIGIpID0+IGJbMF0gLSBhWzBdKTtcbiAgICB9XG4gICAgLy9yZW5kZXIgdGhlIHRvZG9zXG4gICAgcHJvamVjdE1hcEFyci5mb3JFYWNoKChudW1Qcm9qZWN0KSA9PiB7XG4gICAgICAgICgwLCBhZGRUb2Rvc1RvQ29udGVudF8xLmFkZFRvZG9zVG9Db250ZW50KShudW1Qcm9qZWN0WzFdKTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmhhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2sgPSBoYW5kbGVTb3J0QnlQcmlvcml0eUNsaWNrO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVRvZGF5VGFiQ2xpY2sgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50X2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi4vZWxlbWVudC1jcmVhdG9yc1wiKTtcbmNvbnN0IGFkZFRvZG9zVG9Db250ZW50XzEgPSByZXF1aXJlKFwiLi4vcHJvamVjdHNBbmRUb2Rvcy9hZGRUb2Rvc1RvQ29udGVudFwiKTtcbmNvbnN0IGhhbmRsZVRvZGF5VGFiQ2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy9yZW1vdmUgY29udGVudCBzZWN0aW9uJ3MgcHJldmlvdXMgY29udGVudHNcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcbiAgICBjb25zdCBjb250ZW50Qm90dG9tUHJldiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50LWJvdHRvbScpO1xuICAgIGNvbnRlbnRCb3R0b21QcmV2ID09PSBudWxsIHx8IGNvbnRlbnRCb3R0b21QcmV2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50Qm90dG9tUHJldi5yZW1vdmUoKTtcbiAgICAvL3JlbmRlciBuZXcgY29udGVudCBhbmQgYXBwZW5kIHRvIHRoaXNcbiAgICBjb25zdCBjb250ZW50Qm90dG9tID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnY29udGVudC1ib3R0b20nXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGNvbnRlbnQpKGNvbnRlbnRCb3R0b20pO1xuICAgIGNvbnN0IHByb2plY3RBcnIgPSBbXTtcbiAgICAvL2dyYWIgYWxsIHRoZSBwcm9qZWN0cyBleGNlcHQgb25lcyBzcGVjaWZpZWRcbiAgICBPYmplY3Qua2V5cyhsb2NhbFN0b3JhZ2UpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChrZXkgIT09ICdwcm9qZWN0TmFtZXMnICYmIGtleSAhPT0gJ2FyY2hpdmVkJykge1xuICAgICAgICAgICAgcHJvamVjdEFyci5wdXNoKEpTT04ucGFyc2UoKF9hID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgZGF0ZSA9IG5vdy5nZXREYXRlKCk7XG4gICAgY29uc3QgbW9udGggPSBub3cuZ2V0TW9udGgoKSArIDE7XG4gICAgY29uc3QgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xuICAgIGNvbnN0IHRvZGF5ID0gYCR7eWVhcn0tJHttb250aCA8IDEwID8gJzAnICsgbW9udGggOiBtb250aH0tJHtkYXRlIDwgMTAgPyAnMCcgKyBkYXRlIDogZGF0ZX1gO1xuICAgIGNvbnN0IHByb2pBbmRUb2Rvc0ZpbHRlcmVkID0gW107XG4gICAgLy9ncmFiIGVhY2ggdG9kbyBkdWUgdG9kYXkgYW5kIHB1dCBpbnRvIGNyZWF0ZWQgdGVtcCBwcm9qZWN0IGFuZCBwdXNoIHByb2plY3QgaW50byBmaWx0ZXJlZCBhcnJheVxuICAgIHByb2plY3RBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICBwcm9qZWN0LnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgICAgIGlmICh0b2RvLnRvZG9EdWVEYXRlID09PSB0b2RheSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXAgPSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3ROYW1lOiBwcm9qZWN0LnByb2plY3QucHJvamVjdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0Q29sb3VyOiBwcm9qZWN0LnByb2plY3QucHJvamVjdENvbG91cixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG9kb3M6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvTmFtZTogdG9kby50b2RvTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRGVzY3JpcHRpb246IHRvZG8udG9kb0Rlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EdWVEYXRlOiB0b2RvLnRvZG9EdWVEYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogdG9kby50b2RvUHJpb3JpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcHJvakFuZFRvZG9zRmlsdGVyZWQucHVzaCh0ZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy9yZW5kZXIgdGhlIHRvZG9zXG4gICAgcHJvakFuZFRvZG9zRmlsdGVyZWQuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICAoMCwgYWRkVG9kb3NUb0NvbnRlbnRfMS5hZGRUb2Rvc1RvQ29udGVudCkocHJvamVjdCk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5oYW5kbGVUb2RheVRhYkNsaWNrID0gaGFuZGxlVG9kYXlUYWJDbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVUb2RvQ2hlY2tib3hDb21wbGV0ZSA9IHZvaWQgMDtcbmNvbnN0IGhhbmRsZVRvZG9DaGVja2JveENvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2gsIF9qLCBfaywgX2w7XG4gICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXJjaGl2ZWQnKSkge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXJjaGl2ZWQnLCBKU09OLnN0cmluZ2lmeShbXSkpO1xuICAgIH1cbiAgICBjb25zdCB0aGlzUHJvamVjdE5hbWUgPSAoX2IgPSAoX2EgPSB0aGlzLnByZXZpb3VzU2libGluZykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRleHRDb250ZW50KSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAnJztcbiAgICBjb25zdCB0aGlzUHJvamVjdENvbG91ciA9IChfYyA9IHRoaXMudmFsdWUpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6ICcnO1xuICAgIGNvbnN0IHRoaXNUb2RvTmFtZSA9IChfaCA9IChfZyA9IChfZiA9IChfZSA9IChfZCA9IHRoaXMucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnBhcmVudEVsZW1lbnQpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5maXJzdENoaWxkKSA9PT0gbnVsbCB8fCBfZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2YubmV4dFNpYmxpbmcpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy50ZXh0Q29udGVudCkgIT09IG51bGwgJiYgX2ggIT09IHZvaWQgMCA/IF9oIDogJyc7XG4gICAgY29uc3QgcHJvamVjdEFyciA9IFtdO1xuICAgIC8vZ3JhYiB0aGUgZW50aXJlIHByb2plY3QgYmVsb25naW5nIHRvIGN1cnJlbnRseSBjaGVja2VkIHRvZG9cbiAgICBPYmplY3Qua2V5cyhsb2NhbFN0b3JhZ2UpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChrZXkgIT09ICdwcm9qZWN0TmFtZXMnICYmIGtleSAhPT0gJ2FyY2hpdmVkJykge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gdGhpc1Byb2plY3ROYW1lKSB7XG4gICAgICAgICAgICAgICAgcHJvamVjdEFyci5wdXNoKEpTT04ucGFyc2UoKF9hID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGFyY2hpdmVkVG9kb3MgPSBKU09OLnBhcnNlKChfaiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcmNoaXZlZCcpKSAhPT0gbnVsbCAmJiBfaiAhPT0gdm9pZCAwID8gX2ogOiAnJyk7XG4gICAgY29uc3QgdG9kb1RvQmVBcmNoaXZlZCA9IFtdO1xuICAgIC8vZ3JhYiByZW1haW5pbmcgdG9kb3MgdGhhdCBhcmUgbm90IGN1cnJlbnQgdG9kb1xuICAgIGNvbnN0IHRvZG9zQXJyRmlsdGVyZWQgPSBbXTtcbiAgICBwcm9qZWN0QXJyWzBdLnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgaWYgKHRvZG8udG9kb05hbWUgIT09IHRoaXNUb2RvTmFtZSkge1xuICAgICAgICAgICAgdG9kb3NBcnJGaWx0ZXJlZC5wdXNoKHRvZG8pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdG9kb1RvQmVBcmNoaXZlZC5wdXNoKHRvZG8pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy9yZXBsYWNlIHRoZSB0b2RvcyBvZiBwcm9qZWN0IGZyb20gc3RvcmFnZSB3aXRoIGZpbHRlcmVkIHRvZG9zIHdoaWNoIGRvIG5vdCBoYXZlIHRoZSBjdXJyZW50bHkgY2hlY2tlZCBvZmYgdG9kb1xuICAgIHByb2plY3RBcnJbMF0udG9kb3MgPSB0b2Rvc0FyckZpbHRlcmVkO1xuICAgIC8vcHV0IHRoZSByZW1haW5pbmcgdG9kb3MgYmFjayBpbnRvIHByb2plY3QgYW5kIGludG8gc3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXNQcm9qZWN0TmFtZSwgSlNPTi5zdHJpbmdpZnkocHJvamVjdEFyclswXSkpO1xuICAgIGNvbnN0IHByb2plY3RBbmRUb2RvVG9CZUFyY2hpdmVkID0ge1xuICAgICAgICBwcm9qZWN0OiB7IHByb2plY3ROYW1lOiB0aGlzUHJvamVjdE5hbWUsIHByb2plY3RDb2xvdXI6IHRoaXNQcm9qZWN0Q29sb3VyIH0sXG4gICAgICAgIHRvZG9zOiBbdG9kb1RvQmVBcmNoaXZlZFswXV0sXG4gICAgfTtcbiAgICAvL3N0b3JlIHRoZSByZW1vdmVkIHRvZG8gdW5kZXIgJ2FyY2hpdmVkJ1xuICAgIGFyY2hpdmVkVG9kb3MucHVzaChwcm9qZWN0QW5kVG9kb1RvQmVBcmNoaXZlZCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FyY2hpdmVkJywgSlNPTi5zdHJpbmdpZnkoYXJjaGl2ZWRUb2RvcykpO1xuICAgIC8vcmVtb3ZlIHRoZSBjdXJyZW50IHRvZG8gd2hvc2UgY2hlY2tib3ggaXMgY2xpY2tlZFxuICAgIChfbCA9IChfayA9IHRoaXMucGFyZW50RWxlbWVudCkgPT09IG51bGwgfHwgX2sgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9rLnBhcmVudEVsZW1lbnQpID09PSBudWxsIHx8IF9sID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbC5yZW1vdmUoKTtcbn07XG5leHBvcnRzLmhhbmRsZVRvZG9DaGVja2JveENvbXBsZXRlID0gaGFuZGxlVG9kb0NoZWNrYm94Q29tcGxldGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlVG9kb0Nsb3NlSWNvbkNsaWNrID0gdm9pZCAwO1xuY29uc3QgaGFuZGxlVG9kb0Nsb3NlSWNvbkNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHRvZG9Nb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWNvbnRhaW5lcicpO1xuICAgIGlmICh0b2RvTW9kYWwpXG4gICAgICAgIHRvZG9Nb2RhbC5yZW1vdmUoKTtcbn07XG5leHBvcnRzLmhhbmRsZVRvZG9DbG9zZUljb25DbGljayA9IGhhbmRsZVRvZG9DbG9zZUljb25DbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVUb2RvRm9ybVN1Ym1pdCA9IHZvaWQgMDtcbmNvbnN0IHN0b3JlUHJvamVjdEFuZFRvZG9zRnVsbF8xID0gcmVxdWlyZShcIi4uL3Byb2plY3RzQW5kVG9kb3Mvc3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsXCIpO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgaGFuZGxlVG9kb0Zvcm1TdWJtaXQgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2ssIF9sLCBfbTtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRvZG9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kby1jb250YWluZXInKTtcbiAgICBjb25zdCB0b2RvRm9ybURhdGEgPSBuZXcgRm9ybURhdGEodGhpcyk7XG4gICAgY29uc3QgdG9kb0Zvcm1Qcm9qZWN0TmFtZSA9IChfYiA9IChfYSA9IHRvZG9Gb3JtRGF0YS5nZXQoJ2FkZFRvZG8tcHJvamVjdE5hbWUnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRvU3RyaW5nKCkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6ICcnO1xuICAgIGNvbnN0IHRvZG9Gb3JtUHJvamVjdENvbG91ciA9IChfZCA9IChfYyA9IHRvZG9Gb3JtRGF0YS5nZXQoJ2FkZFRvZG8tcHJvamVjdENvbG91cicpKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MudG9TdHJpbmcoKSkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogJyc7XG4gICAgY29uc3QgdG9kb0Zvcm1OYW1lID0gKF9mID0gKF9lID0gdG9kb0Zvcm1EYXRhLmdldCgnYWRkVG9kby1uYW1lJykpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiAnJztcbiAgICBjb25zdCB0b2RvRm9ybURlc2NyaXB0aW9uID0gKF9oID0gKF9nID0gdG9kb0Zvcm1EYXRhLmdldCgnYWRkVG9kby1kZXNjcmlwdGlvbicpKSA9PT0gbnVsbCB8fCBfZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2cudG9TdHJpbmcoKSkgIT09IG51bGwgJiYgX2ggIT09IHZvaWQgMCA/IF9oIDogJyc7XG4gICAgY29uc3QgdG9kb0Zvcm1EdWVEYXRlID0gKF9rID0gKF9qID0gdG9kb0Zvcm1EYXRhLmdldCgnYWRkVG9kby1kdWVEYXRlJykpID09PSBudWxsIHx8IF9qID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfai50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfayAhPT0gdm9pZCAwID8gX2sgOiAnJztcbiAgICBjb25zdCB0b2RvRm9ybVNlbGVjdFByaW9yaXR5ID0gKF9tID0gKF9sID0gdG9kb0Zvcm1EYXRhLmdldCgnYWRkVG9kby1zZWxlY3RQcmlvcml0eScpKSA9PT0gbnVsbCB8fCBfbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2wudG9TdHJpbmcoKSkgIT09IG51bGwgJiYgX20gIT09IHZvaWQgMCA/IF9tIDogJyc7XG4gICAgY29uc3QgcHJvamVjdHNBbmRUb2Rvc0ZhY3RvcnkgPSBmdW5jdGlvbiAocHJvamVjdE5hbWUsIHByb2plY3RDb2xvdXIsIHRvZG9OYW1lLCB0b2RvRGVzY3JpcHRpb24sIHRvZG9EdWVEYXRlLCB0b2RvUHJpb3JpdHkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHByb2plY3Q6IHsgcHJvamVjdE5hbWUsIHByb2plY3RDb2xvdXIgfSxcbiAgICAgICAgICAgIHRvZG9zOiBbeyB0b2RvTmFtZSwgdG9kb0Rlc2NyaXB0aW9uLCB0b2RvRHVlRGF0ZSwgdG9kb1ByaW9yaXR5IH1dLFxuICAgICAgICB9O1xuICAgIH07XG4gICAgY29uc3QgcHJvamVjdEFuZFRvZG9zID0gcHJvamVjdHNBbmRUb2Rvc0ZhY3RvcnkodG9kb0Zvcm1Qcm9qZWN0TmFtZSwgdG9kb0Zvcm1Qcm9qZWN0Q29sb3VyLCB0b2RvRm9ybU5hbWUsIHRvZG9Gb3JtRGVzY3JpcHRpb24sIHRvZG9Gb3JtRHVlRGF0ZSwgdG9kb0Zvcm1TZWxlY3RQcmlvcml0eSk7XG4gICAgLy9jaGVja3MgaWYgdG9kb0V4aXN0cyBhbmQgcmV0dXJucyB0cnVlIGlmIHRvZG9OYW1lIGlzIHByZXNlbnRcbiAgICBjb25zdCB0b2RvRXhpc3RzID0gKDAsIHN0b3JlUHJvamVjdEFuZFRvZG9zRnVsbF8xLnN0b3JlUHJvamVjdEFuZFRvZG9zRnVsbCkocHJvamVjdEFuZFRvZG9zKTtcbiAgICBpZiAoIXRvZG9FeGlzdHMpIHtcbiAgICAgICAgKDAsIGFkZFRvZG9zVG9Db250ZW50XzEuYWRkVG9kb3NUb0NvbnRlbnQpKHByb2plY3RBbmRUb2Rvcyk7XG4gICAgfVxuICAgIHRvZG9Db250YWluZXIgPT09IG51bGwgfHwgdG9kb0NvbnRhaW5lciA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9kb0NvbnRhaW5lci5yZW1vdmUoKTtcbn07XG5leHBvcnRzLmhhbmRsZVRvZG9Gb3JtU3VibWl0ID0gaGFuZGxlVG9kb0Zvcm1TdWJtaXQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uID0gdm9pZCAwO1xuY29uc3QgaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uID0gZnVuY3Rpb24gKGV2KSB7XG4gICAgLy90byBhdm9pZCBpbnB1dCByZWdpc3RlcmluZyBhcyBpbnZhbGlkLCBpZiBhIGN1c3RvbSB2YWxpZGl0eSB3YXMgcHJldmlvdXNseSBzZXQsIHdoZW4gaW5wdXQgY29udGFpbnMgdmFsaWQgdmFsdWUgdXBvbiBzdWJtaXNzaW9uXG4gICAgdGhpcy5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgdGhpcy5jaGVja1ZhbGlkaXR5KCk7XG59O1xuZXhwb3J0cy5oYW5kbGVUb2RvTmFtZVZhbGlkYXRpb24gPSBoYW5kbGVUb2RvTmFtZVZhbGlkYXRpb247XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFuZGxlVXBjb21pbmdUYWJDbGljayA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgYWRkVG9kb3NUb0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuLi9wcm9qZWN0c0FuZFRvZG9zL2FkZFRvZG9zVG9Db250ZW50XCIpO1xuY29uc3QgaGFuZGxlVXBjb21pbmdUYWJDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAvL3JlbW92ZSBjb250ZW50IHNlY3Rpb24ncyBwcmV2aW91cyBjb250ZW50c1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xuICAgIGNvbnN0IGNvbnRlbnRCb3R0b21QcmV2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQtYm90dG9tJyk7XG4gICAgY29udGVudEJvdHRvbVByZXYgPT09IG51bGwgfHwgY29udGVudEJvdHRvbVByZXYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnRCb3R0b21QcmV2LnJlbW92ZSgpO1xuICAgIC8vcmVuZGVyIG5ldyBjb250ZW50IGFuZCBhcHBlbmQgdG8gdGhpc1xuICAgIGNvbnN0IGNvbnRlbnRCb3R0b20gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydjb250ZW50LWJvdHRvbSddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoY29udGVudCkoY29udGVudEJvdHRvbSk7XG4gICAgY29uc3QgcHJvamVjdEFyciA9IFtdO1xuICAgIC8vZ3JhYiBhbGwgdGhlIHByb2plY3RzIGV4Y2VwdCBvbmVzIHNwZWNpZmllZFxuICAgIE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGtleSAhPT0gJ3Byb2plY3ROYW1lcycgJiYga2V5ICE9PSAnYXJjaGl2ZWQnKSB7XG4gICAgICAgICAgICBwcm9qZWN0QXJyLnB1c2goSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJykpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBkYXRlID0gbm93LmdldERhdGUoKTtcbiAgICBjb25zdCBtb250aCA9IG5vdy5nZXRNb250aCgpICsgMTtcbiAgICBjb25zdCB5ZWFyID0gbm93LmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgdG9kYXkgPSBgJHt5ZWFyfS0ke21vbnRoIDwgMTAgPyAnMCcgKyBtb250aCA6IG1vbnRofS0ke2RhdGUgPCAxMCA/ICcwJyArIGRhdGUgOiBkYXRlfWA7XG4gICAgY29uc3QgcHJvakFuZFRvZG9zRmlsdGVyZWQgPSBbXTtcbiAgICAvL2dyYWIgZWFjaCB0b2RvIG5vdCBkdWUgdG9kYXkgYW5kIHB1dCBpbnRvIHRlbXAgcHJvamVjdCBvYmogYW5kIHB1c2ggaW50byAuLi5GaWx0ZXJlZFxuICAgIHByb2plY3RBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICBwcm9qZWN0LnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgICAgIGlmICh0b2RvLnRvZG9EdWVEYXRlICE9PSB0b2RheSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXAgPSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3ROYW1lOiBwcm9qZWN0LnByb2plY3QucHJvamVjdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0Q29sb3VyOiBwcm9qZWN0LnByb2plY3QucHJvamVjdENvbG91cixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG9kb3M6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvTmFtZTogdG9kby50b2RvTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRGVzY3JpcHRpb246IHRvZG8udG9kb0Rlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EdWVEYXRlOiB0b2RvLnRvZG9EdWVEYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogdG9kby50b2RvUHJpb3JpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcHJvakFuZFRvZG9zRmlsdGVyZWQucHVzaCh0ZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy9yZW5kZXIgdGhlIHRvZG9zXG4gICAgcHJvakFuZFRvZG9zRmlsdGVyZWQuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICAoMCwgYWRkVG9kb3NUb0NvbnRlbnRfMS5hZGRUb2Rvc1RvQ29udGVudCkocHJvamVjdCk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5oYW5kbGVVcGNvbWluZ1RhYkNsaWNrID0gaGFuZGxlVXBjb21pbmdUYWJDbGljaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oZWFkZXIgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50X2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi4vZWxlbWVudC1jcmVhdG9yc1wiKTtcbmNvbnN0IGhlYWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCByb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jvb3QnKTtcbiAgICBjb25zdCBoZWFkZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydoZWFkZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHJvb3QpKGhlYWRlcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdUb2RvIExpc3QgQXBwJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShoZWFkZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaDEnKShbJ3RpdGxlJywgJ2hlYWRlci10aXRsZSddKSk7XG59O1xuZXhwb3J0cy5oZWFkZXIgPSBoZWFkZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJvamVjdE1vZGFsID0gdm9pZCAwO1xuY29uc3QgZWxlbWVudF9jcmVhdG9yc18xID0gcmVxdWlyZShcIi4uL2VsZW1lbnQtY3JlYXRvcnNcIik7XG5jb25zdCBoYW5kbGVJbnZhbGlkUHJvak5hbWVfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVJbnZhbGlkUHJvak5hbWVcIik7XG5jb25zdCBoYW5kbGVQcm9qZWN0Q2xvc2VJY29uQ2xpY2tfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVQcm9qZWN0Q2xvc2VJY29uQ2xpY2tcIik7XG5jb25zdCBoYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdF8xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZVByb2plY3RGb3JtU3VibWl0XCIpO1xuY29uc3QgaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uXCIpO1xuY29uc3QgcHJvamVjdE1vZGFsID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHNpZGViYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhcicpO1xuICAgIC8vYWRkUHJvamVjdCBtb2RhbFxuICAgIGNvbnN0IGFkZFByb2plY3RDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydhZGRQcm9qZWN0LWNvbnRhaW5lciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2lkZWJhcikoYWRkUHJvamVjdENvbnRhaW5lcik7XG4gICAgY29uc3QgYWRkUHJvamVjdEhlYWRpbmdDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydhZGRQcm9qZWN0SGVhZGluZy1jb250YWluZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3RDb250YWluZXIpKGFkZFByb2plY3RIZWFkaW5nQ29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ0FkZCBwcm9qZWN0JyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShhZGRQcm9qZWN0SGVhZGluZ0NvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdoMycpKFsnaGVhZGluZy10ZXh0JywgJ3RleHQtYWRkUHJvamVjdCddKSk7XG4gICAgY29uc3QgYWRkUHJvamVjdEZvcm0gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZm9ybScpKFsnZm9ybS1hZGRQcm9qZWN0J10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtcbiAgICAgICAgWydhY3Rpb24nLCAnIyddLFxuICAgICAgICBbJ21ldGhvZCcsICdwb3N0J10sXG4gICAgICAgIFsnaWQnLCAnZm9ybS1hZGRQcm9qZWN0J10sXG4gICAgICAgIFsnbmFtZScsICdmb3JtLWFkZFByb2plY3QnXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ3N1Ym1pdCcpKGhhbmRsZVByb2plY3RGb3JtU3VibWl0XzEuaGFuZGxlUHJvamVjdEZvcm1TdWJtaXQpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkUHJvamVjdENvbnRhaW5lcikpKGFkZFByb2plY3RGb3JtKTtcbiAgICBjb25zdCBhZGRQcm9qZWN0TmFtZUNvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2FkZFByb2plY3QtbmFtZS1jb250YWluZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3RGb3JtKShhZGRQcm9qZWN0TmFtZUNvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1snZm9yJywgJ2FkZFByb2plY3QtbmFtZSddXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ05hbWUnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3ROYW1lQ29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2xhYmVsJykoWydsYWJlbC1uYW1lJ10pKTtcbiAgICAvL2lucHV0IG5hbWVcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdpbnB1dCcpKGhhbmRsZVByb2pOYW1lVmFsaWRhdGlvbl8xLmhhbmRsZVByb2pOYW1lVmFsaWRhdGlvbiksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdpbnZhbGlkJykoaGFuZGxlSW52YWxpZFByb2pOYW1lXzEuaGFuZGxlSW52YWxpZFByb2pOYW1lKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtcbiAgICAgICAgWydpZCcsICdhZGRQcm9qZWN0LW5hbWUnXSxcbiAgICAgICAgWyd0eXBlJywgJ3RleHQnXSxcbiAgICAgICAgWydtaW5sZW5ndGgnLCAnMiddLFxuICAgICAgICBbJ21heGxlbmd0aCcsICcxNyddLFxuICAgICAgICBbJ3BhdHRlcm4nLCAnW2EtekEtWl0rJ10sXG4gICAgICAgIFsncGxhY2Vob2xkZXInLCAnRW50ZXIgbmFtZSBvZiBwcm9qZWN0J10sXG4gICAgICAgIFsnbmFtZScsICdhZGRQcm9qZWN0LW5hbWUnXSxcbiAgICAgICAgWydyZXF1aXJlZCcsICcnXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3ROYW1lQ29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2lucHV0JykoWydhZGRQcm9qZWN0LW5hbWUnXSkpO1xuICAgIGNvbnN0IGFkZFByb2plY3RDb2xvdXJDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydhZGRQcm9qZWN0LWNvbG91ci1jb250YWluZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3RGb3JtKShhZGRQcm9qZWN0Q29sb3VyQ29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydmb3InLCAnYWRkUHJvamVjdC1jb2xvdXInXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdDb2xvdXInKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3RDb2xvdXJDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnbGFiZWwnKShbJ2xhYmVsLWNvbG91ciddKSk7XG4gICAgLy9pbnB1dCBjb2xvdXJcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsndHlwZScsICdjb2xvciddLFxuICAgICAgICBbJ2lkJywgJ2FkZFByb2plY3QtY29sb3VyJ10sXG4gICAgICAgIFsnbmFtZScsICdhZGRQcm9qZWN0LWNvbG91ciddLFxuICAgICAgICBbJ3ZhbHVlJywgJyMxZTFlMWUnXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFByb2plY3RDb2xvdXJDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaW5wdXQnKShbJ2FkZFByb2plY3QtY29sb3VyJ10pKTtcbiAgICBjb25zdCBhZGRQcm9qZWN0SWNvbnNDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydhZGRQcm9qZWN0SWNvbnMtY29udGFpbmVyJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShhZGRQcm9qZWN0Rm9ybSkoYWRkUHJvamVjdEljb25zQ29udGFpbmVyKTtcbiAgICBjb25zdCBidHRuQ2FuY2VsUHJvamVjdCA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdidXR0b24nKShbJ2J0dG4nLCAnYnR0bi1jYW5jZWxQcm9qZWN0J10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnQ2FuY2VsJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdjbGljaycpKGhhbmRsZVByb2plY3RDbG9zZUljb25DbGlja18xLmhhbmRsZVByb2plY3RDbG9zZUljb25DbGljayksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsndHlwZScsICdidXR0b24nXSxcbiAgICAgICAgWyduYW1lJywgJ2J0dG4tY2FuY2VsJ10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShhZGRQcm9qZWN0SWNvbnNDb250YWluZXIpKShidHRuQ2FuY2VsUHJvamVjdCk7XG4gICAgY29uc3QgYnR0bkFkZFByb2plY3QgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnYnV0dG9uJykoWydidHRuJywgJ2J0dG4tYWRkUHJvamVjdCddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ0FkZCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ3R5cGUnLCAnc3VibWl0J10sXG4gICAgICAgIFsnbmFtZScsICdidHRuLWFkZFByb2plY3QnXSxcbiAgICAgICAgWydmb3JtJywgJ2Zvcm0tYWRkUHJvamVjdCddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkUHJvamVjdEljb25zQ29udGFpbmVyKSkoYnR0bkFkZFByb2plY3QpO1xufTtcbmV4cG9ydHMucHJvamVjdE1vZGFsID0gcHJvamVjdE1vZGFsO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvZG9Nb2RhbCA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgaGFuZGxlSW52YWxpZFRvZG9OYW1lXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlSW52YWxpZFRvZG9OYW1lXCIpO1xuY29uc3QgaGFuZGxlVG9kb0Nsb3NlSWNvbkNsaWNrXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlVG9kb0Nsb3NlSWNvbkNsaWNrXCIpO1xuY29uc3QgaGFuZGxlVG9kb0Zvcm1TdWJtaXRfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVUb2RvRm9ybVN1Ym1pdFwiKTtcbmNvbnN0IGhhbmRsZVRvZG9OYW1lVmFsaWRhdGlvbl8xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZVRvZG9OYW1lVmFsaWRhdGlvblwiKTtcbmNvbnN0IHRvZG9Nb2RhbCA9IGZ1bmN0aW9uIChwcm9qZWN0RGF0YU5hbWVfLCBwcm9qZWN0RGF0YUNvbG91cl8pIHtcbiAgICBjb25zdCByb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jvb3QnKTtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IHRvZG9Db250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWyd0b2RvLWNvbnRhaW5lciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocm9vdCkodG9kb0NvbnRhaW5lcik7XG4gICAgY29uc3QgdG9kb0Zvcm0gPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZm9ybScpKFsnZm9ybScsICdmb3JtLWFkZFRvZG8nXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnc3VibWl0JykoaGFuZGxlVG9kb0Zvcm1TdWJtaXRfMS5oYW5kbGVUb2RvRm9ybVN1Ym1pdCksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnYWN0aW9uJywgJyMnXSxcbiAgICAgICAgWydtZXRob2QnLCAncG9zdCddLFxuICAgICAgICBbJ2lkJywgJ2Zvcm0tYWRkVG9kbyddLFxuICAgICAgICBbJ25hbWUnLCAnZm9ybS1hZGRUb2RvJ10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KSh0b2RvQ29udGFpbmVyKSkodG9kb0Zvcm0pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnQWRkIHRhc2sgdG9kbycpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9kb0Zvcm0pKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaDMnKShbJ2hlYWRpbmctdGV4dCcsICd0ZXh0LWFkZFRvZG8nXSkpO1xuICAgIGNvbnN0IGFkZFRvZG9OYW1lQ29udGFpbmVyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnYWRkVG9kby1uYW1lLWNvbnRhaW5lciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9kb0Zvcm0pKGFkZFRvZG9OYW1lQ29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydmb3InLCAnYWRkVG9kby1uYW1lJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnTmFtZScpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkVG9kb05hbWVDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnbGFiZWwnKShbJ2xhYmVsLW5hbWUnXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2lucHV0JykoaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uXzEuaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2ludmFsaWQnKShoYW5kbGVJbnZhbGlkVG9kb05hbWVfMS5oYW5kbGVJbnZhbGlkVG9kb05hbWUpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ3R5cGUnLCAndGV4dCddLFxuICAgICAgICBbJ2Zvcm0nLCAnZm9ybS1hZGRUb2RvJ10sXG4gICAgICAgIFsnaWQnLCAnYWRkVG9kby1uYW1lJ10sXG4gICAgICAgIFsnbmFtZScsICdhZGRUb2RvLW5hbWUnXSxcbiAgICAgICAgWydtaW5sZW5ndGgnLCAnMiddLFxuICAgICAgICBbJ21heGxlbmd0aCcsICczMSddLFxuICAgICAgICBbJ3BhdHRlcm4nLCAnW0EtWmEtejAtOV0rJ10sXG4gICAgICAgIFsncGxhY2Vob2xkZXInLCAnRW50ZXIgbmFtZSBmb3IgdGFzayB0b2RvJ10sXG4gICAgICAgIFsncmVxdWlyZWQnLCAnJ10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShhZGRUb2RvTmFtZUNvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdpbnB1dCcpKFsnYWRkVG9kby1uYW1lJ10pKTtcbiAgICBjb25zdCBhZGRUb2RvRGVzY0NvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2FkZFRvZG8tZGVzYy1jb250YWluZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZG9Gb3JtKShhZGRUb2RvRGVzY0NvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1snZm9yJywgJ2FkZFRvZG8tZGVzY3JpcHRpb24nXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdEZXNjcmlwdGlvbicpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkVG9kb0Rlc2NDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnbGFiZWwnKShbJ2xhYmVsLWRlc2NyaXB0aW9uJ10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnaWQnLCAnYWRkVG9kby1kZXNjcmlwdGlvbiddLFxuICAgICAgICBbJ2F1dG9jb21wbGV0ZScsICdvbiddLFxuICAgICAgICBbJ2Zvcm0nLCAnZm9ybS1hZGRUb2RvJ10sXG4gICAgICAgIFsnbWF4bGVuZ3RoJywgJzI1MCddLFxuICAgICAgICBbJ25hbWUnLCAnYWRkVG9kby1kZXNjcmlwdGlvbiddLFxuICAgICAgICBbJ3NwZWxsY2hlY2snLCAndHJ1ZSddLFxuICAgICAgICBbJ3dyYXAnLCAnaGFyZCddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkVG9kb0Rlc2NDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgndGV4dGFyZWEnKShbJ2FkZFRvZG8tZGVzY3JpcHRpb24nXSkpO1xuICAgIGNvbnN0IGFkZFRvZG9EYXRlQ29udGFpbmVyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnYWRkVG9kby1kYXRlLWNvbnRhaW5lciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9kb0Zvcm0pKGFkZFRvZG9EYXRlQ29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ0R1ZSBkYXRlJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydmb3InLCAnYWRkVG9kby1kdWVEYXRlJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFRvZG9EYXRlQ29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2xhYmVsJykoWydsYWJlbC1kdWVEYXRlJ10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsndHlwZScsICdkYXRlJ10sXG4gICAgICAgIFsnaWQnLCAnYWRkVG9kby1kdWVEYXRlJ10sXG4gICAgICAgIFtcbiAgICAgICAgICAgICdtaW4nLFxuICAgICAgICAgICAgYCR7bm93LmdldEZ1bGxZZWFyKCl9LSR7bm93LmdldE1vbnRoKCkgPCAxMCA/ICcwJyArIChub3cuZ2V0TW9udGgoKSArIDEpIDogbm93LmdldE1vbnRoKCkgKyAxfS0ke25vdy5nZXREYXRlKCkgPCAxMCA/ICcwJyArIG5vdy5nZXREYXRlKCkgOiBub3cuZ2V0RGF0ZSgpfWAsXG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICAgICdtYXgnLFxuICAgICAgICAgICAgYCR7bm93LmdldEZ1bGxZZWFyKCkgKyAxMDB9LSR7bm93LmdldE1vbnRoKCkgPCAxMCA/ICcwJyArIChub3cuZ2V0TW9udGgoKSArIDEpIDogbm93LmdldE1vbnRoKCkgKyAxfS0ke25vdy5nZXREYXRlKCkgPCAxMCA/ICcwJyArIG5vdy5nZXREYXRlKCkgOiBub3cuZ2V0RGF0ZSgpfWAsXG4gICAgICAgIF0sXG4gICAgICAgIFsnbmFtZScsICdhZGRUb2RvLWR1ZURhdGUnXSxcbiAgICAgICAgWydwbGFjZWhvbGRlcicsICd5eXl5LW1tLWRkJ10sXG4gICAgICAgIFsncGF0dGVybicsICcoMFsxLTldfDFbMC05XXwyWzAtOV18M1swMV0pLSgwWzEtOV18MVswMTJdKS1bMC05XXs0fSddLFxuICAgICAgICBbJ3JlcXVpcmVkJywgJyddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkVG9kb0RhdGVDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaW5wdXQnKShbJ2FkZFRvZG8tZHVlRGF0ZSddKSk7XG4gICAgY29uc3QgYWRkVG9kb1ByaW9yaXR5Q29udGFpbmVyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnYWRkVG9kby1wcmlvcml0eS1jb250YWluZXInXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZG9Gb3JtKShhZGRUb2RvUHJpb3JpdHlDb250YWluZXIpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnUHJpb3JpdHkgbGV2ZWwnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ2ZvcicsICdhZGRUb2RvLXNlbGVjdFByaW9yaXR5J11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFRvZG9Qcmlvcml0eUNvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdsYWJlbCcpKFsnbGFiZWwtc2VsZWN0UHJpb3JpdHknXSkpO1xuICAgIGNvbnN0IHNlbGVjdFByaW9yaXR5ID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ3NlbGVjdCcpKFsnYWRkVG9kby1zZWxlY3RQcmlvcml0eSddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnbmFtZScsICdhZGRUb2RvLXNlbGVjdFByaW9yaXR5J10sXG4gICAgICAgIFsnaWQnLCAnYWRkVG9kby1zZWxlY3RQcmlvcml0eSddLFxuICAgICAgICBbJ2Zvcm0nLCAnZm9ybS1hZGRUb2RvJ10sXG4gICAgICAgIFsndGl0bGUnLCAnYWRkVG9kby1zZWxlY3RQcmlvcml0eSddLFxuICAgICAgICBbJ3JlcXVpcmVkJywgJyddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYWRkVG9kb1ByaW9yaXR5Q29udGFpbmVyKSkoc2VsZWN0UHJpb3JpdHkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnLS1QbGVhc2UgYXNzaWduIGEgcHJpb3JpdHktLScpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1sndmFsdWUnLCAnJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNlbGVjdFByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWyd2YWx1ZScsICdsb3cnXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdMb3cnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNlbGVjdFByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWyd2YWx1ZScsICdtZWRpdW0nXV0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdNZWRpdW0nKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNlbGVjdFByaW9yaXR5KSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ29wdGlvbicpKFsnb3B0aW9uLXNlbGVjdFByaW9yaXR5J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWyd2YWx1ZScsICdoaWdoJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnSGlnaCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2VsZWN0UHJpb3JpdHkpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnb3B0aW9uJykoWydvcHRpb24tc2VsZWN0UHJpb3JpdHknXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJ3VyZ2VudCddXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ1VyZ2VudCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2VsZWN0UHJpb3JpdHkpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnb3B0aW9uJykoWydvcHRpb24tc2VsZWN0UHJpb3JpdHknXSkpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtbJ3ZhbHVlJywgJ2ltbWVkaWF0ZSddXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ0ltbWVkaWF0ZScpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2VsZWN0UHJpb3JpdHkpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnb3B0aW9uJykoWydvcHRpb24tc2VsZWN0UHJpb3JpdHknXSkpO1xuICAgIC8vaGlkZGVuIGVsZW1lbnQgdG8gZnVubmVsIHByb2plY3QgbmFtZSB0byB0b2RvZm9ybVxuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRBdHRyaWJ1dGVUb0VsZW0pKFtcbiAgICAgICAgWydoaWRkZW4nLCAnJ10sXG4gICAgICAgIFsndmFsdWUnLCBgJHtwcm9qZWN0RGF0YU5hbWVffWBdLFxuICAgICAgICBbJ25hbWUnLCAnYWRkVG9kby1wcm9qZWN0TmFtZSddLFxuICAgICAgICBbJ3R5cGUnLCAndGV4dCddLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9kb0Zvcm0pKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaW5wdXQnKShbJ2FkZFRvZG8tcHJvamVjdE5hbWVfX2hpZGRlbiddKSk7XG4gICAgLy9oaWRkZW4gZWxlbWVudCB0byBmdW5uZWwgcHJvamVjdCBjb2xvdXIgdG8gdG9kb2Zvcm1cbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsnaGlkZGVuJywgJyddLFxuICAgICAgICBbJ3ZhbHVlJywgYCR7cHJvamVjdERhdGFDb2xvdXJffWBdLFxuICAgICAgICBbJ25hbWUnLCAnYWRkVG9kby1wcm9qZWN0Q29sb3VyJ10sXG4gICAgICAgIFsndHlwZScsICd0ZXh0J10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KSh0b2RvRm9ybSkpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdpbnB1dCcpKFsnYWRkVG9kby1wcm9qZWN0Q29sb3VyX19oaWRkZW4nXSkpO1xuICAgIGNvbnN0IGFkZFRvZG9JY29uc0NvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ2FkZFRvZG8taWNvbnMtY29udGFpbmVyJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KSh0b2RvRm9ybSkoYWRkVG9kb0ljb25zQ29udGFpbmVyKTtcbiAgICBjb25zdCBidHRuQ2FuY2VsVG9kbyA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdidXR0b24nKShbJ2J0dG4nLCAnYnR0bi1jYW5jZWxUb2RvJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnQ2FuY2VsJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdjbGljaycpKGhhbmRsZVRvZG9DbG9zZUljb25DbGlja18xLmhhbmRsZVRvZG9DbG9zZUljb25DbGljayksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsndHlwZScsICdjbGljayddLFxuICAgICAgICBbJ25hbWUnLCAnYnR0bi1jYW5jZWxUb2RvJ10sXG4gICAgICAgIFsnZm9ybScsICdmb3JtLWFkZFRvZG8nXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGFkZFRvZG9JY29uc0NvbnRhaW5lcikpKGJ0dG5DYW5jZWxUb2RvKTtcbiAgICBjb25zdCBidHRuQWRkVG9kbyA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdidXR0b24nKShbJ2J0dG4nLCAnYnR0bi1hZGRUb2RvJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnQWRkJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbXG4gICAgICAgIFsndHlwZScsICdzdWJtaXQnXSxcbiAgICAgICAgWyduYW1lJywgJ2J0dG4tYWRkVG9kbyddLFxuICAgICAgICBbJ2Zvcm0nLCAnZm9ybS1hZGRUb2RvJ10sXG4gICAgXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShhZGRUb2RvSWNvbnNDb250YWluZXIpKShidHRuQWRkVG9kbyk7XG59O1xuZXhwb3J0cy50b2RvTW9kYWwgPSB0b2RvTW9kYWw7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWRkUHJvamVjdFRvU2lkZWJhciA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgaGFuZGxlQWRkTmV3VG9kb0ljb25DbGlja18xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZUFkZE5ld1RvZG9JY29uQ2xpY2tcIik7XG5jb25zdCBoYW5kbGVDcmVhdGVkVGFic0NsaWNrXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlQ3JlYXRlZFRhYnNDbGlja1wiKTtcbmNvbnN0IGFkZFByb2plY3RUb1NpZGViYXIgPSBmdW5jdGlvbiAoZm9ybU5hbWVfLCBmb3JtQ29sb3VyXykge1xuICAgIGNvbnN0IHByb2plY3RzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lci1wcm9qZWN0cycpO1xuICAgIGNvbnN0IHByb2plY3RDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydzaWRlYmFyLXByb2plY3QnLCAncHJvamVjdCddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocHJvamVjdHNDb250YWluZXIpKHByb2plY3RDb250YWluZXIpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2NsaWNrJykoaGFuZGxlQ3JlYXRlZFRhYnNDbGlja18xLmhhbmRsZUNyZWF0ZWRUYWJzQ2xpY2spLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ2RhdGEtbmFtZScsIGAke2Zvcm1OYW1lX31gXSxcbiAgICAgICAgWydkYXRhLWNvbG91cicsIGAke2Zvcm1Db2xvdXJffWBdLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFN0eWxlVG9FbGVtKShbWydjb2xvcicsIGAke2Zvcm1Db2xvdXJffWBdXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoYCR7Zm9ybU5hbWVffWApLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocHJvamVjdENvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdoNCcpKFsncHJvamVjdC10ZXh0J10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkU3R5bGVUb0VsZW0pKFtbJ2NvbG9yJywgYCR7Zm9ybUNvbG91cl99YF1dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnKycpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ2RhdGEtbmFtZScsIGAke2Zvcm1OYW1lX31gXSxcbiAgICAgICAgWydkYXRhLWNvbG91cicsIGAke2Zvcm1Db2xvdXJffWBdLFxuICAgIF0pLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnY2xpY2snKShoYW5kbGVBZGROZXdUb2RvSWNvbkNsaWNrXzEuaGFuZGxlQWRkTmV3VG9kb0ljb25DbGljayksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShwcm9qZWN0Q29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2J1dHRvbicpKFsnYnR0bicsICdidHRuLXRvZG9Nb2RhbCddKSk7XG59O1xuZXhwb3J0cy5hZGRQcm9qZWN0VG9TaWRlYmFyID0gYWRkUHJvamVjdFRvU2lkZWJhcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZGRUb2Rvc1RvQ29udGVudCA9IHZvaWQgMDtcbmNvbnN0IGVsZW1lbnRfY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9lbGVtZW50LWNyZWF0b3JzXCIpO1xuY29uc3QgaGFuZGxlVG9kb0NoZWNrYm94Q29tcGxldGVfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVUb2RvQ2hlY2tib3hDb21wbGV0ZVwiKTtcbmNvbnN0IGFkZFRvZG9zVG9Db250ZW50ID0gZnVuY3Rpb24gKHsgcHJvamVjdCwgdG9kb3MgfSwgZGlzYWJsZUNoZWNrYm94ID0gZmFsc2UpIHtcbiAgICBjb25zdCB7IHByb2plY3ROYW1lLCBwcm9qZWN0Q29sb3VyIH0gPSBwcm9qZWN0O1xuICAgIHRvZG9zLmZvckVhY2goKHRvZG8sIGkpID0+IHtcbiAgICAgICAgY29uc3QgeyB0b2RvTmFtZSwgdG9kb0Rlc2NyaXB0aW9uLCB0b2RvRHVlRGF0ZSwgdG9kb1ByaW9yaXR5IH0gPSB0b2Rvc1tpXTtcbiAgICAgICAgY29uc3QgY29udGVudEJvdHRvbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50LWJvdHRvbScpO1xuICAgICAgICBjb25zdCB0b2RvQ29udGVudENvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ3RvZG9Db250ZW50LWNvbnRhaW5lciddKTtcbiAgICAgICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGNvbnRlbnRCb3R0b20pKHRvZG9Db250ZW50Q29udGFpbmVyKTtcbiAgICAgICAgY29uc3QgaGVhZGluZ0NvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ3RvZG9Db250ZW50LWhlYWRpbmctY29udGFpbmVyJ10pO1xuICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkodG9kb0NvbnRlbnRDb250YWluZXIpKGhlYWRpbmdDb250YWluZXIpO1xuICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydkYXRhLWNvbG91cicsIGAke3Byb2plY3RDb2xvdXJ9YF1dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKShgJHtwcm9qZWN0TmFtZX1gKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRTdHlsZVRvRWxlbSkoW1snY29sb3InLCBgJHtwcm9qZWN0Q29sb3VyfWBdXSksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShoZWFkaW5nQ29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2gzJykoWydoZWFkaW5nLXRleHQnLCAndG9kb0NvbnRlbnQtcHJvamVjdE5hbWUnXSkpO1xuICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkQXR0cmlidXRlVG9FbGVtKShbWydmb3InLCAnY29tcGxldGUnXV0pKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnbGFiZWwnKShbJ2xhYmVsJywgJ3RvZG9Db250ZW50LWxhYmVsJ10pKTtcbiAgICAgICAgY29uc3QgY2hlY2tib3ggPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaW5wdXQnKShbJ3RvZG9Db250ZW50LWNoZWNrYm94J10pO1xuICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdjbGljaycpKGhhbmRsZVRvZG9DaGVja2JveENvbXBsZXRlXzEuaGFuZGxlVG9kb0NoZWNrYm94Q29tcGxldGUpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICAgICAgWyd0eXBlJywgJ2NoZWNrYm94J10sXG4gICAgICAgICAgICBbJ2lkJywgJ2NvbXBsZXRlJ10sXG4gICAgICAgICAgICBbJ25hbWUnLCAnY29tcGxldGUnXSxcbiAgICAgICAgICAgIFsndmFsdWUnLCBgJHtwcm9qZWN0Q29sb3VyfWBdLFxuICAgICAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGhlYWRpbmdDb250YWluZXIpKShjaGVja2JveCk7XG4gICAgICAgIC8vdG8gcHJldmVudCBjbGlja2luZyBjaGVja2JveCBhZnRlciBpdCBoYXMgYmVlbiBhcmNoaXZlZFxuICAgICAgICBpZiAoZGlzYWJsZUNoZWNrYm94KSB7XG4gICAgICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1snZGlzYWJsZWQnLCAndHJ1ZSddXSkoY2hlY2tib3gpO1xuICAgICAgICB9XG4gICAgICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKShgJHt0b2RvTmFtZX1gKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZG9Db250ZW50Q29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2g0JykoWyd0b2RvQ29udGVudC1uYW1lJ10pKTtcbiAgICAgICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKGAke3RvZG9EZXNjcmlwdGlvbn1gKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZG9Db250ZW50Q29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ3AnKShbJ3RvZG9Db250ZW50LWRlc2NyaXB0aW9uJ10pKTtcbiAgICAgICAgY29uc3QgZGF0ZUFuZFByaW9yaXR5Q29udGFpbmVyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnZGF0ZUFuZFByaW9yaXR5LWNvbnRhaW5lciddKTtcbiAgICAgICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZG9Db250ZW50Q29udGFpbmVyKShkYXRlQW5kUHJpb3JpdHlDb250YWluZXIpO1xuICAgICAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoYER1ZTogJHt0b2RvRHVlRGF0ZX1gKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKGRhdGVBbmRQcmlvcml0eUNvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdwJykoWyd0b2RvQ29udGVudC1kdWVEYXRlJ10pKTtcbiAgICAgICAgY29uc3QgcHJpb3JpdHlDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydwcmlvcml0eS1jb250YWluZXInXSk7XG4gICAgICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShkYXRlQW5kUHJpb3JpdHlDb250YWluZXIpKHByaW9yaXR5Q29udGFpbmVyKTtcbiAgICAgICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRTdHlsZVRvRWxlbSkoW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJyxcbiAgICAgICAgICAgICAgICBgJHt0b2RvUHJpb3JpdHkgPT09ICdpbW1lZGlhdGUnXG4gICAgICAgICAgICAgICAgICAgID8gJ2hzbCgwLCAxMDAlLCAzNSUpJ1xuICAgICAgICAgICAgICAgICAgICA6IHRvZG9Qcmlvcml0eSA9PT0gJ3VyZ2VudCdcbiAgICAgICAgICAgICAgICAgICAgICAgID8gJ2hzbCg0MCwgMTAwJSwgNjUlKSdcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdG9kb1ByaW9yaXR5ID09PSAnaGlnaCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdoc2woOTAsIDEwMCUsIDUwJSknXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0b2RvUHJpb3JpdHkgPT09ICdtZWRpdW0nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ2hzbCgyMDAsIDEwMCUsIDUwJSknXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ2hzbCgyNTAsIDEwMCUsIDcwJSknfWAsXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKShwcmlvcml0eUNvbnRhaW5lcik7XG4gICAgICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKShgJHt0b2RvUHJpb3JpdHl9YCksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShwcmlvcml0eUNvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdwJykoWyd0b2RvQ29udGVudC1wcmlvcml0eSddKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5hZGRUb2Rvc1RvQ29udGVudCA9IGFkZFRvZG9zVG9Db250ZW50O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFyY2hpdmVFeHBpcmVkVG9kb3MgPSB2b2lkIDA7XG5jb25zdCBhcmNoaXZlRXhwaXJlZFRvZG9zID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYTtcbiAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcmNoaXZlZCcpKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhcmNoaXZlZCcsIEpTT04uc3RyaW5naWZ5KFtdKSk7XG4gICAgfVxuICAgIGNvbnN0IHByb2plY3RBcnIgPSBbXTtcbiAgICBPYmplY3Qua2V5cyhsb2NhbFN0b3JhZ2UpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChrZXkgIT09ICdwcm9qZWN0TmFtZXMnICYmIGtleSAhPT0gJ2FyY2hpdmVkJykge1xuICAgICAgICAgICAgcHJvamVjdEFyci5wdXNoKEpTT04ucGFyc2UoKF9hID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgZGF0ZSA9IG5vdy5nZXREYXRlKCk7XG4gICAgY29uc3QgbW9udGggPSBub3cuZ2V0TW9udGgoKSArIDE7XG4gICAgY29uc3QgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xuICAgIC8vZ3JhYiBwcmV2aW91c2x5IHN0b3JlZCBleHBpcmVkL2FyY2hpdmVkIHByb2plY3RzIGZyb20gbG9jYWxzdG9yYWdlXG4gICAgY29uc3QgZXhwaXJlZFByb2plY3RzQXJyID0gSlNPTi5wYXJzZSgoX2EgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXJjaGl2ZWQnKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpO1xuICAgIGNvbnN0IHRvZG9zTm90RXhwaXJlZEFyciA9IFtdO1xuICAgIHByb2plY3RBcnIuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICBwcm9qZWN0LnRvZG9zLmZvckVhY2goKHRvZG8pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRlbXBBcnIgPSB0b2RvLnRvZG9EdWVEYXRlLnNwbGl0KCctJyk7XG4gICAgICAgICAgICBjb25zdCB0b2RvWWVhciA9IE51bWJlcih0ZW1wQXJyWzBdKTtcbiAgICAgICAgICAgIGNvbnN0IHRvZG9Nb250aCA9IE51bWJlcih0ZW1wQXJyWzFdKTtcbiAgICAgICAgICAgIGNvbnN0IHRvZG9EYXRlID0gTnVtYmVyKHRlbXBBcnJbMl0pO1xuICAgICAgICAgICAgLy9ncmFiIGVhY2ggdG9kbyB3aXRoIGR1ZURhdGUgZWFybGllciB0aGFuIHRvZGF5IGFuZCBzdG9yZSBjb3JyZXNwb25kaW5nIHByb2plY3QgaW50byB0ZW1wIG9iamVjdCBhbmQgc3RvcmUgaW4gZXhwaXJlZFByb2plY3RzQXJyXG4gICAgICAgICAgICBpZiAodG9kb0RhdGUgPCBkYXRlIHx8IHRvZG9Nb250aCA8IG1vbnRoIHx8IHRvZG9ZZWFyIDwgeWVhcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXAgPSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3ROYW1lOiBwcm9qZWN0LnByb2plY3QucHJvamVjdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0Q29sb3VyOiBwcm9qZWN0LnByb2plY3QucHJvamVjdENvbG91cixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG9kb3M6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvTmFtZTogdG9kby50b2RvTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRGVzY3JpcHRpb246IHRvZG8udG9kb0Rlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EdWVEYXRlOiB0b2RvLnRvZG9EdWVEYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogdG9kby50b2RvUHJpb3JpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZXhwaXJlZFByb2plY3RzQXJyLnB1c2godGVtcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL2dyYWIgcHJvamVjdHMgYW5kIHRvZG9zIHRoYXQgYXJlIG5vdCBleHBpcmVkIGFuZCBzdG9yZSB0aGVtIGludG8gLi4uQXJyXG4gICAgICAgICAgICAgICAgY29uc3QgdGVtcCA9IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdE5hbWU6IHByb2plY3QucHJvamVjdC5wcm9qZWN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RDb2xvdXI6IHByb2plY3QucHJvamVjdC5wcm9qZWN0Q29sb3VyLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b2RvczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9OYW1lOiB0b2RvLnRvZG9OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZG9EZXNjcmlwdGlvbjogdG9kby50b2RvRGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb0R1ZURhdGU6IHRvZG8udG9kb0R1ZURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kb1ByaW9yaXR5OiB0b2RvLnRvZG9Qcmlvcml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0b2Rvc05vdEV4cGlyZWRBcnIucHVzaCh0ZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy9zdG9yZSBleHBpcmVkIHByb2plY3RzIGFuZCB0b2RvcyB0aGF0IGhhdmUgbmV3IGV4cGlyZWQgdG9kb3MgYWRkZWRcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXJjaGl2ZWQnLCBKU09OLnN0cmluZ2lmeShleHBpcmVkUHJvamVjdHNBcnIpKTtcbiAgICAvL3RoZSB0b2RvcyB0aGF0IHNoYXJlIGEgcHJvamVjdCBuYW1lIGFyZSBjb25zb2xpZGF0ZWQgdW5kZXIgb25lIHByb2plY3RcbiAgICBjb25zdCB1bmV4cGlyZWRQcm9qZWN0c01hcCA9IHRvZG9zTm90RXhwaXJlZEFyci5yZWR1Y2UoKGFjYywgY3VycikgPT4ge1xuICAgICAgICBpZiAoIWFjYy5oYXMoY3Vyci5wcm9qZWN0LnByb2plY3ROYW1lKSkge1xuICAgICAgICAgICAgYWNjLnNldChjdXJyLnByb2plY3QucHJvamVjdE5hbWUsIGN1cnIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdGVtcCA9IGFjYy5nZXQoY3Vyci5wcm9qZWN0LnByb2plY3ROYW1lKTtcbiAgICAgICAgICAgIHRlbXAgPT09IG51bGwgfHwgdGVtcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGVtcC50b2Rvcy5wdXNoKGN1cnIudG9kb3NbMF0pO1xuICAgICAgICAgICAgYWNjLnNldChjdXJyLnByb2plY3QucHJvamVjdE5hbWUsIHRlbXApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbmV3IE1hcCgpKTtcbiAgICAvL3N0b3JlIG1vZGlmaWVkIHByb2plY3RzIHdpdGhvdXQgdGhlIGV4cGlyZWQgdG9kb3MgYmFjayBpbnRvIGxvY2Fsc3RvcmFnZVxuICAgIHVuZXhwaXJlZFByb2plY3RzTWFwLmZvckVhY2goKHByb2osIHByb2pOYW1lKSA9PiB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHByb2pOYW1lLCBKU09OLnN0cmluZ2lmeShwcm9qKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5hcmNoaXZlRXhwaXJlZFRvZG9zID0gYXJjaGl2ZUV4cGlyZWRUb2RvcztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wcm9qZWN0c0FuZFRvZG9zT25sb2FkID0gdm9pZCAwO1xuY29uc3QgYWRkUHJvamVjdFRvU2lkZWJhcl8xID0gcmVxdWlyZShcIi4vYWRkUHJvamVjdFRvU2lkZWJhclwiKTtcbmNvbnN0IGFkZFRvZG9zVG9Db250ZW50XzEgPSByZXF1aXJlKFwiLi9hZGRUb2Rvc1RvQ29udGVudFwiKTtcbmNvbnN0IHByb2plY3RzQW5kVG9kb3NPbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHByb2plY3RzID0gW107XG4gICAgT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoa2V5ICE9PSAnU2FtcGxlIFByb2plY3QnICYmIGtleSAhPT0gJ3Byb2plY3ROYW1lcycgJiYga2V5ICE9PSAnYXJjaGl2ZWQnKSB7XG4gICAgICAgICAgICBwcm9qZWN0cy5wdXNoKEpTT04ucGFyc2UoKF9hID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8vcmVuZGVyIHNhbXBsZSB0b2Rvc1xuICAgIGNvbnN0IHNhbXBsZVByb2plY3QgPSBKU09OLnBhcnNlKChfYSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdTYW1wbGUgUHJvamVjdCcpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJyk7XG4gICAgKDAsIGFkZFRvZG9zVG9Db250ZW50XzEuYWRkVG9kb3NUb0NvbnRlbnQpKHNhbXBsZVByb2plY3QpO1xuICAgIC8vcmVuZGVyIHJlc3Qgb2YgcHJvamVjdHMgaW4gc3RvcmFnZVxuICAgIHByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICAgICAgKDAsIGFkZFByb2plY3RUb1NpZGViYXJfMS5hZGRQcm9qZWN0VG9TaWRlYmFyKShwcm9qZWN0LnByb2plY3QucHJvamVjdE5hbWUsIHByb2plY3QucHJvamVjdC5wcm9qZWN0Q29sb3VyKTtcbiAgICAgICAgKDAsIGFkZFRvZG9zVG9Db250ZW50XzEuYWRkVG9kb3NUb0NvbnRlbnQpKHByb2plY3QpO1xuICAgIH0pO1xufTtcbmV4cG9ydHMucHJvamVjdHNBbmRUb2Rvc09ubG9hZCA9IHByb2plY3RzQW5kVG9kb3NPbmxvYWQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsID0gdm9pZCAwO1xuY29uc3Qgc3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsID0gZnVuY3Rpb24gKHByb2plY3RBbmRUb2Rvc18pIHtcbiAgICB2YXIgX2E7XG4gICAgbGV0IHRvZG9FeGlzdHNGbGFnID0gZmFsc2U7XG4gICAgY29uc3QgY3VycmVudFByb2pOYW1lID0gcHJvamVjdEFuZFRvZG9zXy5wcm9qZWN0LnByb2plY3ROYW1lO1xuICAgIGNvbnN0IGN1cnJlbnRUb2RvTmFtZSA9IHByb2plY3RBbmRUb2Rvc18udG9kb3NbMF0udG9kb05hbWU7XG4gICAgY29uc3QgY3VycmVudFRvZG9zID0gcHJvamVjdEFuZFRvZG9zXy50b2Rvc1swXTtcbiAgICBjb25zdCBzdG9yYWdlS2V5cyA9IG5ldyBTZXQoKTtcbiAgICBPYmplY3Qua2V5cyhsb2NhbFN0b3JhZ2UpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBzdG9yYWdlS2V5cy5hZGQoa2V5KTtcbiAgICB9KTtcbiAgICAvL25ldyBwcm9qZWN0XG4gICAgaWYgKCFzdG9yYWdlS2V5cy5oYXMoY3VycmVudFByb2pOYW1lKSkge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShjdXJyZW50UHJvak5hbWUsIEpTT04uc3RyaW5naWZ5KHByb2plY3RBbmRUb2Rvc18pKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vcHJvamVjdCBhbHJlYWR5IGV4aXN0c1xuICAgICAgICBjb25zdCBjdXJyZW50UHJvalN0b3JhZ2UgPSBKU09OLnBhcnNlKChfYSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGN1cnJlbnRQcm9qTmFtZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnKTtcbiAgICAgICAgY29uc3QgdG9kb05hbWVzU2V0ID0gbmV3IFNldCgpO1xuICAgICAgICBjdXJyZW50UHJvalN0b3JhZ2UudG9kb3MuZm9yRWFjaCgodG9kbykgPT4gdG9kb05hbWVzU2V0LmFkZCh0b2RvLnRvZG9OYW1lKSk7XG4gICAgICAgIC8vbmV3IHRvZG9OYW1lXG4gICAgICAgIGlmICghdG9kb05hbWVzU2V0LmhhcyhjdXJyZW50VG9kb05hbWUpKSB7XG4gICAgICAgICAgICBjdXJyZW50UHJvalN0b3JhZ2UudG9kb3MucHVzaChjdXJyZW50VG9kb3MpO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oY3VycmVudFByb2pOYW1lLCBKU09OLnN0cmluZ2lmeShjdXJyZW50UHJvalN0b3JhZ2UpKTtcbiAgICAgICAgICAgIHRvZG9FeGlzdHNGbGFnID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gdG9kb0V4aXN0c0ZsYWc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvL3RvZG9OYW1lIHRha2VuXG4gICAgICAgICAgICBhbGVydChgJHtjdXJyZW50VG9kb05hbWV9IGFscmVhZHkgZXhpc3RzIGFzIGEgdG9kbyAo772h4oCizIHvuL/igKLMgO+9oSkgIFBsZWFzZSBjaG9vc2UgYW5vdGhlciBuYW1lLmApO1xuICAgICAgICAgICAgdG9kb0V4aXN0c0ZsYWcgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIHRvZG9FeGlzdHNGbGFnO1xuICAgICAgICB9XG4gICAgfVxufTtcbmV4cG9ydHMuc3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsID0gc3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN0b3JlU2FtcGxlUHJvamVjdCA9IHZvaWQgMDtcbmNvbnN0IHN0b3JlU2FtcGxlUHJvamVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIC8vcmV0dXJucyBkYXRlIG9uZSB5ZWFyIGZyb20gY3VycmVudFxuICAgIGNvbnN0IHNhbXBsZUxvd0R1ZURhdGUgPSAobm93KSA9PiB7XG4gICAgICAgIGxldCBkYXkgPSBub3cuZ2V0RGF0ZSgpO1xuICAgICAgICBsZXQgbW9udGggPSBub3cuZ2V0TW9udGgoKSArIDE7XG4gICAgICAgIGNvbnN0IHllYXIgPSBub3cuZ2V0RnVsbFllYXIoKSArIDE7XG4gICAgICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRoIDwgMTAgPyAnMCcgKyBtb250aCA6IG1vbnRofS0ke2RheSA8IDEwID8gJzAnICsgZGF5IDogZGF5fWA7XG4gICAgfTtcbiAgICAvL3JldHVybnMgZGF0ZSBvbmUgbW9udGggZnJvbSBjdXJyZW50XG4gICAgY29uc3Qgc2FtcGxlTWVkRHVlRGF0ZSA9IChub3cpID0+IHtcbiAgICAgICAgbGV0IG1vbnRoID0gbm93LmdldE1vbnRoKCk7XG4gICAgICAgIG1vbnRoID0gbW9udGggPD0gMTAgPyBtb250aCArIDEgOiBtb250aDtcbiAgICAgICAgbW9udGggPSBtb250aCArIDE7XG4gICAgICAgIHJldHVybiBgJHtub3cuZ2V0RnVsbFllYXIoKX0tJHttb250aCA8IDEwID8gJzAnICsgbW9udGggOiBtb250aH0tJHtub3cuZ2V0RGF0ZSgpIDwgMTAgPyAnMCcgKyBub3cuZ2V0RGF0ZSgpIDogbm93LmdldERhdGUoKX1gO1xuICAgIH07XG4gICAgLy9yZXR1cm5zIGRhdGUgb25lIGRheSBmcm9tIGN1cnJlbnRcbiAgICBjb25zdCBzYW1wbGVVcmdlbnREdWVEYXRlID0gKG5vdykgPT4ge1xuICAgICAgICBsZXQgZGF5ID0gbm93LmdldERhdGUoKTtcbiAgICAgICAgZGF5ID0gZGF5IDw9IDI2ID8gZGF5ICsgMiA6IGRheTtcbiAgICAgICAgbGV0IG1vbnRoID0gbm93LmdldE1vbnRoKCkgKyAxO1xuICAgICAgICByZXR1cm4gYCR7bm93LmdldEZ1bGxZZWFyKCl9LSR7bW9udGggPCAxMCA/ICcwJyArIG1vbnRoIDogbW9udGh9LSR7ZGF5IDwgMTAgPyAnMCcgKyBkYXkgOiBkYXl9YDtcbiAgICB9O1xuICAgIGNvbnN0IHNhbXBsZVByb2plY3QgPSB7XG4gICAgICAgIHByb2plY3Q6IFxuICAgICAgICAvL3NhbXBsZSBwcm9qZWN0IHRvIGRpc3BsYXkgaW5pdGlhbGx5XG4gICAgICAgIHsgcHJvamVjdE5hbWU6ICdTYW1wbGUgUHJvamVjdCcsIHByb2plY3RDb2xvdXI6ICcjNDhkMWNjJyB9LFxuICAgICAgICB0b2RvczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRvZG9OYW1lOiBgRmluaXNoICdUaGUgRmFkZWQgU3VuOiBLZXNyaXRoJ2AsXG4gICAgICAgICAgICAgICAgdG9kb0Rlc2NyaXB0aW9uOiBgRmluaXNoIHJlYWRpbmcgdGhlIGJvb2sgLSByZXR1cm4gJHtub3cuZ2V0RGF0ZSgpID4gMjYgPyAndG9kYXknIDogJ2RheSBhZnRlciB0b21vcnJvdyd9IWAsXG4gICAgICAgICAgICAgICAgdG9kb0R1ZURhdGU6IGAke3NhbXBsZVVyZ2VudER1ZURhdGUobm93KX1gLFxuICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogJ3VyZ2VudCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRvZG9OYW1lOiAnVmV0IEFwcG9pbnRtZW50JyxcbiAgICAgICAgICAgICAgICB0b2RvRGVzY3JpcHRpb246ICdUYWtlIE5pZ2h0ZXllcyB0byB0aGUgdmV0IGZvciByb3V0aW5lIGNoZWNrdXAnLFxuICAgICAgICAgICAgICAgIHRvZG9EdWVEYXRlOiBgJHtzYW1wbGVNZWREdWVEYXRlKG5vdyl9YCxcbiAgICAgICAgICAgICAgICB0b2RvUHJpb3JpdHk6ICdtZWRpdW0nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0b2RvTmFtZTogJ0JhY2twYWNraW5nIHRyaXAgdG8gTmVwYWwnLFxuICAgICAgICAgICAgICAgIHRvZG9EZXNjcmlwdGlvbjogJ1BsYW4gcm91dGUsIHN1cHBsaWVzIGFuZCBhcHBseSBmb3IgdmlzYScsXG4gICAgICAgICAgICAgICAgdG9kb0R1ZURhdGU6IGAke3NhbXBsZUxvd0R1ZURhdGUobm93KX1gLFxuICAgICAgICAgICAgICAgIHRvZG9Qcmlvcml0eTogJ2xvdycsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgIH07XG4gICAgLy9vbiBmaXJzdCBsb2FkIG9ubHlcbiAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKHNhbXBsZVByb2plY3QucHJvamVjdC5wcm9qZWN0TmFtZSkpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oc2FtcGxlUHJvamVjdC5wcm9qZWN0LnByb2plY3ROYW1lLCBKU09OLnN0cmluZ2lmeShzYW1wbGVQcm9qZWN0KSk7XG4gICAgfVxufTtcbmV4cG9ydHMuc3RvcmVTYW1wbGVQcm9qZWN0ID0gc3RvcmVTYW1wbGVQcm9qZWN0O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNpZGViYXIgPSB2b2lkIDA7XG5jb25zdCBlbGVtZW50X2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi4vZWxlbWVudC1jcmVhdG9yc1wiKTtcbmNvbnN0IGhhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2tfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVBZGROZXdQcm9qZWN0SWNvbkNsaWNrXCIpO1xuY29uc3QgaGFuZGxlQWRkTmV3VG9kb0ljb25DbGlja18xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZUFkZE5ld1RvZG9JY29uQ2xpY2tcIik7XG5jb25zdCBoYW5kbGVBcmNoaXZlZFRhYkNsaWNrXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlQXJjaGl2ZWRUYWJDbGlja1wiKTtcbmNvbnN0IGhhbmRsZVVwY29taW5nVGFiQ2xpY2tfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVVcGNvbWluZ1RhYkNsaWNrXCIpO1xuY29uc3QgaGFuZGxlVG9kYXlUYWJDbGlja18xID0gcmVxdWlyZShcIi4uL2V2ZW50Q0JzL2hhbmRsZVRvZGF5VGFiQ2xpY2tcIik7XG5jb25zdCBoYW5kbGVQcm9qZWN0c1RhYkNsaWNrXzEgPSByZXF1aXJlKFwiLi4vZXZlbnRDQnMvaGFuZGxlUHJvamVjdHNUYWJDbGlja1wiKTtcbmNvbnN0IGhhbmRsZUNyZWF0ZWRUYWJzQ2xpY2tfMSA9IHJlcXVpcmUoXCIuLi9ldmVudENCcy9oYW5kbGVDcmVhdGVkVGFic0NsaWNrXCIpO1xuY29uc3Qgc2lkZWJhciA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCByb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jvb3QnKTtcbiAgICBjb25zdCBzaWRlYmFyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnc2lkZWJhciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocm9vdCkoc2lkZWJhcik7XG4gICAgY29uc3QgdG9kYXlDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydzaWRlYmFyLXRhYicsICdjb250YWluZXItdG9kYXknXSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2NsaWNrJykoaGFuZGxlVG9kYXlUYWJDbGlja18xLmhhbmRsZVRvZGF5VGFiQ2xpY2spKHRvZGF5Q29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2lkZWJhcikodG9kYXlDb250YWluZXIpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEucGlwZSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnVG9kYXknKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHRvZGF5Q29udGFpbmVyKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2g0JykoWyd0YWItdGV4dCcsICd0b2RheS10YWInXSkpO1xuICAgIGNvbnN0IHVwY29taW5nQ29udGFpbmVyID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsnc2lkZWJhci10YWInLCAnY29udGFpbmVyLXVwY29taW5nJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkRXZ0TGlzdGVuZXIpKCdjbGljaycpKGhhbmRsZVVwY29taW5nVGFiQ2xpY2tfMS5oYW5kbGVVcGNvbWluZ1RhYkNsaWNrKSh1cGNvbWluZ0NvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hcHBlbmRFbGVtVG9QYXJlbnQpKHNpZGViYXIpKHVwY29taW5nQ29udGFpbmVyKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ1VwY29taW5nJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KSh1cGNvbWluZ0NvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdoNCcpKFsndGFiLXRleHQnLCAndGFiLXVwY29taW5nJ10pKTtcbiAgICBjb25zdCBhcmNoaXZlZENvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ3NpZGViYXItdGFiJywgJ2NvbnRhaW5lci1hcmNoaXZlZCddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnY2xpY2snKShoYW5kbGVBcmNoaXZlZFRhYkNsaWNrXzEuaGFuZGxlQXJjaGl2ZWRUYWJDbGljaykoYXJjaGl2ZWRDb250YWluZXIpO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShzaWRlYmFyKShhcmNoaXZlZENvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdBcmNoaXZlZCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoYXJjaGl2ZWRDb250YWluZXIpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaDQnKShbJ3RhYi10ZXh0JywgJ3RhYi1hcmNoaXZlZCddKSk7XG4gICAgY29uc3QgcHJvamVjdHNDb250YWluZXIgPSAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnZGl2JykoWydzaWRlYmFyLWhlYWRpbmcnLCAnY29udGFpbmVyLXByb2plY3RzJ10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShzaWRlYmFyKShwcm9qZWN0c0NvbnRhaW5lcik7XG4gICAgY29uc3QgcHJvamVjdHNIZWFkaW5nID0gKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2RpdicpKFsncHJvamVjdEhlYWRpbmctd3JhcHBlciddKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocHJvamVjdHNDb250YWluZXIpKHByb2plY3RzSGVhZGluZyk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEV2dExpc3RlbmVyKSgnY2xpY2snKShoYW5kbGVQcm9qZWN0c1RhYkNsaWNrXzEuaGFuZGxlUHJvamVjdHNUYWJDbGljayksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJ1Byb2plY3RzJyksICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShwcm9qZWN0c0hlYWRpbmcpKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmVsZW1DcmVhdG9yKSgnaDMnKShbJ2hlYWRpbmctdGV4dCcsICd0ZXh0LXByb2plY3RzJ10pKTtcbiAgICAoMCwgZWxlbWVudF9jcmVhdG9yc18xLnBpcGUpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYWRkVGV4dFRvRWxlbSkoJysnKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2NsaWNrJykoaGFuZGxlQWRkTmV3UHJvamVjdEljb25DbGlja18xLmhhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2spLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkocHJvamVjdHNIZWFkaW5nKSkoKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5lbGVtQ3JlYXRvcikoJ2J1dHRvbicpKFsnYnR0bicsICdidHRuLXByb2plY3RNb2RhbCddKSk7XG4gICAgY29uc3Qgc2FtcGxlUHJvamVjdENvbnRhaW5lciA9ICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdkaXYnKShbJ3NpZGViYXItcHJvamVjdCcsICdwcm9qZWN0J10pO1xuICAgICgwLCBlbGVtZW50X2NyZWF0b3JzXzEuYXBwZW5kRWxlbVRvUGFyZW50KShwcm9qZWN0c0NvbnRhaW5lcikoc2FtcGxlUHJvamVjdENvbnRhaW5lcik7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFN0eWxlVG9FbGVtKShbWydjb2xvcicsICcjNDhkMWNjJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2NsaWNrJykoaGFuZGxlQ3JlYXRlZFRhYnNDbGlja18xLmhhbmRsZUNyZWF0ZWRUYWJzQ2xpY2spLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFRleHRUb0VsZW0pKCdTYW1wbGUgUHJvamVjdCcpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2FtcGxlUHJvamVjdENvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdoNCcpKFsncHJvamVjdC10ZXh0JywgJ3RleHQtc2FtcGxlUHJvamVjdCddKSk7XG4gICAgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5waXBlKSgoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZFN0eWxlVG9FbGVtKShbWydjb2xvcicsICcjNDhkMWNjJ11dKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRUZXh0VG9FbGVtKSgnKycpLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFkZEF0dHJpYnV0ZVRvRWxlbSkoW1xuICAgICAgICBbJ2RhdGEtbmFtZScsIGBTYW1wbGUgUHJvamVjdGBdLFxuICAgICAgICBbJ2RhdGEtY29sb3VyJywgJyM0OGQxY2MnXSxcbiAgICBdKSwgKDAsIGVsZW1lbnRfY3JlYXRvcnNfMS5hZGRFdnRMaXN0ZW5lcikoJ2NsaWNrJykoaGFuZGxlQWRkTmV3VG9kb0ljb25DbGlja18xLmhhbmRsZUFkZE5ld1RvZG9JY29uQ2xpY2spLCAoMCwgZWxlbWVudF9jcmVhdG9yc18xLmFwcGVuZEVsZW1Ub1BhcmVudCkoc2FtcGxlUHJvamVjdENvbnRhaW5lcikpKCgwLCBlbGVtZW50X2NyZWF0b3JzXzEuZWxlbUNyZWF0b3IpKCdidXR0b24nKShbJ2J0dG4nLCAnYnR0bi10b2RvTW9kYWwnXSkpO1xufTtcbmV4cG9ydHMuc2lkZWJhciA9IHNpZGViYXI7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5yZXF1aXJlKFwiLi9pbmRleC5jc3NcIik7XG5jb25zdCBjb250ZW50XzEgPSByZXF1aXJlKFwiLi90cy9jb250ZW50L2NvbnRlbnRcIik7XG5jb25zdCBoZWFkZXJfMSA9IHJlcXVpcmUoXCIuL3RzL2hlYWRlci9oZWFkZXJcIik7XG5jb25zdCBzaWRlYmFyXzEgPSByZXF1aXJlKFwiLi90cy9zaWRlYmFyL3NpZGViYXJcIik7XG5jb25zdCBwcm9qZWN0c0FuZFRvZG9zT25sb2FkXzEgPSByZXF1aXJlKFwiLi90cy9wcm9qZWN0c0FuZFRvZG9zL3Byb2plY3RzQW5kVG9kb3NPbmxvYWRcIik7XG5jb25zdCBzdG9yZVNhbXBsZVByb2plY3RfMSA9IHJlcXVpcmUoXCIuL3RzL3Byb2plY3RzQW5kVG9kb3Mvc3RvcmVTYW1wbGVQcm9qZWN0XCIpO1xuY29uc3QgYXJjaGl2ZUV4cGlyZWRUb2Rvc18xID0gcmVxdWlyZShcIi4vdHMvcHJvamVjdHNBbmRUb2Rvcy9hcmNoaXZlRXhwaXJlZFRvZG9zXCIpO1xuY29uc3QgbWFpbkFwcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAoMCwgaGVhZGVyXzEuaGVhZGVyKSgpO1xuICAgICgwLCBzaWRlYmFyXzEuc2lkZWJhcikoKTtcbiAgICAoMCwgY29udGVudF8xLmNvbnRlbnQpKCk7XG4gICAgKDAsIHN0b3JlU2FtcGxlUHJvamVjdF8xLnN0b3JlU2FtcGxlUHJvamVjdCkoKTtcbiAgICAoMCwgYXJjaGl2ZUV4cGlyZWRUb2Rvc18xLmFyY2hpdmVFeHBpcmVkVG9kb3MpKCk7XG4gICAgLy9ydW5zIG9uIGV2ZXJ5IHJlZnJlc2hcbiAgICBzZWxmLm9ubG9hZCA9IHByb2plY3RzQW5kVG9kb3NPbmxvYWRfMS5wcm9qZWN0c0FuZFRvZG9zT25sb2FkO1xufTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBtYWluQXBwKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbnRlbnQiLCJlbGVtZW50X2NyZWF0b3JzXzEiLCJoYW5kbGVGaWx0ZXJCeVByaW9yaXR5Q2xpY2tfMSIsImhhbmRsZVNlYXJjaEZvcm1TdWJtaXRfMSIsImhhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2tfMSIsInJvb3QiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJlbGVtQ3JlYXRvciIsImFwcGVuZEVsZW1Ub1BhcmVudCIsInRvcCIsImxpbmtzQ29udGFpbmVyIiwicGlwZSIsImFkZFRleHRUb0VsZW0iLCJhZGRBdHRyaWJ1dGVUb0VsZW0iLCJmb3JtIiwiYWRkRXZ0TGlzdGVuZXIiLCJoYW5kbGVTZWFyY2hGb3JtU3VibWl0Iiwic2VhcmNoVG9kbyIsInNlbGVjdEZpbHRlckJ5UHJpb3JpdHkiLCJoYW5kbGVGaWx0ZXJCeVByaW9yaXR5Q2xpY2siLCJzZWxlY3RTb3J0QnlQcmlvcml0eSIsImhhbmRsZVNvcnRCeVByaW9yaXR5Q2xpY2siLCJjb250ZW50Qm90dG9tIiwiYWRkU3R5bGVUb0VsZW0iLCJjcmVhdGVJbWFnZSIsImVsZW1fIiwiY2xhc3NfIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJyZWR1Y2UiLCJlbGVtIiwiY3VyckNsYXNzIiwiY2xhc3NMaXN0IiwiYWRkIiwiYXR0clZhbHNfIiwiY3VyciIsImxlbmd0aCIsInNldEF0dHJpYnV0ZSIsInN0eWxlUHJvcFZhbHNfIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInRleHRfIiwidGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImFwcGVuZENoaWxkIiwicGFyZW50XyIsImNoaWxkXyIsInNvdXJjZV8iLCJhbHRfIiwidGl0bGVfIiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsImFsdCIsInRpdGxlIiwiZXZ0XyIsImhhbmRsZUV2dF8iLCJhZGRFdmVudExpc3RlbmVyIiwiZnVuY3MiLCJyZXMiLCJmdW5jIiwiaGFuZGxlQWRkTmV3UHJvamVjdEljb25DbGljayIsInByb2plY3RNb2RhbF8xIiwiZXYiLCJwcm9qZWN0TW9kYWwiLCJhZGRQcm9qZWN0TW9kYWwiLCJ2aXNpYmlsaXR5IiwiYm94U2hhZG93IiwiaGFuZGxlQWRkTmV3VG9kb0ljb25DbGljayIsInRvZG9Nb2RhbF8xIiwiX2EiLCJfYiIsInByb2plY3REYXRhTmFtZSIsInRoaXMiLCJkYXRhc2V0IiwibmFtZSIsInByb2plY3REYXRhQ29sb3VyIiwiY29sb3VyIiwidG9kb01vZGFsIiwiYWRkVG9kb01vZGFsIiwiaGFuZGxlQXJjaGl2ZWRUYWJDbGljayIsImFkZFRvZG9zVG9Db250ZW50XzEiLCJjb250ZW50Qm90dG9tUHJldiIsInJlbW92ZSIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmb3JFYWNoIiwicHJvamVjdCIsImFkZFRvZG9zVG9Db250ZW50IiwiaGFuZGxlQ3JlYXRlZFRhYnNDbGljayIsInRoaXNQcm9qZWN0TmFtZSIsInRleHRDb250ZW50IiwicHJvamVjdEFuZFRvZG9zT2JqQXJyIiwia2V5cyIsImtleSIsInB1c2giLCJzZWxlY3RlZFByaW9yaXR5IiwicHJvamVjdEFyciIsImZpbHRlcmVkUHJpb3JpdHlBcnIiLCJ0b2RvcyIsInRvZG8iLCJ0b2RvUHJpb3JpdHkiLCJ0ZW1wIiwicHJvamVjdE5hbWUiLCJwcm9qZWN0Q29sb3VyIiwidG9kb05hbWUiLCJ0b2RvRGVzY3JpcHRpb24iLCJ0b2RvRHVlRGF0ZSIsImhhbmRsZUludmFsaWRQcm9qTmFtZSIsInNldEN1c3RvbVZhbGlkaXR5IiwiaGFuZGxlSW52YWxpZFRvZG9OYW1lIiwiaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uIiwiY2hlY2tWYWxpZGl0eSIsImhhbmRsZVByb2plY3RDbG9zZUljb25DbGljayIsImhhbmRsZVByb2plY3RGb3JtU3VibWl0IiwiYWRkUHJvamVjdFRvU2lkZWJhcl8xIiwiX2MiLCJfZCIsInByZXZlbnREZWZhdWx0IiwicHJvamVjdEZvcm1EYXRhIiwiRm9ybURhdGEiLCJwcm9qZWN0Rm9ybU5hbWUiLCJnZXQiLCJ0b1N0cmluZyIsInByb2plY3RGb3JtQ29sb3VyIiwicHJvamVjdEZvcm1OYW1lXyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJrZXlzU2V0IiwiU2V0IiwiaGFzIiwiYWxlcnQiLCJBcnJheSIsImZyb20iLCJhZGRQcm9qZWN0VG9TaWRlYmFyIiwiaGFuZGxlUHJvamVjdHNUYWJDbGljayIsInByb2plY3RzQW5kVG9kb3NBcnIiLCJzZWFyY2hUZXJtIiwidG9Mb3dlckNhc2UiLCJzZWFyY2hSZWdFeCIsIlJlZ0V4cCIsIm1hdGNoZWRQcm9qQW5kVG9kb3NBcnIiLCJ0ZXN0Iiwic2VsZWN0ZWRTb3J0VmFsdWUiLCJjb25zb2xlIiwibG9nIiwicHJvamVjdE1hcCIsImFjYyIsInNldCIsIk1hcCIsInByb2plY3RNYXBBcnIiLCJzb3J0IiwiYSIsImIiLCJudW1Qcm9qZWN0IiwiaGFuZGxlVG9kYXlUYWJDbGljayIsIm5vdyIsIkRhdGUiLCJkYXRlIiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ0b2RheSIsImdldEZ1bGxZZWFyIiwicHJvakFuZFRvZG9zRmlsdGVyZWQiLCJoYW5kbGVUb2RvQ2hlY2tib3hDb21wbGV0ZSIsIl9lIiwiX2YiLCJfZyIsIl9oIiwiX2oiLCJfayIsIl9sIiwicHJldmlvdXNTaWJsaW5nIiwidGhpc1Byb2plY3RDb2xvdXIiLCJ0aGlzVG9kb05hbWUiLCJwYXJlbnRFbGVtZW50IiwiZmlyc3RDaGlsZCIsIm5leHRTaWJsaW5nIiwiYXJjaGl2ZWRUb2RvcyIsInRvZG9Ub0JlQXJjaGl2ZWQiLCJ0b2Rvc0FyckZpbHRlcmVkIiwicHJvamVjdEFuZFRvZG9Ub0JlQXJjaGl2ZWQiLCJoYW5kbGVUb2RvQ2xvc2VJY29uQ2xpY2siLCJoYW5kbGVUb2RvRm9ybVN1Ym1pdCIsInN0b3JlUHJvamVjdEFuZFRvZG9zRnVsbF8xIiwiX20iLCJ0b2RvQ29udGFpbmVyIiwidG9kb0Zvcm1EYXRhIiwicHJvamVjdEFuZFRvZG9zIiwic3RvcmVQcm9qZWN0QW5kVG9kb3NGdWxsIiwiaGFuZGxlVG9kb05hbWVWYWxpZGF0aW9uIiwiaGFuZGxlVXBjb21pbmdUYWJDbGljayIsImhlYWRlciIsImhhbmRsZUludmFsaWRQcm9qTmFtZV8xIiwiaGFuZGxlUHJvamVjdENsb3NlSWNvbkNsaWNrXzEiLCJoYW5kbGVQcm9qZWN0Rm9ybVN1Ym1pdF8xIiwiaGFuZGxlUHJvak5hbWVWYWxpZGF0aW9uXzEiLCJzaWRlYmFyIiwiYWRkUHJvamVjdENvbnRhaW5lciIsImFkZFByb2plY3RIZWFkaW5nQ29udGFpbmVyIiwiYWRkUHJvamVjdEZvcm0iLCJhZGRQcm9qZWN0TmFtZUNvbnRhaW5lciIsImFkZFByb2plY3RDb2xvdXJDb250YWluZXIiLCJhZGRQcm9qZWN0SWNvbnNDb250YWluZXIiLCJidHRuQ2FuY2VsUHJvamVjdCIsImJ0dG5BZGRQcm9qZWN0IiwiaGFuZGxlSW52YWxpZFRvZG9OYW1lXzEiLCJoYW5kbGVUb2RvQ2xvc2VJY29uQ2xpY2tfMSIsImhhbmRsZVRvZG9Gb3JtU3VibWl0XzEiLCJoYW5kbGVUb2RvTmFtZVZhbGlkYXRpb25fMSIsInByb2plY3REYXRhTmFtZV8iLCJwcm9qZWN0RGF0YUNvbG91cl8iLCJ0b2RvRm9ybSIsImFkZFRvZG9OYW1lQ29udGFpbmVyIiwiYWRkVG9kb0Rlc2NDb250YWluZXIiLCJhZGRUb2RvRGF0ZUNvbnRhaW5lciIsImFkZFRvZG9Qcmlvcml0eUNvbnRhaW5lciIsInNlbGVjdFByaW9yaXR5IiwiYWRkVG9kb0ljb25zQ29udGFpbmVyIiwiYnR0bkNhbmNlbFRvZG8iLCJidHRuQWRkVG9kbyIsImhhbmRsZUFkZE5ld1RvZG9JY29uQ2xpY2tfMSIsImhhbmRsZUNyZWF0ZWRUYWJzQ2xpY2tfMSIsImZvcm1OYW1lXyIsImZvcm1Db2xvdXJfIiwicHJvamVjdHNDb250YWluZXIiLCJwcm9qZWN0Q29udGFpbmVyIiwiaGFuZGxlVG9kb0NoZWNrYm94Q29tcGxldGVfMSIsImRpc2FibGVDaGVja2JveCIsImkiLCJ0b2RvQ29udGVudENvbnRhaW5lciIsImhlYWRpbmdDb250YWluZXIiLCJjaGVja2JveCIsImRhdGVBbmRQcmlvcml0eUNvbnRhaW5lciIsInByaW9yaXR5Q29udGFpbmVyIiwiYXJjaGl2ZUV4cGlyZWRUb2RvcyIsInllYXIiLCJleHBpcmVkUHJvamVjdHNBcnIiLCJ0b2Rvc05vdEV4cGlyZWRBcnIiLCJ0ZW1wQXJyIiwic3BsaXQiLCJ0b2RvWWVhciIsIk51bWJlciIsInRvZG9Nb250aCIsInByb2oiLCJwcm9qTmFtZSIsInByb2plY3RzQW5kVG9kb3NPbmxvYWQiLCJwcm9qZWN0cyIsInNhbXBsZVByb2plY3QiLCJwcm9qZWN0QW5kVG9kb3NfIiwidG9kb0V4aXN0c0ZsYWciLCJjdXJyZW50UHJvak5hbWUiLCJjdXJyZW50VG9kb05hbWUiLCJjdXJyZW50VG9kb3MiLCJzdG9yYWdlS2V5cyIsImN1cnJlbnRQcm9qU3RvcmFnZSIsInRvZG9OYW1lc1NldCIsInN0b3JlU2FtcGxlUHJvamVjdCIsImRheSIsInNhbXBsZVVyZ2VudER1ZURhdGUiLCJzYW1wbGVNZWREdWVEYXRlIiwic2FtcGxlTG93RHVlRGF0ZSIsImhhbmRsZUFkZE5ld1Byb2plY3RJY29uQ2xpY2tfMSIsImhhbmRsZUFyY2hpdmVkVGFiQ2xpY2tfMSIsImhhbmRsZVVwY29taW5nVGFiQ2xpY2tfMSIsImhhbmRsZVRvZGF5VGFiQ2xpY2tfMSIsImhhbmRsZVByb2plY3RzVGFiQ2xpY2tfMSIsInRvZGF5Q29udGFpbmVyIiwidXBjb21pbmdDb250YWluZXIiLCJhcmNoaXZlZENvbnRhaW5lciIsInByb2plY3RzSGVhZGluZyIsInNhbXBsZVByb2plY3RDb250YWluZXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwiY29udGVudF8xIiwiaGVhZGVyXzEiLCJzaWRlYmFyXzEiLCJwcm9qZWN0c0FuZFRvZG9zT25sb2FkXzEiLCJzdG9yZVNhbXBsZVByb2plY3RfMSIsImFyY2hpdmVFeHBpcmVkVG9kb3NfMSIsInNlbGYiLCJvbmxvYWQiXSwic291cmNlUm9vdCI6IiJ9