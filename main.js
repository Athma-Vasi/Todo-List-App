(()=>{"use strict";var e={985:(e,o,t)=>{t.r(o)},827:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.content=void 0;const r=t(149),a=t(338),d=t(841),n=t(167);o.content=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["content"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["content-top"]);(0,r.appendElemToParent)(o)(t);const l=(0,r.elemCreator)("form")(["form-searchTodo"]);(0,r.pipe)((0,r.addEvtListener)("submit")(d.handleSearchFormSubmit),(0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-searchTodo"],["name","search-todo"]]),(0,r.appendElemToParent)(t))(l),(0,r.pipe)((0,r.addAttributeToElem)([["for","searchTodo"]]),(0,r.appendElemToParent)(l))((0,r.elemCreator)("label")(["label-search"]));const i=(0,r.elemCreator)("input")(["searchTodo"]);(0,r.addAttributeToElem)([["type","search"],["placeholder","search for a todo"],["id","searchTodo"],["name","search-todo"]])(i),(0,r.appendElemToParent)(l)(i),(0,r.pipe)((0,r.appendElemToParent)(l))((0,r.createImage)("../../../dist/assets/icons/search.svg")(["icon","icon-search"])("icon of magnifying glass representing search")("Search")),(0,r.pipe)((0,r.addAttributeToElem)([["for","select-filterByPriority"],["name","select-filterByPriority"]]),(0,r.appendElemToParent)(t))((0,r.elemCreator)("label")(["label","label-filterByPriority"]));const c=(0,r.elemCreator)("select")(["select-filterByPriority"]);(0,r.pipe)((0,r.addEvtListener)("click")(a.handleFilterByPriorityClick),(0,r.addAttributeToElem)([["name","select-filterByPriority"],["id","select-filterByPriority"],["title","select-filterByPriority"]]),(0,r.appendElemToParent)(t))(c),(0,r.pipe)((0,r.addTextToElem)("--Filter by priority--"),(0,r.addAttributeToElem)([["value",""]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("immediate"),(0,r.addAttributeToElem)([["value","immediate"]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("urgent"),(0,r.addAttributeToElem)([["value","urgent"]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("high"),(0,r.addAttributeToElem)([["value","high"]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("medium"),(0,r.addAttributeToElem)([["value","medium"]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"])),(0,r.pipe)((0,r.addTextToElem)("low"),(0,r.addAttributeToElem)([["value","low"]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("option")(["option-filterByPriority"]));const p=(0,r.elemCreator)("select")(["select-sortByPriority"]);(0,r.pipe)((0,r.addEvtListener)("click")(n.handleSortByPriorityClick),(0,r.addAttributeToElem)([["id","select-sortByPriority"],["name","select-sortByPriority"],["title","select-sortByPriority"]]),(0,r.appendElemToParent)(t))(p),(0,r.pipe)((0,r.addTextToElem)("--Sort by priority--"),(0,r.addAttributeToElem)([["value",""]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-sortByPriority"])),(0,r.pipe)((0,r.addTextToElem)("low to immediate"),(0,r.addAttributeToElem)([["value","lowToImmediate"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-sortByPriority"])),(0,r.pipe)((0,r.addTextToElem)("immediate to low"),(0,r.addAttributeToElem)([["value","immediateToLow"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("option")(["option-sortByPriority"]));const m=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(m)}},149:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.pipe=o.addStyleToElem=o.addEvtListener=o.createImage=o.addAttributeToElem=o.addTextToElem=o.appendElemToParent=o.elemCreator=void 0,o.elemCreator=e=>o=>{const t=document.createElement(e);return o.reduce(((e,o)=>(e.classList.add(o),e)),t)},o.addAttributeToElem=e=>o=>e.reduce(((e,o)=>{if(!(o.length>2))return null==e||e.setAttribute(o[0],o[1]),e}),o),o.addStyleToElem=e=>o=>e.reduce(((e,o)=>{if(!(o.length>2))return null==e||e.style.setProperty(o[0],o[1]),e}),o),o.addTextToElem=e=>o=>{const t=document.createTextNode(e);return null==o||o.appendChild(t),o},o.appendElemToParent=e=>o=>{o&&(null==e||e.appendChild(o))},o.createImage=e=>o=>t=>r=>{const a=new Image;return a.src=e,a.alt=t,a.title=r,o.reduce(((e,o)=>(e.classList.add(o),e)),a)},o.addEvtListener=e=>o=>t=>(null==t||t.addEventListener(e,o),t),o.pipe=(...e)=>o=>e.reduce(((e,o)=>o(e)),o)},544:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleAddNewProjectIconClick=void 0;const r=t(676);o.handleAddNewProjectIconClick=function(e){(0,r.projectModal)();const o=document.querySelector(".addProject-container");o&&(o.style.visibility="visible"===(null==o?void 0:o.style.visibility)?"hidden":"visible")}},979:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleAddNewTodoIconClick=void 0;const r=t(234);o.handleAddNewTodoIconClick=function(){var e,o;const t=null!==(e=this.dataset.name)&&void 0!==e?e:"",a=null!==(o=this.dataset.colour)&&void 0!==o?o:"";(0,r.todoModal)(t,a);const d=document.querySelector(".todo-container");d&&(d.style.visibility="visible"===(null==d?void 0:d.style.visibility)?"hidden":"visible")}},279:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleArchivedTabClick=void 0;const r=t(944),a=t(149);o.handleArchivedTabClick=function(){var e;const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(o)(d),JSON.parse(null!==(e=localStorage.getItem("archived"))&&void 0!==e?e:"").forEach((e=>{(0,r.addTodosToContent)(e,!0)}))}},256:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleCreatedTabsClick=void 0;const r=t(944),a=t(149);o.handleCreatedTabsClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(e)(t);const d=this.textContent,n=[];Object.keys(localStorage).forEach((e=>{var o;e===d&&n.push(JSON.parse(null!==(o=localStorage.getItem(d))&&void 0!==o?o:""))})),n.forEach((e=>{(0,r.addTodosToContent)(e)}))}},338:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleFilterByPriorityClick=void 0;const r=t(149),a=t(944);o.handleFilterByPriorityClick=function(e){const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(d);const n=this.value,l=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&l.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const i=[];l.forEach((e=>{e.todos.forEach((o=>{if(o.todoPriority===n){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};i.push(t)}}))})),""===n&&l.forEach((e=>(0,a.addTodosToContent)(e))),i.forEach((e=>{(0,a.addTodosToContent)(e)}))}},749:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectCloseIconClick=void 0,o.handleProjectCloseIconClick=function(e){const o=document.querySelector(".addProject-container");o&&o.remove()}},709:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectFormSubmit=void 0;const r=t(265);o.handleProjectFormSubmit=function(e){var o,t,a,d;e.preventDefault();const n=document.querySelector(".addProject-container"),l=new FormData(this),i=null!==(t=null===(o=l.get("addProject-name"))||void 0===o?void 0:o.toString())&&void 0!==t?t:"",c=null!==(d=null===(a=l.get("addProject-colour"))||void 0===a?void 0:a.toString())&&void 0!==d?d:"";var p;localStorage.getItem("projectNames")||localStorage.setItem("projectNames",JSON.stringify([])),p=i,Object.keys(localStorage).forEach((e=>{var o;if("projectNames"===e){const t=new Set(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""));if(["today","upcoming","archived","projects"].forEach((e=>t.add(e))),t.has(p))return void alert(`${p} already exists as a project (｡•́︿•̀｡)  Please choose another name.`);t.add(p),localStorage.setItem(e,JSON.stringify(Array.from(t))),(0,r.addProjectToSidebar)(i,c)}})),null==n||n.remove()}},998:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleProjectsTabClick=void 0;const r=t(944),a=t(149);o.handleProjectsTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))})),d.forEach((e=>{(0,r.addTodosToContent)(e)}))}},841:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleSearchFormSubmit=void 0;const r=t(944),a=t(149);o.handleSearchFormSubmit=function(e){var o,t;e.preventDefault();const d=document.querySelector(".content"),n=document.querySelector(".content-bottom");null==n||n.remove();const l=(0,a.elemCreator)("div")(["content-bottom"]);(0,a.appendElemToParent)(d)(l);const i=null!==(t=null===(o=new FormData(this).get("search-todo"))||void 0===o?void 0:o.toString().toLowerCase())&&void 0!==t?t:"",c=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&c.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const p=new RegExp(`${i}`),m=[];c.forEach((e=>{e.todos.forEach((o=>{if(p.test(o.todoName.toLowerCase())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoDescription.toLowerCase())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoDueDate.toString())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}else if(p.test(o.todoPriority.toString())){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};m.push(t)}}))})),m.forEach((e=>{(0,r.addTodosToContent)(e)}))}},167:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleSortByPriorityClick=void 0;const r=t(149),a=t(944);o.handleSortByPriorityClick=function(e){const o=document.querySelector(".content"),t=document.querySelector(".content-bottom");null==t||t.remove();const d=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(o)(d);const n=this.value,l=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&l.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const i=l.reduce(((e,o)=>(o.todos.forEach((t=>{"immediate"===t.todoPriority?e.set(5,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"urgent"===t.todoPriority?e.set(4,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"high"===t.todoPriority?e.set(3,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"medium"===t.todoPriority?e.set(2,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]}):"low"===t.todoPriority&&e.set(1,{project:{projectName:o.project.projectName,projectColour:o.project.projectColour},todos:[t]})})),e)),new Map),c=Array.from(i);"lowToImmediate"===n&&c.sort(((e,o)=>e[0]-o[0])),"immediateToLow"===n&&c.sort(((e,o)=>o[0]-e[0])),""===n&&l.forEach((e=>(0,a.addTodosToContent)(e))),c.forEach((e=>{(0,a.addTodosToContent)(e[1])}))}},80:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodayTabClick=void 0;const r=t(149),a=t(944);o.handleTodayTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const n=new Date,l=n.getDate(),i=n.getMonth()+1,c=`${n.getFullYear()}-${i<10?"0"+i:i}-${l<10?"0"+l:l}`,p=[];d.forEach((e=>{e.todos.forEach((o=>{if(o.todoDueDate===c){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};p.push(t)}}))})),p.forEach((e=>{(0,a.addTodosToContent)(e)}))}},43:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoCheckboxComplete=void 0,o.handleTodoCheckboxComplete=function(){var e,o,t,r,a,d,n,l,i,c;localStorage.getItem("archived")||localStorage.setItem("archived",JSON.stringify([]));const p=null!==(o=null===(e=this.previousSibling)||void 0===e?void 0:e.textContent)&&void 0!==o?o:"",m=this.value,s=null!==(n=null===(d=null===(a=null===(r=null===(t=this.parentElement)||void 0===t?void 0:t.parentElement)||void 0===r?void 0:r.firstChild)||void 0===a?void 0:a.nextSibling)||void 0===d?void 0:d.textContent)&&void 0!==n?n:"",u=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&e===p&&u.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const T=JSON.parse(null!==(l=localStorage.getItem("archived"))&&void 0!==l?l:""),v=[],h=[];u[0].todos.forEach((e=>{e.todoName!==s?h.push(e):v.push(e)})),u[0].todos=h,localStorage.setItem(p,JSON.stringify(u[0]));const E={project:{projectName:p,projectColour:m},todos:[v[0]]};T.push(E),localStorage.setItem("archived",JSON.stringify(T)),null===(c=null===(i=this.parentElement)||void 0===i?void 0:i.parentElement)||void 0===c||c.remove()}},296:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoCloseIconClick=void 0,o.handleTodoCloseIconClick=function(){const e=document.querySelector(".todo-container");e&&e.remove()}},529:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleTodoFormSubmit=void 0;const r=t(654),a=t(944);o.handleTodoFormSubmit=function(e){var o,t,d,n,l,i,c,p,m,s,u,T;e.preventDefault();const v=document.querySelector(".todo-container"),h=new FormData(this),E={project:{projectName:null!==(t=null===(o=h.get("addTodo-projectName"))||void 0===o?void 0:o.toString())&&void 0!==t?t:"",projectColour:null!==(n=null===(d=h.get("addTodo-projectColour"))||void 0===d?void 0:d.toString())&&void 0!==n?n:""},todos:[{todoName:null!==(i=null===(l=h.get("addTodo-name"))||void 0===l?void 0:l.toString())&&void 0!==i?i:"",todoDescription:null!==(p=null===(c=h.get("addTodo-description"))||void 0===c?void 0:c.toString())&&void 0!==p?p:"",todoDueDate:null!==(s=null===(m=h.get("addTodo-dueDate"))||void 0===m?void 0:m.toString())&&void 0!==s?s:"",todoPriority:null!==(T=null===(u=h.get("addTodo-selectPriority"))||void 0===u?void 0:u.toString())&&void 0!==T?T:""}]};(0,r.storeProjectAndTodosFull)(E)||(0,a.addTodosToContent)(E),null==v||v.remove()}},938:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.handleUpcomingTabClick=void 0;const r=t(149),a=t(944);o.handleUpcomingTabClick=function(){const e=document.querySelector(".content"),o=document.querySelector(".content-bottom");null==o||o.remove();const t=(0,r.elemCreator)("div")(["content-bottom"]);(0,r.appendElemToParent)(e)(t);const d=[];Object.keys(localStorage).forEach((e=>{var o;"projectNames"!==e&&"archived"!==e&&d.push(JSON.parse(null!==(o=localStorage.getItem(e))&&void 0!==o?o:""))}));const n=new Date,l=n.getDate(),i=n.getMonth()+1,c=`${n.getFullYear()}-${i<10?"0"+i:i}-${l<10?"0"+l:l}`,p=[];d.forEach((e=>{e.todos.forEach((o=>{if(o.todoDueDate!==c){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};p.push(t)}}))})),p.forEach((e=>{(0,a.addTodosToContent)(e)}))}},559:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.header=void 0;const r=t(149);o.header=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["header"]);(0,r.appendElemToParent)(e)(o),(0,r.pipe)((0,r.addTextToElem)("Todo List App"),(0,r.appendElemToParent)(o))((0,r.elemCreator)("h1")(["title","header-title"]))}},676:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.projectModal=void 0;const r=t(149),a=t(749),d=t(709);o.projectModal=function(){const e=document.querySelector(".sidebar"),o=(0,r.elemCreator)("div")(["addProject-container"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["addProjectHeading-container"]);(0,r.appendElemToParent)(o)(t),(0,r.pipe)((0,r.addTextToElem)("Add project"),(0,r.appendElemToParent)(t))((0,r.elemCreator)("h3")(["heading-text","text-addProject"]));const n=(0,r.elemCreator)("form")(["form-addProject"]);(0,r.pipe)((0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-addProject"],["name","form-addProject"]]),(0,r.addEvtListener)("submit")(d.handleProjectFormSubmit),(0,r.appendElemToParent)(o))(n);const l=(0,r.elemCreator)("div")(["addProject-name-container"]);(0,r.appendElemToParent)(n)(l),(0,r.pipe)((0,r.addAttributeToElem)([["for","addProject-name"]]),(0,r.addTextToElem)("Name"),(0,r.appendElemToParent)(l))((0,r.elemCreator)("label")(["label-name"])),(0,r.pipe)((0,r.addAttributeToElem)([["id","addProject-name"],["type","text"],["minlength","2"],["maxlength","17"],["pattern","^[a-zA-Z][a-zA-Z0-9-_.]{1,20}$"],["placeholder","Enter name of project"],["name","addProject-name"],["required",""]]),(0,r.appendElemToParent)(l))((0,r.elemCreator)("input")(["addProject-name"]));const i=(0,r.elemCreator)("div")(["addProject-colour-container"]);(0,r.appendElemToParent)(n)(i),(0,r.pipe)((0,r.addAttributeToElem)([["for","addProject-colour"]]),(0,r.addTextToElem)("Colour"),(0,r.appendElemToParent)(i))((0,r.elemCreator)("label")(["label-colour"])),(0,r.pipe)((0,r.addAttributeToElem)([["type","color"],["id","addProject-colour"],["name","addProject-colour"],["value","#1e1e1e"]]),(0,r.appendElemToParent)(i))((0,r.elemCreator)("input")(["addProject-colour"]));const c=(0,r.elemCreator)("div")(["addProjectIcons-container"]);(0,r.appendElemToParent)(n)(c);const p=(0,r.elemCreator)("button")(["bttn","bttn-cancelProject"]);(0,r.pipe)((0,r.addEvtListener)("click")(a.handleProjectCloseIconClick),(0,r.addAttributeToElem)([["type","button"],["name","bttn-cancel"]]),(0,r.appendElemToParent)(c))(p),(0,r.pipe)((0,r.appendElemToParent)(p))((0,r.createImage)("../../../dist/assets/icons/x(1).svg")(["icon","icon-cancelProject"])("icon of symbol 'x' representing cancel or close")("Cancel"));const m=(0,r.elemCreator)("button")(["bttn","bttn-addProject"]);(0,r.pipe)((0,r.addAttributeToElem)([["type","submit"],["name","bttn-addProject"],["form","form-addProject"]]),(0,r.appendElemToParent)(c))(m),(0,r.pipe)((0,r.appendElemToParent)(m))((0,r.createImage)("../../../dist/assets/icons/check(1).svg")(["icon","icon-addProject"])("icon of symbol 'check' representing add")("Add Project"))}},234:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.todoModal=void 0;const r=t(149),a=t(296),d=t(529);o.todoModal=function(e,o){const t=document.querySelector("#root"),n=new Date,l=(0,r.elemCreator)("div")(["todo-container"]);(0,r.appendElemToParent)(t)(l);const i=(0,r.elemCreator)("form")(["form","form-addTodo"]);(0,r.pipe)((0,r.addEvtListener)("submit")(d.handleTodoFormSubmit),(0,r.addAttributeToElem)([["action","#"],["method","post"],["id","form-addTodo"],["name","form-addTodo"]]),(0,r.appendElemToParent)(l))(i),(0,r.pipe)((0,r.addTextToElem)("Add task todo"),(0,r.appendElemToParent)(i))((0,r.elemCreator)("h3")(["heading-text","text-addTodo"]));const c=(0,r.elemCreator)("div")(["addTodo-name-container"]);(0,r.appendElemToParent)(i)(c),(0,r.pipe)((0,r.addAttributeToElem)([["for","addTodo-name"]]),(0,r.addTextToElem)("Name"),(0,r.appendElemToParent)(c))((0,r.elemCreator)("label")(["label-name"])),(0,r.pipe)((0,r.addAttributeToElem)([["type","text"],["form","form-addTodo"],["id","addTodo-name"],["name","addTodo-name"],["minlength","2"],["maxlength","31"],["placeholder","Enter name for task todo"],["required",""]]),(0,r.appendElemToParent)(c))((0,r.elemCreator)("input")(["addTodo-name"]));const p=(0,r.elemCreator)("div")(["addTodo-desc-container"]);(0,r.appendElemToParent)(i)(p),(0,r.pipe)((0,r.addAttributeToElem)([["for","addTodo-description"]]),(0,r.addTextToElem)("Description"),(0,r.appendElemToParent)(p))((0,r.elemCreator)("label")(["label-description"])),(0,r.pipe)((0,r.addAttributeToElem)([["id","addTodo-description"],["autocomplete","on"],["form","form-addTodo"],["maxlength","250"],["name","addTodo-description"],["spellcheck","true"],["wrap","hard"]]),(0,r.appendElemToParent)(p))((0,r.elemCreator)("textarea")(["addTodo-description"]));const m=(0,r.elemCreator)("div")(["addTodo-date-container"]);(0,r.appendElemToParent)(i)(m),(0,r.pipe)((0,r.addTextToElem)("Due date"),(0,r.addAttributeToElem)([["for","addTodo-dueDate"]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("label")(["label-dueDate"])),(0,r.pipe)((0,r.addAttributeToElem)([["type","date"],["id","addTodo-dueDate"],["min",`${n.getFullYear()}-${n.getMonth()<10?"0"+(n.getMonth()+1):n.getMonth()+1}-${n.getDate()<10?"0"+n.getDate():n.getDate()}`],["max",`${n.getFullYear()+100}-${n.getMonth()<10?"0"+(n.getMonth()+1):n.getMonth()+1}-${n.getDate()<10?"0"+n.getDate():n.getDate()}`],["name","addTodo-dueDate"],["placeholder","yyyy-mm-dd"],["pattern","(0[1-9]|1[0-9]|2[0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}"],["required",""]]),(0,r.appendElemToParent)(m))((0,r.elemCreator)("input")(["addTodo-dueDate"]));const s=(0,r.elemCreator)("div")(["addTodo-priority-container"]);(0,r.appendElemToParent)(i)(s),(0,r.pipe)((0,r.addTextToElem)("Priority level"),(0,r.addAttributeToElem)([["for","addTodo-selectPriority"]]),(0,r.appendElemToParent)(s))((0,r.elemCreator)("label")(["label-selectPriority"]));const u=(0,r.elemCreator)("select")(["addTodo-selectPriority"]);(0,r.pipe)((0,r.addAttributeToElem)([["name","addTodo-selectPriority"],["id","addTodo-selectPriority"],["form","form-addTodo"],["title","addTodo-selectPriority"],["required",""]]),(0,r.appendElemToParent)(s))(u),(0,r.pipe)((0,r.addTextToElem)("--Please assign a priority--"),(0,r.addAttributeToElem)([["value",""]]),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","low"]]),(0,r.addTextToElem)("Low"),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","medium"]]),(0,r.addTextToElem)("Medium"),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","high"]]),(0,r.addTextToElem)("High"),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","urgent"]]),(0,r.addTextToElem)("Urgent"),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["value","immediate"]]),(0,r.addTextToElem)("Immediate"),(0,r.appendElemToParent)(u))((0,r.elemCreator)("option")(["option-selectPriority"])),(0,r.pipe)((0,r.addAttributeToElem)([["hidden",""],["value",`${e}`],["name","addTodo-projectName"],["type","text"]]),(0,r.appendElemToParent)(i))((0,r.elemCreator)("input")(["addTodo-projectName__hidden"])),(0,r.pipe)((0,r.addAttributeToElem)([["hidden",""],["value",`${o}`],["name","addTodo-projectColour"],["type","text"]]),(0,r.appendElemToParent)(i))((0,r.elemCreator)("input")(["addTodo-projectColour__hidden"]));const T=(0,r.elemCreator)("div")(["addTodo-icons-container"]);(0,r.appendElemToParent)(i)(T);const v=(0,r.elemCreator)("button")(["bttn","bttn-cancelTodo"]);(0,r.pipe)((0,r.addAttributeToElem)([["type","click"],["name","bttn-cancelTodo"],["form","form-addTodo"]]),(0,r.appendElemToParent)(T))(v),(0,r.pipe)((0,r.addEvtListener)("click")(a.handleTodoCloseIconClick),(0,r.appendElemToParent)(v))((0,r.createImage)("../../../dist/assets/icons/x(1).svg")(["icon","icon-cancelTodo"])("icon of symbol 'x' representing close or cancel")("Cancel"));const h=(0,r.elemCreator)("button")(["bttn","bttn-addTodo"]);(0,r.pipe)((0,r.addAttributeToElem)([["type","submit"],["name","bttn-addTodo"],["form","form-addTodo"]]),(0,r.appendElemToParent)(T))(h),(0,r.pipe)((0,r.appendElemToParent)(h))((0,r.createImage)("../../../dist/assets/icons/check(1).svg")(["icon","icon-addTodo"])("icon of a checkmark representing add")("Add Todo"))}},265:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.addProjectToSidebar=void 0;const r=t(149),a=t(979),d=t(256);o.addProjectToSidebar=function(e,o){const t=document.querySelector(".container-projects"),n=(0,r.elemCreator)("div")(["sidebar-project","project"]);(0,r.appendElemToParent)(t)(n),(0,r.pipe)((0,r.addEvtListener)("click")(d.handleCreatedTabsClick),(0,r.addAttributeToElem)([["data-name",`${e}`]]),(0,r.addStyleToElem)([["color",`${o}`]]),(0,r.addTextToElem)(`${e}`),(0,r.appendElemToParent)(n))((0,r.elemCreator)("h4")(["project-text"])),(0,r.pipe)((0,r.addAttributeToElem)([["data-name",`${e}`],["data-colour",`${o}`]]),(0,r.addEvtListener)("click")(a.handleAddNewTodoIconClick),(0,r.appendElemToParent)(n))((0,r.createImage)("../../../dist/assets/icons/plus.svg")(["icon","icon-plus"])("icon of plus symbol")("Add New Todo"))}},944:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.addTodosToContent=void 0;const r=t(149),a=t(43);o.addTodosToContent=function({project:e,todos:o},t=!1){const{projectName:d,projectColour:n}=e;o.forEach(((e,l)=>{const{todoName:i,todoDescription:c,todoDueDate:p,todoPriority:m}=o[l],s=document.querySelector(".content-bottom"),u=(0,r.elemCreator)("div")(["todoContent-container"]);(0,r.appendElemToParent)(s)(u);const T=(0,r.elemCreator)("div")(["todoContent-heading-container"]);(0,r.appendElemToParent)(u)(T),(0,r.pipe)((0,r.addAttributeToElem)([["data-colour",`${n}`]]),(0,r.addTextToElem)(`${d}`),(0,r.addStyleToElem)([["color",`${n}`]]),(0,r.appendElemToParent)(T))((0,r.elemCreator)("h3")(["heading-text","todoContent-projectName"])),(0,r.pipe)((0,r.addAttributeToElem)([["for","complete"]]))((0,r.elemCreator)("label")(["label","todoContent-label"]));const v=(0,r.elemCreator)("input")(["todoContent-checkbox"]);(0,r.pipe)((0,r.addEvtListener)("click")(a.handleTodoCheckboxComplete),(0,r.addAttributeToElem)([["type","checkbox"],["id","complete"],["name","complete"],["value",`${n}`]]),(0,r.appendElemToParent)(T))(v),t&&(0,r.addAttributeToElem)([["disabled","true"]])(v),(0,r.pipe)((0,r.addTextToElem)(`${i}`),(0,r.appendElemToParent)(u))((0,r.elemCreator)("h4")(["todoContent-name"])),(0,r.pipe)((0,r.addTextToElem)(`${c}`),(0,r.appendElemToParent)(u))((0,r.elemCreator)("p")(["todoContent-description"]));const h=(0,r.elemCreator)("div")(["dateAndPriority-container"]);(0,r.appendElemToParent)(u)(h),(0,r.pipe)((0,r.addTextToElem)(`Due: ${p}`),(0,r.appendElemToParent)(h))((0,r.elemCreator)("p")(["todoContent-dueDate"]));const E=(0,r.elemCreator)("div")(["priority-container"]);(0,r.appendElemToParent)(h)(E),(0,r.addStyleToElem)([["background-color","immediate"===m?"hsl(0, 100%, 35%)":"urgent"===m?"hsl(40, 100%, 65%)":"high"===m?"hsl(90, 100%, 50%)":"medium"===m?"hsl(200, 100%, 50%)":"hsl(250, 100%, 70%)"]])(E),(0,r.pipe)((0,r.addTextToElem)(`${m}`),(0,r.appendElemToParent)(E))((0,r.elemCreator)("p")(["todoContent-priority"]))}))}},726:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.archiveExpiredTodos=void 0,o.archiveExpiredTodos=function(){var e;localStorage.getItem("archived")||localStorage.setItem("archived",JSON.stringify([]));const o=[];Object.keys(localStorage).forEach((e=>{var t;"projectNames"!==e&&"archived"!==e&&o.push(JSON.parse(null!==(t=localStorage.getItem(e))&&void 0!==t?t:""))}));const t=new Date,r=t.getDate(),a=t.getMonth()+1,d=t.getFullYear(),n=JSON.parse(null!==(e=localStorage.getItem("archived"))&&void 0!==e?e:""),l=[];o.forEach((e=>{e.todos.forEach((o=>{const t=o.todoDueDate.split("-"),i=Number(t[0]),c=Number(t[1]);if(Number(t[2])<r||c<a||i<d){const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};n.push(t)}else{const t={project:{projectName:e.project.projectName,projectColour:e.project.projectColour},todos:[{todoName:o.todoName,todoDescription:o.todoDescription,todoDueDate:o.todoDueDate,todoPriority:o.todoPriority}]};l.push(t)}}))})),localStorage.setItem("archived",JSON.stringify(n)),l.reduce(((e,o)=>{if(e.has(o.project.projectName)){const t=e.get(o.project.projectName);null==t||t.todos.push(o.todos[0]),e.set(o.project.projectName,t)}else e.set(o.project.projectName,o);return e}),new Map).forEach(((e,o)=>{localStorage.setItem(o,JSON.stringify(e))}))}},882:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.projectsAndTodosOnload=void 0;const r=t(265),a=t(944);o.projectsAndTodosOnload=function(){var e;const o=[];Object.keys(localStorage).forEach((e=>{var t;"Sample Project"!==e&&"projectNames"!==e&&"archived"!==e&&o.push(JSON.parse(null!==(t=localStorage.getItem(e))&&void 0!==t?t:""))}));const t=JSON.parse(null!==(e=localStorage.getItem("Sample Project"))&&void 0!==e?e:"");(0,a.addTodosToContent)(t),o.forEach((e=>{(0,r.addProjectToSidebar)(e.project.projectName,e.project.projectColour),(0,a.addTodosToContent)(e)}))}},654:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.storeProjectAndTodosFull=void 0,o.storeProjectAndTodosFull=function(e){var o;let t=!1;const r=e.project.projectName,a=e.todos[0].todoName,d=e.todos[0],n=new Set;if(Object.keys(localStorage).forEach((e=>{n.add(e)})),n.has(r)){const e=JSON.parse(null!==(o=localStorage.getItem(r))&&void 0!==o?o:""),n=new Set;return e.todos.forEach((e=>n.add(e.todoName))),n.has(a)?(alert(`${a} already exists as a todo (｡•́︿•̀｡)  Please choose another name or consider editing an existing todo.`),t=!0,t):(e.todos.push(d),localStorage.setItem(r,JSON.stringify(e)),t=!1,t)}localStorage.setItem(r,JSON.stringify(e))}},932:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.storeSampleProject=void 0,o.storeSampleProject=function(){const e=new Date,o={project:{projectName:"Sample Project",projectColour:"#48d1cc"},todos:[{todoName:"Finish 'The Faded Sun: Kesrith'",todoDescription:"Finish reading the book - return soon!",todoDueDate:`${(e=>{let o=e.getDate();o=o<26?o+2:o;let t=e.getMonth()+1;return`${e.getFullYear()}-${t<10?"0"+t:t}-${o<10?"0"+o:o}`})(e)}`,todoPriority:"urgent"},{todoName:"Vet Appointment",todoDescription:"Take Nighteyes to the vet for routine checkup",todoDueDate:`${(e=>{let o=e.getMonth();return o=o<=10?o+1:o,o+=1,`${e.getFullYear()}-${o<10?"0"+o:o}-${e.getDate()<10?"0"+e.getDate():e.getDate()}`})(e)}`,todoPriority:"medium"},{todoName:"Backpacking trip to Nepal",todoDescription:"Plan route, supplies and apply for visa",todoDueDate:`${(e=>{let o=e.getDate(),t=e.getMonth()+1;return`${e.getFullYear()+1}-${t<10?"0"+t:t}-${o<10?"0"+o:o}`})(e)}`,todoPriority:"low"}]};localStorage.getItem(o.project.projectName)||localStorage.setItem(o.project.projectName,JSON.stringify(o))}},524:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.sidebar=void 0;const r=t(149),a=t(544),d=t(979),n=t(279),l=t(938),i=t(80),c=t(998),p=t(256);o.sidebar=function(){const e=document.querySelector("#root"),o=(0,r.elemCreator)("div")(["sidebar"]);(0,r.appendElemToParent)(e)(o);const t=(0,r.elemCreator)("div")(["sidebar-tab","container-today"]);(0,r.addEvtListener)("click")(i.handleTodayTabClick)(t),(0,r.appendElemToParent)(o)(t),(0,r.pipe)((0,r.appendElemToParent)(t))((0,r.createImage)("../../../dist/assets/icons/aperture.svg")(["icon","icon-today"])("icon representing today's events")("Today")),(0,r.pipe)((0,r.addTextToElem)("Today"),(0,r.appendElemToParent)(t))((0,r.elemCreator)("h4")(["tab-text","today-tab"]));const m=(0,r.elemCreator)("div")(["sidebar-tab","container-upcoming"]);(0,r.addEvtListener)("click")(l.handleUpcomingTabClick)(m),(0,r.appendElemToParent)(o)(m),(0,r.pipe)((0,r.appendElemToParent)(m))((0,r.createImage)("../../../dist/assets/icons/calendar.svg")(["icon","upcoming-icon"])("icon representing upcoming events")("Upcoming")),(0,r.pipe)((0,r.addTextToElem)("Upcoming"),(0,r.appendElemToParent)(m))((0,r.elemCreator)("h4")(["tab-text","tab-upcoming"]));const s=(0,r.elemCreator)("div")(["sidebar-tab","container-archived"]);(0,r.addEvtListener)("click")(n.handleArchivedTabClick)(s),(0,r.appendElemToParent)(o)(s),(0,r.pipe)((0,r.appendElemToParent)(s))((0,r.createImage)("../../../dist/assets/icons/archive.svg")(["icon","archived-icon"])("icon representing archived events")("Archived")),(0,r.pipe)((0,r.addTextToElem)("Archived"),(0,r.appendElemToParent)(s))((0,r.elemCreator)("h4")(["tab-text","tab-archived"]));const u=(0,r.elemCreator)("div")(["sidebar-heading","container-projects"]);(0,r.appendElemToParent)(o)(u);const T=(0,r.elemCreator)("div")(["projectHeading-wrapper"]);(0,r.appendElemToParent)(u)(T),(0,r.pipe)((0,r.addEvtListener)("click")(c.handleProjectsTabClick),(0,r.addTextToElem)("Projects"),(0,r.appendElemToParent)(T))((0,r.elemCreator)("h3")(["heading-text","text-projects"])),(0,r.pipe)((0,r.addEvtListener)("click")(a.handleAddNewProjectIconClick),(0,r.appendElemToParent)(T))((0,r.createImage)("../../../dist/assets/icons/plus.svg")(["icon","icon-plus"])("icon of plus symbol")("Add New Project"));const v=(0,r.elemCreator)("div")(["sidebar-project","project"]);(0,r.appendElemToParent)(u)(v),(0,r.pipe)((0,r.addStyleToElem)([["color","#48d1cc"]]),(0,r.addEvtListener)("click")(p.handleCreatedTabsClick),(0,r.addTextToElem)("Sample Project"),(0,r.appendElemToParent)(v))((0,r.elemCreator)("h4")(["project-text","text-sampleProject"])),(0,r.pipe)((0,r.addAttributeToElem)([["data-name","Sample Project"],["data-colour","#48d1cc"]]),(0,r.addEvtListener)("click")(d.handleAddNewTodoIconClick),(0,r.appendElemToParent)(v))((0,r.createImage)("../../../dist/assets/icons/plus.svg")(["icon","icon-plus"])("icon of plus symbol")("Add New Todo"))}}},o={};function t(r){var a=o[r];if(void 0!==a)return a.exports;var d=o[r]={exports:{}};return e[r](d,d.exports,t),d.exports}t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{t(985);const e=t(827),o=t(559),r=t(524),a=t(882),d=t(932),n=t(726);document.addEventListener("DOMContentLoaded",(function(){(0,o.header)(),(0,r.sidebar)(),(0,e.content)(),(0,d.storeSampleProject)(),(0,n.archiveExpiredTodos)(),self.onload=a.projectsAndTodosOnload}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,